@using ToSic.Sxc.Oqt.Client.Services;
@using System.Text.Json;
@using ToSic.Sxc.Oqt.Shared
@using ToSic.Sxc.Oqt.Shared.Dev
@using ToSic.Sxc.Oqt.Shared.Run

@namespace ToSic.Sxc.Oqt.Client
@inherits ModuleBase
@inject ISxcService SxcService
@inject NavigationManager NavigationManager

@inject IRenderTestIds SxcEngine
Test 2dm: @SxcEngine.RenderModule(PageState.Site, PageState.Page, this.ModuleState)

test razor manager: @SxcEngine.Test()

<hr />

test: @TestIds.PrimaryApp

<h2>
    Test API Insights
</h2>

<ol>
    <li>
        <a href="/@WebApiConstants.WebApiRoot/insights/help" target="_new">Insights Help</a>
    </li>
</ol>

<h2>State of App 4 (Blog)</h2>

<ol>
    <li>
        @*Timestamp : @(ToSic.Eav.Apps.State.Get(4).CacheTimestamp)*@
    </li>
    @*
        <li>
            Items in it : @(ToSic.Eav.Apps.State.Get(4).List.Count())
        </li>*@
</ol>

<h2>
    Content / Query API
</h2>
<ol>
    <li>
        Tags
        <a href="/1/@WebApiConstants.WebApiRoot/app/Blog%20App/content/Tag" target="_blank">List</a> or
        <a href="/1/@WebApiConstants.WebApiRoot/app/Blog%20App/content/Tag/6628" target="_blank">One (#6628)</a>
    </li>
    <li>
        BlogPost
        <a href="/1/@WebApiConstants.WebApiRoot/app/Blog%20App/content/BlogPost" target="_blank">List</a> or
        <a href="/1/@WebApiConstants.WebApiRoot/app/Blog%20App/content/BlogPost/6728" target="_blank">One with AppIdentity (#6728)</a> or
        <a href="/1/@WebApiConstants.WebApiRoot/app/Blog%20App/content/BlogPost/d5fce6dd-c16a-4374-aaff-dc223e45b540" target="_blank">One with guAppIdentity (#d5fce6dd-c16a-4374-aaff-dc223e45b540)</a>
    </li>
    <li>
        Tags Query
        <a href="/1/@WebApiConstants.WebApiRoot/app/Blog%20App/query/Tags" target="_blank">List</a> or

    </li>
    <li>
        Routing Table <a href="/route-debugger">Routing debug table</a>
    </li>
</ol>


<h3>Alias</h3>
<pre>@JsonSerializer.Serialize(PageState.Alias, jsonSerializerOptions)</pre>

<h3>Site</h3>
<pre>@JsonSerializer.Serialize(PageState.Site, jsonSerializerOptions)</pre>

<h3>User</h3>
<pre>@JsonSerializer.Serialize(PageState.User, jsonSerializerOptions)</pre>

<h3>ModuleState</h3>
<pre>@JsonSerializer.Serialize(ModuleState, jsonSerializerOptions)</pre>

<h3>PageState</h3>
<pre>@JsonSerializer.Serialize(PageState, jsonSerializerOptions)</pre>


@code {

    public string test1 = "test1";

    public string ToSxcModulePath()
    {
        return "Modules/ToSic.Sxc/";
    }

    public override List<Resource> Resources => new List<Resource>()
    {
        new Resource { ResourceType = ResourceType.Stylesheet, Url = ToSxcModulePath() + "Module.css" },
        new Resource { ResourceType = ResourceType.Script, Url = ToSxcModulePath() + "Module.js" }
    };

    JsonSerializerOptions jsonSerializerOptions = new JsonSerializerOptions()
    {
        WriteIndented = true,
    };

    protected override async Task OnInitializedAsync()
    {
        /*
        try
        {
            //_Sxcs = await SxcService.GetSxcsAsync(ModuleState.ModuleId);
            test1 = ToSic.Eav.Apps.State.Get(4).CacheTimestamp.ToString();

        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Loading Sxc {Error}", ex.Message);
            AddModuleMessage("Error Loading Sxc", MessageType.Error);
            throw;
        }
        */
    }
}