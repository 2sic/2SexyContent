{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/eav-dynamic-form/components/eav-field/eav-field.directive.ts","webpack:///./src/app/eav-dynamic-form/components/eav-form/eav-form.component.css","webpack:///./src/app/eav-dynamic-form/components/eav-form/eav-form.component.html","webpack:///./src/app/eav-dynamic-form/components/eav-form/eav-form.component.ts","webpack:///./src/app/eav-dynamic-form/decorators/input-type.decorator.ts","webpack:///./src/app/eav-dynamic-form/eav-dynamic-form.module.ts","webpack:///./src/app/eav-item-dialog/dialogs/open-multi-item-dialog/open-multi-item-dialog.component.html","webpack:///./src/app/eav-item-dialog/dialogs/open-multi-item-dialog/open-multi-item-dialog.component.ts","webpack:///./src/app/eav-item-dialog/eav-item-dialog.module.ts","webpack:///./src/app/eav-item-dialog/item-edit-form/item-edit-form.component.css","webpack:///./src/app/eav-item-dialog/item-edit-form/item-edit-form.component.html","webpack:///./src/app/eav-item-dialog/item-edit-form/item-edit-form.component.ts","webpack:///./src/app/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component.css","webpack:///./src/app/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component.html","webpack:///./src/app/eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component.ts","webpack:///./src/app/eav-material-controls/adam/adam-hint/adam-hint.component.css","webpack:///./src/app/eav-material-controls/adam/adam-hint/adam-hint.component.html","webpack:///./src/app/eav-material-controls/adam/adam-hint/adam-hint.component.ts","webpack:///./src/app/eav-material-controls/adam/adam.service.ts","webpack:///./src/app/eav-material-controls/adam/browser/adam-browser.component.css","webpack:///./src/app/eav-material-controls/adam/browser/adam-browser.component.html","webpack:///./src/app/eav-material-controls/adam/browser/adam-browser.component.ts","webpack:///./src/app/eav-material-controls/adam/dropzone/dropzone.component.css","webpack:///./src/app/eav-material-controls/adam/dropzone/dropzone.component.html","webpack:///./src/app/eav-material-controls/adam/dropzone/dropzone.component.ts","webpack:///./src/app/eav-material-controls/eav-material-controls.module.ts","webpack:///./src/app/eav-material-controls/input-types/boolean/boolean-default/boolean-default.component.css","webpack:///./src/app/eav-material-controls/input-types/boolean/boolean-default/boolean-default.component.html","webpack:///./src/app/eav-material-controls/input-types/boolean/boolean-default/boolean-default.component.ts","webpack:///./src/app/eav-material-controls/input-types/custom/external/external.component.css","webpack:///./src/app/eav-material-controls/input-types/custom/external/external.component.html","webpack:///./src/app/eav-material-controls/input-types/custom/external/external.component.ts","webpack:///./src/app/eav-material-controls/input-types/datetime/datetime-default/datetime-default.component.css","webpack:///./src/app/eav-material-controls/input-types/datetime/datetime-default/datetime-default.component.html","webpack:///./src/app/eav-material-controls/input-types/datetime/datetime-default/datetime-default.component.ts","webpack:///./src/app/eav-material-controls/input-types/empty/empty-default/empty-default.component.css","webpack:///./src/app/eav-material-controls/input-types/empty/empty-default/empty-default.component.html","webpack:///./src/app/eav-material-controls/input-types/empty/empty-default/empty-default.component.ts","webpack:///./src/app/eav-material-controls/input-types/entity/entity-default/entity-default.component.css","webpack:///./src/app/eav-material-controls/input-types/entity/entity-default/entity-default.component.html","webpack:///./src/app/eav-material-controls/input-types/entity/entity-default/entity-default.component.ts","webpack:///./src/app/eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component.css","webpack:///./src/app/eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component.html","webpack:///./src/app/eav-material-controls/input-types/hyperlink/hyperlink-default/hyperlink-default.component.ts","webpack:///./src/app/eav-material-controls/input-types/hyperlink/hyperlink-library/hyperlink-library.component.css","webpack:///./src/app/eav-material-controls/input-types/hyperlink/hyperlink-library/hyperlink-library.component.html","webpack:///./src/app/eav-material-controls/input-types/hyperlink/hyperlink-library/hyperlink-library.component.ts","webpack:///./src/app/eav-material-controls/input-types/index.ts","webpack:///./src/app/eav-material-controls/input-types/number/number-default/number-default.component.css","webpack:///./src/app/eav-material-controls/input-types/number/number-default/number-default.component.html","webpack:///./src/app/eav-material-controls/input-types/number/number-default/number-default.component.ts","webpack:///./src/app/eav-material-controls/input-types/string/string-default/string-default.component.css","webpack:///./src/app/eav-material-controls/input-types/string/string-default/string-default.component.html","webpack:///./src/app/eav-material-controls/input-types/string/string-default/string-default.component.ts","webpack:///./src/app/eav-material-controls/input-types/string/string-dropdown-query/string-dropdown-query.component.css","webpack:///./src/app/eav-material-controls/input-types/string/string-dropdown-query/string-dropdown-query.component.html","webpack:///./src/app/eav-material-controls/input-types/string/string-dropdown-query/string-dropdown-query.component.ts","webpack:///./src/app/eav-material-controls/input-types/string/string-dropdown/string-dropdown.component.css","webpack:///./src/app/eav-material-controls/input-types/string/string-dropdown/string-dropdown.component.html","webpack:///./src/app/eav-material-controls/input-types/string/string-dropdown/string-dropdown.component.ts","webpack:///./src/app/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component.css","webpack:///./src/app/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component.html","webpack:///./src/app/eav-material-controls/input-types/string/string-font-icon-picker/string-font-icon-picker.component.ts","webpack:///./src/app/eav-material-controls/input-types/string/string-url-path/string-url-path.component.css","webpack:///./src/app/eav-material-controls/input-types/string/string-url-path/string-url-path.component.html","webpack:///./src/app/eav-material-controls/input-types/string/string-url-path/string-url-path.component.ts","webpack:///./src/app/eav-material-controls/localization/eav-language-switcher/eav-language-switcher.component.css","webpack:///./src/app/eav-material-controls/localization/eav-language-switcher/eav-language-switcher.component.html","webpack:///./src/app/eav-material-controls/localization/eav-language-switcher/eav-language-switcher.component.ts","webpack:///./src/app/eav-material-controls/validators/custom-validators.ts","webpack:///./src/app/eav-material-controls/validators/validation-helper.ts","webpack:///./src/app/eav-material-controls/validators/validation-messages-service.ts","webpack:///./src/app/eav-material-controls/wrappers/collapsible-wrapper/collapsible-wrapper.component.css","webpack:///./src/app/eav-material-controls/wrappers/collapsible-wrapper/collapsible-wrapper.component.html","webpack:///./src/app/eav-material-controls/wrappers/collapsible-wrapper/collapsible-wrapper.component.ts","webpack:///./src/app/eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component.css","webpack:///./src/app/eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component.html","webpack:///./src/app/eav-material-controls/wrappers/eav-localization-wrapper/eav-localization-wrapper.component.ts","webpack:///./src/app/eav-material-controls/wrappers/field-parent-wrapper/error-wrapper.component.css","webpack:///./src/app/eav-material-controls/wrappers/field-parent-wrapper/error-wrapper.component.html","webpack:///./src/app/eav-material-controls/wrappers/field-parent-wrapper/error-wrapper.component.ts","webpack:///./src/app/eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component.css","webpack:///./src/app/eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component.html","webpack:///./src/app/eav-material-controls/wrappers/hidden-wrapper/hidden-wrapper.component.ts","webpack:///./src/app/eav-material-controls/wrappers/index.ts","webpack:///./src/app/eav-material-controls/wrappers/text-entry-wrapper/text-entry-wrapper.component.css","webpack:///./src/app/eav-material-controls/wrappers/text-entry-wrapper/text-entry-wrapper.component.html","webpack:///./src/app/eav-material-controls/wrappers/text-entry-wrapper/text-entry-wrapper.component.ts","webpack:///./src/app/shared/constants/index.ts","webpack:///./src/app/shared/constants/input-types-constants.ts","webpack:///./src/app/shared/constants/type-constants.ts","webpack:///./src/app/shared/constants/url-constants.ts","webpack:///./src/app/shared/directives/click-stop-propagination.directive.ts","webpack:///./src/app/shared/effects/content-type.effects.ts","webpack:///./src/app/shared/effects/eav.effects.ts","webpack:///./src/app/shared/effects/item.effects.ts","webpack:///./src/app/shared/helpers/helper.ts","webpack:///./src/app/shared/helpers/localization-helper.ts","webpack:///./src/app/shared/helpers/url-helper.ts","webpack:///./src/app/shared/interceptors/interceptors.ts","webpack:///./src/app/shared/models/adam/adam-config.ts","webpack:///./src/app/shared/models/app-state.ts","webpack:///./src/app/shared/models/custom-input-type.ts","webpack:///./src/app/shared/models/eav-configuration.ts","webpack:///./src/app/shared/models/eav/admin-dialog-data.ts","webpack:///./src/app/shared/models/eav/attribute-def.ts","webpack:///./src/app/shared/models/eav/content-type-def.ts","webpack:///./src/app/shared/models/eav/content-type.ts","webpack:///./src/app/shared/models/eav/eav-attributes-translated.ts","webpack:///./src/app/shared/models/eav/eav-attributes.ts","webpack:///./src/app/shared/models/eav/eav-dimensions.ts","webpack:///./src/app/shared/models/eav/eav-entity.ts","webpack:///./src/app/shared/models/eav/eav-group-assignment.ts","webpack:///./src/app/shared/models/eav/eav-header.ts","webpack:///./src/app/shared/models/eav/eav-type.ts","webpack:///./src/app/shared/models/eav/eav-value.ts","webpack:///./src/app/shared/models/eav/eav-values.ts","webpack:///./src/app/shared/models/eav/index.ts","webpack:///./src/app/shared/models/eav/input-type.ts","webpack:///./src/app/shared/models/eav/item.ts","webpack:///./src/app/shared/models/eav/language.ts","webpack:///./src/app/shared/models/index.ts","webpack:///./src/app/shared/models/json-format-v1/attribute-def1.ts","webpack:///./src/app/shared/models/json-format-v1/attribute1.ts","webpack:///./src/app/shared/models/json-format-v1/attributes1.ts","webpack:///./src/app/shared/models/json-format-v1/content-type-def1.ts","webpack:///./src/app/shared/models/json-format-v1/entity1.ts","webpack:///./src/app/shared/models/json-format-v1/group-assignment1.ts","webpack:///./src/app/shared/models/json-format-v1/index.ts","webpack:///./src/app/shared/models/json-format-v1/json-content-type1.ts","webpack:///./src/app/shared/models/json-format-v1/json-header1.ts","webpack:///./src/app/shared/models/json-format-v1/json-item1.ts","webpack:///./src/app/shared/models/json-format-v1/json-package1.ts","webpack:///./src/app/shared/models/json-format-v1/type1.ts","webpack:///./src/app/shared/models/json-format-v1/value1.ts","webpack:///./src/app/shared/pipes/file-ending-filter.pipe.ts","webpack:///./src/app/shared/pipes/filter.pipe.ts","webpack:///./src/app/shared/pipes/orderby.pipe.ts","webpack:///./src/app/shared/services/content-type.service.ts","webpack:///./src/app/shared/services/dnn-bridge.service.ts","webpack:///./src/app/shared/services/eav-admin-ui.service.ts","webpack:///./src/app/shared/services/eav.service.ts","webpack:///./src/app/shared/services/entity.service.ts","webpack:///./src/app/shared/services/feature.service.ts","webpack:///./src/app/shared/services/field-mask.service.ts","webpack:///./src/app/shared/services/file-type.service.ts","webpack:///./src/app/shared/services/input-type.service.ts","webpack:///./src/app/shared/services/item.service.ts","webpack:///./src/app/shared/services/language.service.ts","webpack:///./src/app/shared/services/script.service.ts","webpack:///./src/app/shared/services/svc-creator.service.ts","webpack:///./src/app/shared/store/actions/content-type.actions.ts","webpack:///./src/app/shared/store/actions/input-type.actions.ts","webpack:///./src/app/shared/store/actions/item.actions.ts","webpack:///./src/app/shared/store/actions/language.actions.ts","webpack:///./src/app/shared/store/index.ts","webpack:///./src/app/shared/store/reducers/content-type.reducer.ts","webpack:///./src/app/shared/store/reducers/index.ts","webpack:///./src/app/shared/store/reducers/input-type.reducer.ts","webpack:///./src/app/shared/store/reducers/item.reducer.ts","webpack:///./src/app/shared/store/reducers/language.reducer.ts","webpack:///./src/app/shared/store/selectors/content-type.selectors.ts","webpack:///./src/app/shared/store/selectors/index.ts","webpack:///./src/app/shared/store/selectors/input-type.selectors.ts","webpack:///./src/app/shared/store/selectors/items.selectors.ts","webpack:///./src/app/shared/store/selectors/language.selectors.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;YACxH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACxH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;YACzH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACxH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;YACpH,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACxH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACzH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACxH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACxH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACxH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACvH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtH,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI;YAC5H,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC1H,GAAG,EAAE,GAAG;SACX,CAAC;QACF,OAAO,KAAK,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAC,CAAC,IAAK,QAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC1E,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACtGgF;AAGjF;IAAA;IAkTA,CAAC;IAhTG,6EAA6E;IAC7E,eAAe;IACf,mBAAmB;IACnB,oBAAoB;IACpB,8BAA8B;IAC9B,sCAAsC;IACtC,YAAY;IACZ,SAAS;IACT,IAAI;IAEJ;;;;;;;OAOG;IACW,4BAAS,GAAvB,UAAwB,eAAuB,EAAE,eAAuB,EAAE,eAA+B,EAAE,YAAiB;QACxH,IAAI,eAAe,EAAE;YACjB,IAAM,WAAW,GAAkB,IAAI,CAAC,4BAA4B,CAAC,eAAe,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;YACrH,+CAA+C;YAC/C,IAAI,WAAW,EAAE;gBACb,OAAO,WAAW,CAAC,KAAK,CAAC;gBACzB,gCAAgC;aACnC;iBAAM;gBACH,IAAM,kBAAkB,GAAkB,IAAI,CAAC,4BAA4B,CAAC,eAAe,EACvF,eAAe,EAAE,eAAe,CAAC,CAAC;gBACtC,gEAAgE;gBAChE,IAAI,kBAAkB,EAAE;oBACpB,OAAO,kBAAkB,CAAC,KAAK,CAAC;iBACnC;qBAAM;oBACH,uBAAuB;oBACvB,kCAAkC;oBAClC,OAAO,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;iBAC7E;aACJ;SACJ;aAAM;YACH,OAAO,YAAY,CAAC;SACvB;IACL,CAAC;IAiCa,kCAAe,GAA7B,UAA8B,aAA4B,EAAE,SAAyB,EAAE,YAAoB;QACvG,4BAA4B;QAC5B,IAAM,aAAa,GAAkB,IAAI,yDAAa,EAAE,CAAC;QAEzD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,aAAG;YAClC,4CAA4C;YAC5C,IAAI,GAAG,KAAK,YAAY,EAAE;gBACtB,aAAa,CAAC,GAAG,CAAC,gBAAQ,SAAS,CAAE,CAAC;aACzC;iBAAM;gBACH,aAAa,CAAC,GAAG,CAAC,gBAAQ,aAAa,CAAC,GAAG,CAAC,CAAE,CAAC;aAClD;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC;IACzB,CAAC;IAED;;;;;OAKG;IACW,yCAAsB,GAApC,UACI,aAA4B,EAAE,YAAoC,EAAE,WAAmB,EAAE,eAAuB;QADpH,iBAiDC;QA/CG,4BAA4B;QAC5B,IAAM,aAAa,GAAkB,IAAI,yDAAa,EAAE,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,aAAa,CAAC,CAAC;QACrE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,sBAAY;YAC3C,IAAM,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,YAAY,CAAC,CAAC;YAChE,sDAAsD;YACtD,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;gBACrD,IAAM,sBAAsB,GAAG,KAAI,CAAC,oCAAoC,CACpE,aAAa,CAAC,YAAY,CAAC,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;gBAE/D,yDAAyD;gBACzD,IAAI,sBAAsB,EAAE;oBACxB,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,YAAY,CAAC,CAAC;oBAChE,aAAa,CAAC,YAAY,CAAC,gBACpB,aAAa,CAAC,YAAY,CAAC,IAAE,MAAM,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAQ;4BACnF,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,WAAW;mCACrD,CAAC,CAAC,KAAK,KAAK,MAAI,WAAa;mCAC7B,CAAC,WAAW,KAAK,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,EAFtB,CAEsB,CAAC;gCACxD,+BAA+B;gCAC/B,CAAC,cACM,QAAQ,IACX,KAAK,EAAE,YAAY,IAEvB,CAAC,CAAC,QAAQ,CAAC;wBACnB,CAAC,CAAC,GACL,CAAC;iBACL;qBAAM;oBACH,aAAa,CAAC,YAAY,CAAC,gBAAQ,aAAa,CAAC,YAAY,CAAC,CAAE,CAAC;iBACpE;gBACD,0DAA0D;gBAC1D,oEAAoE;gBACpE,wFAAwF;gBACxF,sCAAsC;gBACtC,0CAA0C;gBAC1C,uEAAuE;gBACvE,SAAS;gBACT,IAAI;aACP;iBAAM,EAAE,4BAA4B;gBACjC,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,YAAY,CAAC,CAAC;gBACrE,aAAa,CAAC,YAAY,CAAC,gBAAQ,aAAa,CAAC,YAAY,CAAC,CAAE,CAAC;aACpE;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,aAAa,CAAC,CAAC;QAEpE,OAAO,aAAa,CAAC;IACzB,CAAC;IAED;;;;;;;OAOG;IACW,uCAAoB,GAAlC,UAAmC,aAA4B,EAAE,YAAoB,EAAE,QAAa,EAAE,mBAA2B,EAC7H,eAAuB,EAAE,UAAmB;QAC5C,4BAA4B;QAC5B,IAAI,aAAa,GAAkB,IAAI,yDAAa,EAAE,CAAC;QACvD,IAAI,gBAAgB,GAAG,mBAAmB,CAAC;QAE3C,IAAI,UAAU,EAAE;YACZ,gBAAgB,GAAG,MAAI,mBAAqB,CAAC;SAChD;QAED,IAAM,SAAS,gBACR,aAAa,CAAC,YAAY,CAAC,IAAE,MAAM,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAQ;gBACnF,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,mBAAmB;uBAC7D,CAAC,CAAC,KAAK,KAAK,MAAI,mBAAqB;uBACrC,CAAC,mBAAmB,KAAK,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,EAF9B,CAE8B,CAClE;oBACG,6BAA6B;oBAC7B,CAAC,cACM,QAAQ;wBACX,eAAe;wBACf,KAAK,EAAE,QAAQ;wBACf,2CAA2C;wBAC3C,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAS;4BACzC,OAAO,CAAC,SAAS,CAAC,KAAK,KAAK,mBAAmB;mCACxC,SAAS,CAAC,KAAK,KAAK,MAAI,mBAAqB;mCAC7C,CAAC,mBAAmB,KAAK,eAAe,IAAI,SAAS,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC;gCACxE,CAAC,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE;gCAC7B,CAAC,CAAC,SAAS,CAAC;wBACpB,CAAC,CAAC,IAEN,CAAC,CAAC,QAAQ,CAAC;YACnB,CAAC,CAAC,GACL,CAAC;QAEF,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QAE7E,OAAO,aAAa,CAAC;IACzB,CAAC;IAEa,oCAAiB,GAA/B,UAAgC,aAA4B,EAAE,cAA6B,EAAE,YAAoB;QAC7G,4BAA4B;QAC5B,IAAI,aAAa,GAAkB,IAAI,yDAAa,EAAE,CAAC;QAEvD,IAAM,SAAS,gBAER,aAAa,CAAC,YAAY,CAAC,IAAE,MAAM,EAAM,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,SAAE,cAAc,KACjG,CAAC;QAEF,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QAE7E,OAAO,aAAa,CAAC;IACzB,CAAC;IAED;;;;;;;OAOG;IACW,wCAAqB,GAAnC,UAAoC,aAA4B,EAAE,YAAoB,EAAE,iBAAsB,EAC1G,sBAA8B,EAAE,eAAuB,EAAE,UAAmB;QAC5E,4BAA4B;QAC5B,IAAI,aAAa,GAAkB,IAAI,yDAAa,EAAE,CAAC;QACvD,IAAI,gBAAgB,GAAG,iBAAiB,CAAC;QAEzC,IAAI,UAAU,EAAE;YACZ,gBAAgB,GAAG,MAAI,iBAAmB,CAAC;SAC9C;QAED,IAAM,SAAS,gBACR,aAAa,CAAC,YAAY,CAAC,IAAE,MAAM,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAQ;gBACnF,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,sBAAsB;uBAChE,CAAC,sBAAsB,KAAK,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,EADjC,CACiC,CAAC;oBACnE,wCAAwC;oBACxC,CAAC,cACM,QAAQ;wBACX,+BAA+B;wBAC/B,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,IAEvE,CAAC,CAAC,QAAQ,CAAC;YACnB,CAAC,CAAC,GACL,CAAC;QAEF,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QAE7E,OAAO,aAAa,CAAC;IACzB,CAAC;IAED;;;;;;OAMG;IACW,2CAAwB,GAAtC,UAAuC,aAA4B,EAAE,YAAoB,EAAE,WAAmB;QAC1G,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,aAAa,CAAC,CAAC;QACzD,4BAA4B;QAC5B,IAAI,aAAa,GAAkB,IAAI,yDAAa,EAAE,CAAC;QACvD,IAAM,KAAK,GAAkB,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAQ;YACzE,eAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,WAAW;mBAC9C,CAAC,CAAC,KAAK,KAAK,MAAI,WAAa,EADN,CACM,CAAC,KAAK,SAAS;QADnD,CACmD,CAAC,CAAC;QACzD,IAAI,SAAS,GAAmB,IAAI,CAAC;QAErC,IAAI,CAAC,KAAK,EAAE;YACR,oBAAY,aAAa,EAAG;SAC/B;QAED,gDAAgD;QAChD,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,SAAS,gBACF,aAAa,CAAC,YAAY,CAAC,IAAE,MAAM,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAQ;oBACnF,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,WAAW,IAAI,CAAC,CAAC,KAAK,KAAK,MAAI,WAAa,EAAxD,CAAwD,CAAC;wBAC1F,CAAC,cACM,QAAQ;4BACX,wBAAwB;4BACxB,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,mBAAS;gCAC5C,QAAC,SAAS,CAAC,KAAK,KAAK,WAAW,IAAI,SAAS,CAAC,KAAK,KAAK,MAAI,WAAa,CAAC;4BAA1E,CAA0E,CAC7E,IAEL,CAAC,CAAC,QAAQ,CAAC;gBACnB,CAAC,CAAC,GACL,CAAC;SACL;QACD,yDAAyD;QACzD,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,SAAS,gBAEF,aAAa,CAAC,YAAY,CAAC,IAAE,MAAM,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAQ;oBACtF,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,WAAW,IAAI,CAAC,CAAC,KAAK,KAAK,MAAI,WAAa,EAAxD,CAAwD,CAAC,CAAC;gBACnG,CAAC,CAAC,GACL,CAAC;SACL;QAED,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QAE7E,OAAO,aAAa,CAAC;IACzB,CAAC;IAEa,oCAAiB,GAA/B,UAAgC,QAAuB,EAAE,eAAuB,EAAE,eAAuB;QACrG,IAAM,kBAAkB,GAA4B,IAAI,mEAAuB,CAAC;QAChF,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,uBAAa;YACvC,kBAAkB,CAAC,aAAa,CAAC,GAAG,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAC5E,eAAe,EAAE,QAAQ,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IArQa,+CAA4B,GAAG,UAAC,mBAAmC,EAAE,WAAmB,EAAE,eAAuB;QAE3H,OAAO,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAQ;YAC3C,eAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,WAAW;mBAC9C,CAAC,CAAC,KAAK,KAAK,MAAI,WAAa;mBAC7B,CAAC,WAAW,KAAK,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,EAF7B,CAE6B,CAAC,KAAK,SAAS;QAF1E,CAE0E,CAAC,CAAC;IACpF,CAAC;IAEa,uDAAoC,GAC9C,UAAC,mBAAmC,EAAE,WAAmB,EAAE,eAAuB;QAC9E,OAAO,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC;YACtC,QAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC;gBACf,QAAC,CAAC,KAAK,KAAK,WAAW;uBACpB,CAAC,CAAC,KAAK,KAAK,MAAI,WAAa;uBAC7B,CAAC,WAAW,KAAK,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC;YAFvD,CAEuD,CAAC;QAH5D,CAG4D,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACjF,CAAC;IACL;;OAEG;IACW,6CAA0B,GACpC,UAAC,mBAAmC,EAAE,WAAmB,EAAE,eAAuB;QAC9E,OAAO,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAQ;YACnE,eAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC;mBAChD,CAAC,WAAW,KAAK,eAAe,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,EAD7B,CAC6B,CAAC;QAD5D,CAC4D,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACzF,CAAC;IAES,6CAA0B,GAAG,UAAC,mBAAmC,EAAE,WAAmB;QAChG,OAAO,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAQ;YAC7C,eAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,MAAI,WAAa,EAA7B,CAA6B,CAAC;QAA5D,CAA4D,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACjF,CAAC;IAyOL,yBAAC;CAAA;AAlT8B;;;;;;;;;;;;;;;;;ACJoB;AACY;AAE/D;IAAA;IAkFA,CAAC;IApEU,mCAAyB,GAAhC,UAAiC,GAAW;QACxC,IAAM,WAAW,GAA8B,EAAE,CAAC;QAClD,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,WAAC;YACpB,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAClD;QACL,CAAC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC;IACvB,CAAC;IA2Bc,8BAAoB,GAAnC,UAAoC,UAAmB,EAAE,UAAkB;QACvE,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;SACnD;QAED,IAAM,GAAG,GAAG,UAAU,IAAI,EAAE,CAAC;QAC7B,QAAQ,GAAG,EAAE;YACT,KAAK,EAAE,CAAC;YACR,KAAK,eAAe,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;YACtE,KAAK,eAAe,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YAC1D,OAAO,CAAC,CAAC;gBACL,OAAO,CAAC,KAAK,CAAC,oCAAoC,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACrE,OAAO,EAAE,CAAC;aACb;SACJ;IACL,CAAC;IAED;;;;;GAKD;IACe,2BAAiB,GAA/B,UAAgC,WAAmB,EAAE,WAAmB;QACpE,IAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAEtD,4CAA4C;QAC5C,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;YAC1C,OAAO,WAAW,CAAC;SACtB;QAED,OAAO,WAAW,GAAG,KAAK,GAAG,GAAG,GAAG,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3F,CAAC;IA/EuB,uBAAa,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAEjH,sBAAY,GAAG,UAAC,KAAa,EAAE,QAAgB,EAAE,cAAsB;QAC1E,OAAO,IAAI,gEAAW,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,gBAAgB,EAAE,QAAQ;YAC1B,UAAU,EAAE,cAAc;YAC1B,cAAc,EAAE,gCAAgC;YAChD,0BAA0B,EAAE,kBAAkB;SACjD,CAAC,CAAC;IACP,CAAC;IAYD;;OAEG;IACI,6BAAmB,GAAG,UAAC,WAAsC;QAChE,OAAO,IAAI,0EAAgB,CACvB,WAAW,CAAC,QAAQ,CAAC,EACrB,WAAW,CAAC,OAAO,CAAC,EACpB,WAAW,CAAC,SAAS,CAAC,EACtB,WAAW,CAAC,MAAM,CAAC,EACnB,WAAW,CAAC,QAAQ,CAAC,EACrB,WAAW,CAAC,OAAO,CAAC,EACpB,WAAW,CAAC,MAAM,CAAC,EACnB,WAAW,CAAC,SAAS,CAAC,EACtB,WAAW,CAAC,OAAO,CAAC,EACpB,WAAW,CAAC,KAAK,CAAC,EAClB,WAAW,CAAC,MAAM,CAAC,EACnB,WAAW,CAAC,YAAY,CAAC,EACzB,WAAW,CAAC,YAAY,CAAC,EACzB,WAAW,CAAC,YAAY,CAAC,EACzB,WAAW,CAAC,KAAK,CAAC,EAClB,WAAW,CAAC,aAAa,CAAC,EAC1B,SAAS,CAAC,oBAAoB,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAClG,CAAC;IACN,CAAC;IAmCL,gBAAC;CAAA;AAlFqB;;;;;;;;;;;;;;;;;;;;;;;;;;ACHqB;AAIU;AAGrD;IAGI,2BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED,qCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAC9C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;SAC1D;QACD,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC;YACvB,UAAU,EAAE;gBACR,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG;gBAC3B,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI;gBACrC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG;gBAC9B,cAAc,EAAE,gCAAgC;gBAChD,0BAA0B,EAAE,kBAAkB;aACjD;SACJ,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IApBQ,iBAAiB;QAD7B,gEAAU,EAAE;yCAIuB,gEAAU;OAHjC,iBAAiB,CAqB7B;IAAD,wBAAC;CAAA;AArB6B;;;;;;;;;;;;;;;ACP9B;AAAA;IACI,oBAAmB,cAAyD,EACjE,iBAAiC,EACjC,QAAyB,EACzB,YAA4B,EAC5B,UAAuB,EACvB,WAAuB,EACvB,oBAAiC,EACjC,cAA+B,EAC/B,SAAsB;QARd,oDAAmC,aAAa,EAAE,KAAK,EAAE;QACjE,4DAAiC;QACjC,2CAAyB;QACzB,kDAA4B;QAC5B,4CAAuB;QACvB,6CAAuB;QACvB,gEAAiC;QACjC,uDAA+B;QAC/B,0CAAsB;QARd,mBAAc,GAAd,cAAc,CAA2C;QACjE,sBAAiB,GAAjB,iBAAiB,CAAgB;QACjC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,eAAU,GAAV,UAAU,CAAa;QACvB,gBAAW,GAAX,WAAW,CAAY;QACvB,yBAAoB,GAApB,oBAAoB,CAAa;QACjC,mBAAc,GAAd,cAAc,CAAiB;QAC/B,cAAS,GAAT,SAAS,CAAa;QAC7B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IACL,iBAAC;AAAD,CAAC;;AAED;IACI,wBAAmB,aAAsB;QAAtB,kBAAa,GAAb,aAAa,CAAS;QACrC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACvBD;AAAA;IAAA;IAGA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA;IAGI,yBAAY,QAAa;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA;IACI,0BAAmB,MAAc,EACtB,KAAa,EACb,OAAe,EACf,IAAY,EACZ,MAAc,EACd,KAAa,EACb,IAAY,EACZ,OAAe,EACf,KAAa,EACb,GAAW,EACX,IAAY,EACZ,UAAkB,EAClB,UAAkB,EAClB,UAAkB,EAClB,GAAW;IAClB,kCAAkC;IAClC,mCAAmC;IAC5B,WAAmB;IAC1B,+BAA+B;IACxB,iBAAsB;QAnBd,WAAM,GAAN,MAAM,CAAQ;QACtB,UAAK,GAAL,KAAK,CAAQ;QACb,YAAO,GAAP,OAAO,CAAQ;QACf,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,UAAK,GAAL,KAAK,CAAQ;QACb,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,eAAU,GAAV,UAAU,CAAQ;QAClB,eAAU,GAAV,UAAU,CAAQ;QAClB,eAAU,GAAV,UAAU,CAAQ;QAClB,QAAG,GAAH,GAAG,CAAQ;QAGX,gBAAW,GAAX,WAAW,CAAQ;QAEnB,sBAAiB,GAAjB,iBAAiB,CAAK;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,0CAA0C;QAC1C,4CAA4C;QAC5C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC/C,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACxCD;AAAA;IACI,yBAAmB,EAAU,EAAS,IAAY;QAA/B,OAAE,GAAF,EAAE,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAC9C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACLwC;AAEQ;AAEjD;IAOI,sBAAY,IAAY,EAAE,IAAY,EAAE,OAAgB,EAAE,QAAqB,EAAE,QAAuB;QACpG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACW,mBAAM,GAApB,UAAqB,IAAmB;QACpC,uCAAuC;QACvC,IAAM,aAAa,GAAG,qDAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAM,QAAQ,GAAG,6DAAa,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACpE,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;IACzF,CAAC;IAED;;;OAGG;IACW,wBAAW,GAAzB,UAA0B,kBAAmC;QACzD,IAAM,iBAAiB,GAAmB,EAAE,CAAC;QAC7C,IAAI,kBAAkB,KAAK,SAAS,EAAE;YAClC,kBAAkB,CAAC,OAAO,CAAC,uBAAa;gBACpC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;SACN;QACD,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IACL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;AC3C8C;AACN;AAGzC;IAQI,wBAAY,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,WAAmB,EAAE,UAA0B,EAAE,QAAqB;QACvH,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED;;;OAGG;IACW,qBAAM,GAApB,UAAqB,IAAqB;QACtC,IAAM,iBAAiB,GAAG,2DAAY,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpE,IAAM,aAAa,GAAG,qDAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3D,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,iBAAiB,EAAE,aAAa,CAAC,CAAC;IAClH,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;AC9BmD;AACX;AACO;AAEhD;IAII,qBAAY,MAAiB,EAAE,WAA2B;QACtD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAED;;;OAGG;IACW,kBAAM,GAApB,UAAqB,WAAgB;QACjC,OAAO,IAAI,WAAW;QAClB,4BAA4B;QAC5B,6CAA6C;QAC7C,qDAAS,CAAC,MAAM,CAAC,IAAI,2DAAW,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EACxE,gEAAc,CAAC,MAAM,CAAC,WAAW,CAAC,CACrC,CAAC;IACN,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACzBD;AAAA;IAAA;IAEA,CAAC;IAAD,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACFwC;AAEF;AAGvC;IAAA;IAoEA,CAAC;IAjEG;;;OAGG;IACW,oBAAM,GAApB,UAAwB,WAAwB;QAC5C,IAAM,cAAc,GAAkB,IAAI,aAAa,EAAE,CAAC;QAE1D,qDAAqD;QACrD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,wBAAc;YAC3C,IAAI,WAAW,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBAC5C,IAAM,YAAU,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC;gBAC/C,gDAAgD;gBAChD,MAAM,CAAC,IAAI,CAAC,YAAU,CAAC,CAAC,OAAO,CAAC,uBAAa;oBACzC,IAAI,YAAU,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;wBAC1C,0CAA0C;wBAC1C,cAAc,CAAC,aAAa,CAAC,GAAG,qDAAS,CAAC,MAAM,CAAI,YAAU,CAAC,aAAa,CAAC,CAAC,CAAC;qBAClF;gBACL,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,cAAc,CAAC,CAAC;QACpD,OAAO,cAAc,CAAC;IAC1B,CAAC;IACD;;;;OAIG;IACW,mCAAqB,GAAnC,UAAoC,cAA2B;QAC3D,IAAM,cAAc,GAAkB,IAAI,aAAa,EAAE,CAAC;QAC1D,IAAI,cAAc,KAAK,SAAS,EAAE;YAC9B,sDAAsD;YACtD,cAAc,CAAC,OAAO,CAAC,mBAAS;gBAC5B,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,EAAE;oBAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,sBAAY;wBAClD,cAAc,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;oBACzF,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;YACH,4FAA4F;YAC5F,cAAc,CAAC,OAAO,CAAC,mBAAS;gBAC5B,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,EAAE;oBAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,sBAAY;wBAClD,cAAc,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;oBACzF,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;SACN;QACD,OAAO,cAAc,CAAC;IAC1B,CAAC;IAED;;OAEG;IACW,kCAAoB,GAAG,UAAC,KAA6B;QAC/D,IAAM,aAAa,GAAkB,IAAI,aAAa,EAAE,CAAC;QAEzD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,kBAAQ;YAC/B,IAAM,SAAS,GAAoB,EAAE,CAAC;YACtC,aAAa,CAAC,QAAQ,CAAC,GAAG,IAAI,qDAAS,CAAC,CAAC,IAAI,mDAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC;IACzB,CAAC;IAEL,oBAAC;CAAA;AApEyB;;;;;;;;;;;;;;ACF1B;AAAA;IAGI,uBAAY,KAAQ;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH;;;;;;;;;;;;;;;;;QAiBI;IAEJ;;;;;OAKG;IACW,kDAAoC,GAAlD,UAAmD,SAAwB,EAAE,YAAoB,EAAE,eAAuB;QAGtH,IAAM,YAAY,GAAmB,SAAS,CAAC,YAAY,CAAC,CAAC;QAE7D,IAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAQ;YAC/C,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,eAAe,EAA3B,CAA2B,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;IACtB,CAAC;IAEa,oBAAM,GAApB;QACI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACtDgD;AACjD,oDAAoD;AACf;AAGrC;IAWI,mBAAY,EAAU,EAAE,OAAe,EAAE,IAAY,EAAE,IAAa,EAAE,UAAyB,EAAE,KAAa,EAAE,QAAqB;QACjI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACW,gBAAM,GAApB,UAAqB,IAAa;QAC9B,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACxD,IAAM,aAAa,GAAG,6DAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEpD,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,IAAI,EACT,IAAI,iDAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EACzC,aAAa,EACb,IAAI,CAAC,KAAK,EACV,WAAW,CAAC,CAAC;IACrB,CAAC;IAED;;;MAGE;IACY,qBAAW,GAAzB,UAA0B,YAAuB;QAC7C,IAAM,gBAAgB,GAAgB,IAAI,KAAK,EAAa,CAAC;QAC7D,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;YACrD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;YAC3C,YAAY,CAAC,OAAO,CAAC,iBAAO;gBACxB,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;SACN;QACD,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACzDD;AAAA;IASI,4BAAY,IAAY,EAAE,IAAY,EAAE,KAAa,EAAE,GAAY,EAC/D,cAAuB,EAAE,WAAoB,EAAE,iBAAyB;QACxE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC/C,CAAC;IAEa,yBAAM,GAApB,UAAqB,gBAAkC;QACnD,OAAO,gBAAgB,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,EACjH,gBAAgB,CAAC,GAAG,EAAE,gBAAgB,CAAC,cAAc,EAAE,gBAAgB,CAAC,WAAW,EACnF,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACnD,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;AC1B2D;AACnB;AAEzC;IAWI,mBAAY,CAAS,EACjB,QAAgB,EAChB,IAAY,EACZ,eAAuB,EACvB,QAAqB,EACrB,KAAyB,EACzB,OAAY,EACZ,KAAa,EACb,eAAuB;QACvB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACW,gBAAM,GAApB,UAAqB,IAAiB;QAClC,IAAM,aAAa,GAAG,qDAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAM,kBAAkB,GAAG,wEAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjE,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,aAAa,EAAE,kBAAkB,EACrG,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC7CD;AAAA;IAII,iBAAY,EAAU,EAAE,IAAY;QAChC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACPgD;AAEjD;IAII,kBAAY,KAAQ,EAAE,UAA8B;QAChD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED;;;OAGG;IACW,eAAM,GAApB,UAAwB,MAAiB;QACrC,IAAM,gBAAgB,GAAkB,EAAE,CAAC,CAAC,2BAA2B;QACvE,0CAA0C;QAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,mBAAS;YACjC,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;gBAClC,IAAM,YAAU,GAAuB,EAAE,CAAC;gBAE1C,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAC,QAAa;oBACvC,YAAU,CAAC,IAAI,CAAC,IAAI,6DAAa,CAAI,QAAQ,CAAC,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;gBACH,2DAA2D;gBAC3D,gBAAgB,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,YAAU,CAAC,CAAC,CAAC;aACtE;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AChCsC;AAEvC;IAGI,mBAAY,MAAqB;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED;;;OAGG;IACW,gBAAM,GAApB,UAAwB,MAAiB;QACrC,OAAO,IAAI,SAAS,CAAI,mDAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBgD;AACR;AACX;AACS;AACE;AACQ;AACJ;AACJ;AACH;AACgC;AAC7B;;;;;;;;;;;;;;ACVzC;AAAA;IACI,mBAAmB,MAAc,EACtB,WAAmB,EACnB,KAAa,EACb,IAAY;QAHJ,WAAM,GAAN,MAAM,CAAQ;QACtB,gBAAW,GAAX,WAAW,CAAQ;QACnB,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACXwC;AACA;AAGzC;IAII,cAAY,MAAiB,EAAE,MAAiB;QAC5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED;;;OAGG;IACW,WAAM,GAApB,UAAqB,IAAe;QAChC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,IAAI,IAAI;QACX,4BAA4B;QAC5B,qDAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAC7B,qDAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAChC,CAAC;IACN,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACzBD;AAAA;IAII,kBAAY,GAAW,EAAE,IAAY;QACjC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACRsC;AACe;;;;;;;;;;;;;;ACCtD;AAAA;IAMI,uBAAY,IAAY,EAAE,IAAY,EAAE,OAAgB,EAAE,QAAmB;QACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACZD;AAAA;IAAA;IAEA,CAAC;IAAD,iBAAC;AAAD,CAAC;;AAED;;;;;;;;;;;;;;;;;;;;;;;KAuBK;;;;;;;;;;;;;;;;AC3B6B;AAElC;IAAA;IAcA,CAAC;IAViB,kBAAM,GAApB,UAAwB,aAA4B;QAChD,IAAM,aAAa,GAAgB,IAAI,WAAW,EAAE,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,yBAAe;YAC9C,IAAI,aAAa,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;gBAC/C,aAAa,CAAC,eAAe,CAAC,GAAG,8CAAM,CAAC,MAAM,CAAI,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;aACrF;QACL,CAAC,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;IACzB,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACfD;AAAA;IAQI,yBAAY,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,WAAmB,EAAE,UAA2B,EAAE,QAAmB;QACtH,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACnB2C;AACZ;AAGhC;IASI,iBAAY,EAAU,EAAE,OAAe,EAAE,IAAY,EAAE,IAAW,EAAE,UAAuB,EAAE,KAAa,EAAE,QAAmB;QAC3H,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;;;;;;;QAQI;IAGU,cAAM,GAApB,UAAqB,MAAiB;QAClC,IAAM,WAAW,GAAG,wDAAW,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC1D,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEpD,OAAO,IAAI,OAAO,CACd,MAAM,CAAC,EAAE,EACT,MAAM,CAAC,OAAO,EACd,MAAM,CAAC,IAAI,EACX,IAAI,4CAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAC3C,WAAW,EACX,MAAM,CAAC,KAAK,EACZ,SAAS,CAAC,CAAC;IACnB,CAAC;IAGa,mBAAW,GAAzB,UAA0B,cAA2B;QACjD,IAAM,cAAc,GAAc,IAAI,KAAK,EAAW,CAAC;QACvD,IAAI,cAAc,KAAK,SAAS,IAAI,cAAc,KAAK,IAAI,EAAE;YACzD,cAAc,CAAC,OAAO,CAAC,mBAAS;gBAC5B,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;SACN;QACD,OAAO,cAAc,CAAC;IAC1B,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACxDD;AAAA;IASI,0BAAY,IAAY,EAAE,IAAY,EAAE,KAAa,EAAE,GAAY,EAC/D,cAAuB,EAAE,WAAoB,EAAE,iBAAyB;QACxE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC/C,CAAC;IAEa,uBAAM,GAApB,UAAqB,kBAAsC;QACvD,OAAO,kBAAkB,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,EAAE,kBAAkB,CAAC,IAAI,EAAE,kBAAkB,CAAC,KAAK,EACvH,kBAAkB,CAAC,GAAG,EAAE,kBAAkB,CAAC,cAAc,EAAE,kBAAkB,CAAC,WAAW,EACzF,kBAAkB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrD,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BqD;AACL;AACb;AACoB;AACf;AACM;AACF;AACH;AACV;;;;;;;;;;;;;;ACLhC;AAAA;IAII,0BAAY,CAAc,EAAE,WAA4B;QACpD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAOL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACjBsD;AAEnB;AAEpC;IAUI,qBAAY,QAAgB,EACxB,IAAY,EACZ,eAAuB,EACvB,QAAmB,EACnB,KAAuB,EACvB,OAAY,EACZ,KAAa,EACb,eAAuB;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAED;;QAEI;IAEU,kBAAM,GAApB,UAAqB,IAAe;QAChC,IAAM,aAAa,GAAG,gDAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAM,gBAAgB,GAAG,mEAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,aAAa,EAAE,gBAAgB,EAClG,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;AC1CmC;AACS;AAI7C;IAII,mBAAY,MAAmB,EAAE,MAAe;QAC5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED;;;;QAII;IAEU,gBAAM,GAApB,UAAqB,IAAU;QAC3B,OAAO,IAAI,SAAS,CAChB,yDAAW,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAC/B,gDAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAC9B,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACtBD;AAAA;IAGI,wBAAwB;IAExB,sBAAY,CAAc,EAAE,WAA6B;QACrD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAYL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACxBD;AAAA;IAII,eAAY,EAAU,EAAE,IAAY;QAChC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA;IAAA;IAcA,CAAC;IAViB,aAAM,GAApB,UAAwB,SAAuB;QAC3C,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5D,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAQ;YAC7B,IAAM,aAAa,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,EAAP,CAAO,CAAC,CAAC,IAAI,EAAE,CAAC;YACnE,SAAS,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;IACrB,CAAC;IACL,aAAC;AAAD,CAAC;;AAED;;;;;;;;;;;;;;;;;;;;;;;KAuBK;;;;;;;;;;;;;;;;;;;;;;ACzC+C;AAGpD;IAAA;IAQA,CAAC;IAPG,wCAAS,GAAT,UAAU,KAAY,EAAE,gBAAgB;QACpC,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,EAAE,CAAC;SAAE;QAC1B,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,KAAK,CAAC,MAAM,CAAC,YAAE,IAAI,uBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAApE,CAAoE,CAAC,CAAC;IACpG,CAAC;IAPQ,oBAAoB;QADhC,0DAAI,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;OACtB,oBAAoB,CAQhC;IAAD,2BAAC;CAAA;AARgC;;;;;;;;;;;;;;;;;;;;;;ACHmB;AAGpD;IAAA;IASA,CAAC;IARG,8BAAS,GAAT,UAAU,KAAY,EAAE,KAAa,EAAE,KAAa,EAAE,OAAuB;QAAvB,wCAAuB;QACzE,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,EAAE,CAAC;SAAE;QAC1B,IAAI,OAAO,EAAE;YACT,OAAO,KAAK,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,KAAK,CAAC,KAAK,KAAK,EAAnB,CAAmB,CAAC,CAAC;SAClD;aAAM;YACH,OAAO,KAAK,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,KAAK,CAAC,KAAK,KAAK,EAAnB,CAAmB,CAAC,CAAC;SAClD;IACL,CAAC;IARQ,UAAU;QADtB,0DAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;OACZ,UAAU,CAStB;IAAD,iBAAC;CAAA;AATsB;;;;;;;;;;;;;;;;;;;;;;ACH6B;AAKpD;IAAA;IAaA,CAAC;IAZG,+BAAS,GAAT,UAAU,KAAY,EAAE,KAAa;QACjC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YACtB,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;gBACrB,OAAO,CAAC,CAAC,CAAC;aACb;iBAAM,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC5B,OAAO,CAAC,CAAC;aACZ;iBAAM;gBACH,OAAO,CAAC,CAAC;aACZ;QACL,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACjB,CAAC;IAZQ,WAAW;QAHvB,0DAAI,CAAC;YACF,IAAI,EAAE,SAAS;SAClB,CAAC;OACW,WAAW,CAavB;IAAD,kBAAC;CAAA;AAbuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJmB;AACO;AACd;AACkC;AAChB;AAEG;AAEmB;AACtC;AAItC;IACE,mDAAmD;IACnD,4BAAoB,UAAsB,EAAU,KAAgC;QAAhE,eAAU,GAAV,UAAU,CAAY;QAAU,UAAK,GAAL,KAAK,CAA2B;IACpF,CAAC;IAED;;;OAGG;IACI,4CAAe,GAAtB,UAAuB,IAAY;QACjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yFAAwC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEM,6CAAgB,GAAvB,UAAwB,YAAgC;QAAxD,iBAKC;QAJC,YAAY,CAAC,OAAO,CAAC,UAAC,gBAAkC;YACtD,IAAM,WAAW,GAAgB,oEAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YACtE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gGAA+C,CAAC,WAAW,CAAC,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACI,+CAAkB,GAAzB,UAA0B,EAAU;QAClC,OAAO,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,sDAAyB,CAAC;aACjC,IAAI,CACH,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,EAAzB,CAAyB,CAAC,EAA3C,CAA2C,CAAC,CACzD,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,8CAAiB,GAAxB,UAAyB,EAAU;QACjC,OAAO,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,sDAAyB,CAAC;aACjC,IAAI,CACH,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,EAAzB,CAAyB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,OAAO,KAAK,IAAI,EAApB,CAAoB,CAAC,EAApG,CAAoG,CAAC,CAClH,CAAC;IACN,CAAC;IAED;;OAEG;IACI,+DAAkC,GAAzC,UAA0C,IAAY;QAAtD,iBAWC;QAVC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,4FAA0F,IAAM,CACjG;aACE,IAAI,CACH,0DAAG,CAAC,UAAC,IAAsB;YACzB,OAAO,oEAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC;QACF,iEAAiE;QACjE,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACN,CAAC;IAED;;OAEG;IACI,gDAAmB,GAA1B,UAA2B,IAAY;QAAvC,iBAWC;QAVC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,0DAAwD,IAAM,CAC/D;aACE,IAAI,CACH,0DAAG,CAAC,UAAC,IAAsB;YACzB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,iEAAiE;QACjE,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACN,CAAC;IAEO,wCAAW,GAAnB,UAAoB,KAAU;QAC5B,gFAAgF;QAChF,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,OAAO,uDAAoB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAjFU,kBAAkB;QAD9B,gEAAU,EAAE;yCAGqB,+DAAU,EAAiB,iDAAK;OAFrD,kBAAkB,CAkF9B;IAAD,yBAAC;CAAA;AAlF8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AACO;AACoB;AAChB;AAGI;AAG1D;IACE,0BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAExC,qCAAU,GAAjB,UAAkB,KAAa,EAAE,MAAc,EAAE,WAAmB,EAAE,IAAY,EAAE,KAAa;QAAjG,iBAsBC;QArBC,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAEzC,IAAI,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;YAC9E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qEAAY,CAAC,OAAO,GAAG,2CAA2C;kBACzF,kBAAkB,CAAC,MAAM,CAAC;kBAC1B,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;kBAC7B,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;kBAClD,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;kBAChC,SAAS,GAAG,KAAK,CAAC;iBACnB,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;gBACZ,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YACF,sDAAsD;YACtD,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;YACJ,+CAA+C;YAC/C,4BAA4B;SAC7B;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEO,sCAAW,GAAnB,UAAoB,KAAU;QAC5B,gFAAgF;QAChF,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,OAAO,uDAAoB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAhCU,gBAAgB;QAD5B,gEAAU,EAAE;yCAEqB,+DAAU;OAD/B,gBAAgB,CAiC5B;IAAD,uBAAC;CAAA;AAjC4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AAEuB;AAIlE;IACI;QAEA;;WAEG;QACI,6BAAwB,GAAG,UAAC,MAAiB,EAAE,QAAgB,EAAE,SAAc;YAClF,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC1B,KAAK,EAAE,OAAO;gBACd,IAAI,EAAmB;oBACnB,EAAE,EAAE,QAAQ;oBACZ,IAAI,EAAE,6EAAmB,CAAC,oBAAoB;iBACjD;aACJ,CAAC,CAAC;QACP,CAAC;QAED;;WAEG;QACI,4BAAuB,GAAG,UAAC,MAAiB,EAAE,SAAc;YAC/D,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC1B,KAAK,EAAE,OAAO;gBACd,iBAAiB;gBACjB,uBAAuB;gBACvB,oBAAoB;gBACpB,IAAI,EAAmB;oBACnB,EAAE,EAAE,IAAI;oBACR,IAAI,EAAE,6EAAmB,CAAC,mBAAmB;iBAChD;aACJ,CAAC,CAAC;QAEP,CAAC;IA9Be,CAAC;IADR,iBAAiB;QAD7B,gEAAU,EAAE;;OACA,iBAAiB,CAgC7B;IAAD,wBAAC;CAAA;AAhC6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLa;AACoB;AAC3B;AAC2C;AACzB;AACL;AAGJ;AACe;AACV;AACW;AAGH;AAI1D;IAQE,oBAAoB,UAAsB,EAChC,KAAgC,EAChC,WAAwB,EACxB,kBAAsC,EACtC,KAAqB;QAJ/B,iBAKC;QALmB,eAAU,GAAV,UAAU,CAAY;QAChC,UAAK,GAAL,KAAK,CAA2B;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QAV/B,2EAA2E;QACnE,6BAAwB,GAAG,IAAI,4CAAO,EAA2B,CAAC;QAC1E,wBAAmB,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;QAWnE,wBAAwB;QACxB,8DAA8D;QAC9D,IAAI;QAEG,wBAAmB,GAAG;YAC3B,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE;gBACnB,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;aACtC;YAED,IAAI,KAAI,CAAC,SAAS,EAAE;gBAClB,OAAO,KAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;aAC3C;QACH,CAAC;IAhBD,CAAC;IAkBM,uCAAkB,GAAzB,UAA0B,KAAa,EAAE,KAAa;QAAtD,iBAoBC;QAnBC,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvC,uDAAuD;QACvD,uDAAuD;QACvD,uDAAuD;QACvD,uDAAuD;QACvD,uDAAuD;QACvD,uDAAuD;QACvD,uGAAuG;QACvG,6EAA6E;QAC7E,8BAA8B;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAI,sEAAY,CAAC,OAAO,0BAAqB,KAAO,EAC7E,IAAI,CAAC;aACJ,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,yDAAyD;QACzD,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACN,CAAC;IACD,gCAAgC;IACzB,+CAA0B,GAAjC,UAAkC,KAAa,EAAE,WAAuB;QAAxE,iBAYC;QAXC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACzC,8BAA8B;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAI,sEAAY,CAAC,OAAO,0BAAqB,KAAO,EAC7E,IAAI,CAAC;aACJ,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,yDAAyD;QACzD,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACN,CAAC;IAGM,6BAAQ,GAAf,UAAgB,KAAa,EAAE,IAAU,EAAE,YAAoC,EAAE,mBAA2B,EAAE,eAAuB;QACnI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0FAA0C,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,mBAAmB,EAAE,eAAe,CAAC,CAAC,CAAC;IACvI,CAAC;IAEM,oCAAe,GAAtB,UAAuB,IAAS;QAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iGAAiD,CAAC,IAAI,CAAC,CAAC,CAAC;IACnF,CAAC;IAEM,kCAAa,GAApB,UAAqB,KAAU;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,+FAA+C,CAAC,KAAK,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,+CAA+C;IAC/C,2HAA2H;IACpH,6BAAQ,GAAf,UAAgB,KAAa,EAAE,UAAkB,EAAE,IAAY;QAA/D,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,2CAA2C;QAC3C,y+BAAy+B;QAEz+B,uBAAuB;QACvB,4BAA4B;QAE5B,8BAA8B;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAI,sEAAY,CAAC,OAAO,0BAAqB,KAAK,oBAAe,UAAY,EACtG,IAAI,CAAC;aACJ,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,0DAAG,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,EAA7B,CAA6B,CAAC,EAC1C,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACN,CAAC;IAED;;MAEE;IACK,8CAAyB,GAAhC,UAAiC,UAAmC;QAClE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED;;KAEC;IACO,wCAAmB,GAA3B,UAA4B,KAAqB;QAC/C,IAAM,qBAAqB,GAAG,6DAAS,CAAC,yBAAyB,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC3F,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;QAC5D,mGAAmG;QACnG,IAAI,CAAC,SAAS,GAAG,6DAAS,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,CAAC;IACxE,CAAC;IAEO,gCAAW,GAAnB,UAAoB,KAAU;QAC5B,gFAAgF;QAChF,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,OAAO,uDAAoB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IA7HU,UAAU;QADtB,gEAAU,EAAE;yCASqB,+DAAU;YACzB,iDAAK;YACC,yDAAW;YACJ,wEAAkB;YAC/B,8DAAc;OAZpB,UAAU,CA8HtB;IAAD,iBAAC;CAAA;AA9HsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBoB;AACO;AAEwB;AACpB;AAEI;AAG1D;IAEE,uBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED;;;;;OAKG;IACI,4CAAoB,GAA3B,UAA4B,KAAa,EAAE,IAAY,EAAE,MAAc;QAAvE,iBAiBC;QAhBC,8BAA8B;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAI,qEAAY,CAAC,OAAO,0CAAuC,EACxF,IAAI,EACJ;YACE,MAAM,EAAE;gBACN,eAAe,EAAE,MAAM;gBACvB,KAAK,EAAE,KAAK;aACb;SACF,CACF,CAAC,IAAI,CACJ,0DAAG,CAAC,UAAC,IAAS;YACZ,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,4DAA4D;QAC5D,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACJ,CAAC;IAEM,8BAAM,GAAb,UAAc,KAAa,EAAE,IAAY,EAAE,EAAU,EAAE,QAAiB;QACtE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAI,qEAAY,CAAC,OAAO,wBAAqB,EACrE;YACE,wBAAwB;YACxB,MAAM,EAAE;gBACN,aAAa,EAAE,IAAI;gBACnB,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE;aAC7B;SACF,CAAC;aACD,IAAI,CACH,0DAAG,CAAC,UAAC,IAAS;YACZ,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,qDAAqD;QACrD,iEAAU,CAAC,eAAK,IAAI,sDAAE,CAAC,KAAK,CAAC,EAAT,CAAS,CAAC,CAC/B,CAAC;QAEJ,eAAe;IACjB,CAAC;IAEO,mCAAW,GAAnB,UAAoB,KAAU;QAC5B,gFAAgF;QAChF,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,OAAO,uDAAoB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IA3DU,aAAa;QADzB,gEAAU,EAAE;yCAGqB,+DAAU;OAF/B,aAAa,CA4DzB;IAAD,oBAAC;CAAA;AA5DyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AACO;AACwB;AACT;AAGP;AAG1D;IAEI,wBAAoB,UAAsB;QAA1C,iBACC;QADmB,eAAU,GAAV,UAAU,CAAY;QAmB1C,YAAO,GAAG,UAAC,IAAY,EAAE,KAAa,EAAE,GAAW;YAC/C,OAAO,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC;iBAC9B,IAAI,CAAC,gEAAS,CAAC,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,EAAxB,CAAwB,CAAC,CAAC,CAAC;QACxD,CAAC;QAEO,eAAU,GAAG,UAAC,IAAI,EAAE,IAAI;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,EAAE;oBACrB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;iBAC9B;aACJ;YACD,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC;IA9BD,CAAC;IAEM,oCAAW,GAAlB,UAAmB,KAAa,EAAE,GAAW;QAA7C,iBAcC;QAbG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAI,qEAAY,CAAC,OAAO,wBAAqB,EACnE;YACI,MAAM,EAAE;gBACJ,KAAK,EAAE,KAAK;aACf;SACJ,CAAC;aACD,IAAI,CACD,0DAAG,CAAC,UAAC,IAAS;YACV,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,EACF,0DAAG,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,EAA/B,CAA+B,CAAC,EAC5C,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC/C,CAAC;IACV,CAAC;IAgBO,oCAAW,GAAnB,UAAoB,KAAU;QAC1B,gFAAgF;QAChF,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,OAAO,uDAAoB,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAxCQ,cAAc;QAD1B,gEAAU,EAAE;yCAGuB,+DAAU;OAFjC,cAAc,CAyC1B;IAAD,qBAAC;CAAA;AAzC0B;;;;;;;;;;;;;;ACN3B;AAAA,gBAAgB;AAChB;IASE,0BAAoB,IAAY,EACtB,WAAgB,EAChB,sBAA2B,EAC3B,KAA0C;QAHpD,iBAWC;QAXmB,SAAI,GAAJ,IAAI,CAAQ;QACtB,gBAAW,GAAX,WAAW,CAAK;QAChB,2BAAsB,GAAtB,sBAAsB,CAAK;QAC3B,UAAK,GAAL,KAAK,CAAqC;QAVpD,wBAAwB;QACxB,uBAAuB;QACf,WAAM,GAAa,EAAE,CAAC;QAC9B,oBAAoB;QACZ,eAAU,GAAG,WAAW,CAAC;QACzB,gBAAW,GAAG,UAAU,CAAC;QAe1B,aAAQ,GAAG,UAAC,GAAG,EAAE,KAAK;YAC3B,OAAO,KAAK,CAAC;QACf,CAAC;QAED,kDAAkD;QAC3C,cAAS,GAAG;YACjB,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,KAAI,CAAC,IAAI,EAAE;gBAAE,OAAO,MAAM,CAAC;aAAE;YAClC,IAAM,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YACjD,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;oBACnB,IAAM,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;oBACnD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;aACJ;iBAAM,EAAE,yBAAyB;gBAChC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;aACxB;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,qCAAqC;QACrC,oBAAoB;QACpB,wDAAwD;QACxD,YAAO,GAAG;YACR,IAAI,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;gBACvB,IAAM,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;gBACrH,IAAM,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBAC/C,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC/B,OAAO,KAAK,CAAC;QACf,CAAC;QA1CC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAE/B,IAAI,sBAAsB,EAAE,EAAE,qBAAqB;YACjD,IAAI,CAAC,QAAQ,GAAG,sBAAsB,CAAC;SACxC;IACH,CAAC;IAoCH,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC7D0C;AAG3C;IAEE;QAAA,iBAAiB;QAET,eAAU,GAAG,WAAW,CAAC;QACzB,gBAAW,GAAG,MAAM,CAAC;QACrB,kBAAa,GAAG,6FAA6F,CAAC;QAC9G,eAAU,GAAG;YACnB,GAAG,EAAE,WAAW;YAChB,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,YAAY;YACjB,IAAI,EAAE,YAAY;YAClB,GAAG,EAAE,iBAAiB;YACtB,IAAI,EAAE,iBAAiB;YACvB,GAAG,EAAE,UAAU;YACf,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,YAAY;YACjB,IAAI,EAAE,YAAY;YAClB,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,cAAc;YACnB,GAAG,EAAE,cAAc;YACnB,GAAG,EAAE,WAAW;YAChB,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,WAAW;YAChB,GAAG,EAAE,WAAW;YAChB,GAAG,EAAE,WAAW;YAChB,GAAG,EAAE,MAAM;SACZ,CAAC;QAEK,iBAAY,GAAG,UAAC,QAAQ;YAC7B,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACtE,CAAC;QAEM,iBAAY,GAAG,UAAC,QAAQ;YAC7B,OAAO,KAAI,CAAC,UAAU,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAI,CAAC,WAAW,CAAC,CAAC;QAC9F,CAAC;QAEM,gBAAW,GAAG,UAAC,QAAQ;YAC5B,OAAO,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,KAAK,SAAS,CAAC;QACpE,CAAC;QAEM,YAAO,GAAG,UAAC,QAAQ;YACxB,OAAO,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,CAAC;IA3Ce,CAAC;IAFN,eAAe;QAD3B,gEAAU,EAAE;;OACA,eAAe,CA8C3B;IAAD,sBAAC;CAAA;AA9C2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFe;AACP;AACC;AAEkC;AACjC;AAItC;IACE,0BAAoB,KAAgC;QAAhC,UAAK,GAAL,KAAK,CAA2B;IACpD,CAAC;IAED;;QAEI;IACG,yCAAc,GAArB,UAAsB,UAAuB;QAC3C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4FAA0C,CAAC,UAAU,CAAC,CAAC,CAAC;IAClF,CAAC;IAED;;;MAGE;IACK,6CAAkB,GAAzB,UAA0B,IAAY;QACpC,OAAO,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,oDAAuB,CAAC;aAC/B,IAAI,CACH,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,IAAI,EAAjB,CAAiB,CAAC,EAAnC,CAAmC,CAAC,CACjD,CAAC;IACN,CAAC;IArBU,gBAAgB;QAD5B,gEAAU,EAAE;yCAEgB,iDAAK;OADrB,gBAAgB,CAsB5B;IAAD,uBAAC;CAAA;AAtB4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACO;AACd;AACkC;AACR;AAEpB;AAEc;AAEK;AACvB;AAEuB;AAG7D;IAEE,qCAAqC;IAErC,qBAAoB,UAAsB,EAAU,KAAgC;QAAhE,eAAU,GAAV,UAAU,CAAY;QAAU,UAAK,GAAL,KAAK,CAA2B;QAClF,kDAAkD;IACpD,CAAC;IAED,qCAAqC;IACrC,+DAA+D;IAC/D,IAAI;IAEG,8BAAQ,GAAf,UAAgB,IAAY;QAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0EAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEM,+BAAS,GAAhB,UAAiB,KAAkB;QAAnC,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,KAAK,CAAC,OAAO,CAAC,UAAC,SAAoB;YACjC,IAAM,IAAI,GAAS,qDAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC1C,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iFAAiC,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gCAAU,GAAjB,UAAkB,UAAyB,EAAE,EAAU;QACrD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4EAA4B,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAEM,yCAAmB,GAA1B,UAA2B,QAAgB,EAAE,eAA+B,EAAE,YAAoB;QAChG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qFAAqC,CAAC,QAAQ,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC,CAAC;IAC1G,CAAC;IAEM,2CAAqB,GAA5B,UAA6B,QAAgB,EAAE,oBAAmC,EAAE,YAAoB;QACtG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uFAAuC,CAAC,QAAQ,EAAE,oBAAoB,EAAE,YAAY,CAAC,CAAC,CAAC;IACjH,CAAC;IAEM,8CAAwB,GAA/B,UAAgC,QAAgB,EAAE,YAAoB,EAAE,oBAA4B,EAClG,sBAA8B,EAAE,eAAuB,EAAE,UAAmB;QAC5E,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0FAA0C,CAAC,QAAQ,EAAE,YAAY,EAAE,oBAAoB,EAC7G,sBAAsB,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEM,gDAA0B,GAAjC,UAAkC,QAAgB,EAAE,YAAoC,EAAE,WAAmB,EAAE,eAAuB;QACpI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4FAA4C,CAAC,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC,CAAC;IAC9H,CAAC;IAED;;;QAGI;IACG,+CAAyB,GAAhC,UAAiC,QAAgB,EAAE,YAAoB,EAAE,cAAsB,EAC7F,sBAA8B,EAAE,eAAuB,EAAE,UAAmB;QAC5E,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2FAA2C,CAAC,QAAQ,EAAE,YAAY,EAAE,cAAc,EACxG,sBAAsB,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEM,kDAA4B,GAAnC,UAAoC,QAAgB,EAAE,YAAoB,EAAE,cAAsB;QAChG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,8FAA8C,CAAC,QAAQ,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC,CAAC;IAClH,CAAC;IAED,gEAAgE;IAChE,6EAA6E;IAC7E,IAAI;IAEJ,uCAAiB,GAAjB,UACE,QAAgB,EAChB,YAAoB,EACpB,kBAAkC,EAClC,QAAa,EACb,WAAmB,EACnB,UAAmB;QAEnB,IAAI,gBAAgB,GAAG,WAAW,CAAC;QAEnC,IAAI,UAAU,EAAE;YACd,gBAAgB,GAAG,MAAI,WAAa,CAAC;SACtC;QAED,IAAM,WAAW,GAAG,IAAI,oDAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,wEAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;IAClE,CAAC;IAEM,gCAAU,GAAjB,UAAkB,IAAU;QAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4EAA4B,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEM,+CAAyB,GAAhC,UAAiC,QAAgB,EAAE,YAAoB;QACrE,OAAO,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,+CAAkB,CAAC;aAC1B,IAAI,CAAC,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,EAA1B,CAA0B,CAAC;YACtD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,EAA1B,CAA0B,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC;YAC3E,CAAC,CAAC,IAAI,EAFO,CAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAEM,gDAA0B,GAAjC,UAAkC,QAAgB;QAChD,OAAO,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,+CAAkB,CAAC;aAC1B,IAAI,CAAC,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,EAA1B,CAA0B,CAAC;YACtD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,EAA1B,CAA0B,CAAC,CAAC,MAAM,CAAC,UAAU;YAC7D,CAAC,CAAC,IAAI,EAFO,CAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAEM,oCAAc,GAArB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+CAAkB,CAAC,CAAC;IAC/C,CAAC;IAEM,oCAAc,GAArB,UAAsB,EAAU;QAC9B,OAAO,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,+CAAkB,CAAC;aAC1B,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAApB,CAAoB,CAAC,EAAtC,CAAsC,CAAC,CAAC,CAAC;IAC/D,CAAC;IACD;;;OAGG;IACI,yCAAmB,GAA1B,UAA2B,OAAiB;QAC1C,OAAO,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,+CAAkB,CAAC;aAC1B,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,CAAC,aAAG,IAAI,cAAO,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,KAAK,GAAG,CAAC,MAAM,CAAC,EAAE,EAApB,CAAoB,CAAC,CAAC,MAAM,GAAG,CAAC,EAArD,CAAqD,CAAC,EAAzE,CAAyE,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,wDAAwD;IACxD,yDAAyD;IACzD,IAAI;IAEJ;;OAEG;IACI,0CAAoB,GAA3B,UAA4B,IAAY;QAAxC,iBAWC;QAVC,6GAA6G;QAC7G,gHAAgH;QAChH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,oFAAkF,IAAM,CAAC;aAC5H,IAAI,CACH,0DAAG,CAAC,UAAC,IAAe;YAClB,OAAO,qDAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC;QACF,4DAA4D;QAC5D,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACN,CAAC;IAED;;OAEG;IACI,kCAAY,GAAnB,UAAoB,IAAY;QAAhC,iBASC;QARC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,kDAAgD,IAAM,CAAC;aAC1F,IAAI,CACH,0DAAG,CAAC,UAAC,IAAe;YAClB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,4DAA4D;QAC5D,iEAAU,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAC7C,CAAC;IACN,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,gFAAgF;QAChF,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,OAAO,uDAAoB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAjKU,WAAW;QADvB,gEAAU,EAAE;yCAKqB,+DAAU,EAAiB,iDAAK;OAJrD,WAAW,CAkKvB;IAAD,kBAAC;CAAA;AAlKuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBmB;AACO;AACP;AACW;AAClB;AAEiC;AAC/B;AAItC;IAKE,yBAAoB,UAAsB,EAAU,KAAgC;QAAhE,eAAU,GAAV,UAAU,CAAY;QAAU,UAAK,GAAL,KAAK,CAA2B;QAH5E,wCAAmC,GAAG,IAAI,4CAAO,EAAU,CAAC;QACpE,mCAA8B,GAAG,IAAI,CAAC,mCAAmC,CAAC,YAAY,EAAE,CAAC;QAGvF,kDAAkD;IACpD,CAAC;IAED;;OAEG;IACI,uCAAa,GAApB,UAAqB,SAAqB,EAAE,eAAuB,EAAE,eAAuB,EAAE,UAAkB;QAC9G,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mFAAmC,CAAC,SAAS,EAAE,eAAe,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC;IACxH,CAAC;IAEM,4CAAkB,GAAzB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mDAAsB,CAAC,CAAC;IACnD,CAAC;IAEM,wCAAc,GAArB,UAAsB,IAAY;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mDAAsB,CAAC;aAC7C,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,IAAI,EAAjB,CAAiB,CAAC,EAAnC,CAAmC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEM,4CAAkB,GAAzB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yDAA4B,CAAC,CAAC;IACzD,CAAC;IAEM,4CAAkB,GAAzB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yDAA4B,CAAC,CAAC;IACzD,CAAC;IAEM,+CAAqB,GAA5B,UAA6B,eAAuB;QAClD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2FAA2C,CAAC,eAAe,CAAC,CAAC,CAAC;IACxF,CAAC;IAEM,+CAAqB,GAA5B,UAA6B,eAAuB;QAClD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2FAA2C,CAAC,eAAe,CAAC,CAAC,CAAC;IACxF,CAAC;IAED;;;OAGG;IACI,8DAAoC,GAA3C;QACE,IAAI,CAAC,mCAAmC,CAAC,IAAI,EAAE,CAAC;IAClD,CAAC;IA/CU,eAAe;QAD3B,gEAAU,EAAE;yCAMqB,+DAAU,EAAiB,iDAAK;OALrD,eAAe,CAgD3B;IAAD,sBAAC;CAAA;AAhD2B;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACM;AAEe;AAGhE;IADA;QAEU,YAAO,GAAkB,EAAE,CAAC;IA4DtC,CAAC;IA1DQ,kCAAI,GAAX,UAAY,MAAmB,EAAE,QAAgB;QAAjD,iBA+CC;QA9CC,OAAO,IAAI,+CAAU,CAAc,UAAC,QAA+B;YACjE,IAAM,cAAc,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAtB,CAAsB,CAAC,CAAC;YAEtE,6BAA6B;YAC7B,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,EAAE;gBAC3C,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC9B,QAAQ,CAAC,QAAQ,EAAE,CAAC;aACrB;iBAAM;gBACL,iBAAiB;gBACjB,KAAI,CAAC,OAAO,GAAO,KAAI,CAAC,OAAO,SAAE,MAAM,EAAC,CAAC;gBACzC,kBAAkB;gBAClB,IAAI,aAAa,UAAC;gBAElB,QAAQ,QAAQ,EAAE;oBAChB,KAAK,2EAAiB,CAAC,GAAG;wBACxB,iBAAiB;wBACjB,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;wBAC/C,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC;wBACjC,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;wBACrC,MAAM;oBACR,KAAK,2EAAiB,CAAC,UAAU;wBAC/B,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;wBACjD,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC;wBAC9B,aAAa,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;wBACpC,MAAM;oBACR;wBACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;wBAC/B,MAAM;iBACT;gBAED,aAAa,CAAC,MAAM,GAAG;oBACrB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;oBACrB,8CAA8C;oBAC9C,qBAAqB;oBACrB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtB,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACpB,YAAY;gBACd,CAAC,CAAC;gBAEF,aAAa,CAAC,OAAO,GAAG,UAAC,KAAU;oBACjC,QAAQ,CAAC,KAAK,CAAC,sBAAsB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC3D,CAAC,CAAC;gBAEF,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;aACrE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,sCAAQ,GAAf,UAAgB,UAAyB,EAAE,QAAgB;QAA3D,iBAQC;QAPC,IAAM,WAAW,GAA8B,EAAE,CAAC;QAClD,UAAU,CAAC,OAAO,CAAC,UAAC,WAAwB;YAC1C,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC,MAAM,GAAG,CAAC;YAC3B,CAAC,CAAC,wCAAG,eAAI,WAAW,EACpB,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IA5DU,mBAAmB;QAD/B,gEAAU,EAAE;OACA,mBAAmB,CA6D/B;IAAD,0BAAC;CAAA;AA7D+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACNW;AACJ;AAGvC;IACE,iFAAiF;IACjF;IAAgB,CAAC;IAEjB,6CAAiB,GAAjB,UAAkB,YAAiB,EAAE,aAAqB;QAExD,IAAM,kBAAkB,GAAG,CAAC,CAAC,aAAa,CAAC;QAC3C,IAAI,qBAAqB,GAAG,KAAK,CAAC;QAClC,IAAM,mBAAmB,GAAQ,YAAY,CAAC;QAE9C,IAAM,4BAA4B,GAA2B,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QACrF,IAAM,cAAc,GAAG,4BAA4B,CAAC,YAAY,EAAE,CAAC;QAEnE,uFAAuF;QACvF,6CAA6C;QAC7C,IAAM,aAAa,GAAG,UAAC,MAAM;YAC3B,QAAQ;YACR,wBAAwB;YACxB,yBAAyB;YACzB,IAAI;YACJ,SAAS;YACT,qCAAqC;YACrC,2BAA2B;YAC3B,MAAM;YACN,OAAO;YACP,IAAI;YACJ,qCAAqC;YACrC,sBAAsB;YACtB,4CAA4C;YAC5C,mCAAmC;YACnC,IAAI;YACJ,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE1C,qBAAqB,GAAG,IAAI,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,4BAA4B,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/E,CAAC,CAAC;QAEF;;WAEG;QACH,IAAM,cAAc,GAAG;YACrB,0GAA0G;YAC1G,qCAAqC;YACrC,+DAA+D;YAC/D,8BAA8B;YAC9B,MAAM;YACN,mBAAmB,EAAE,CAAC,SAAS,CAAC,WAAC,IAAI,oBAAa,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;QACzD,CAAC,CAAC;QAEF;;WAEG;QACH,IAAM,YAAY,GAAG;YACnB,IAAI,4BAA4B,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE;gBACrE,cAAc,EAAE,CAAC;aAClB;QACH,CAAC,CAAC;QAEF;;WAEG;QACH,IAAM,aAAa,GAAG;YACpB,sBAAsB;YACtB,4BAA4B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,IAAM,GAAG,GAAG;YACV,kBAAkB;YAClB,cAAc;YACd,qBAAqB;YACrB,mBAAmB;YACnB,YAAY;YACZ,cAAc;YACd,cAAc;YACd,aAAa;YACb,aAAa;SACd,CAAC;QAEF,OAAO,GAAG,CAAC;IACb,CAAC;IA/EU,iBAAiB;QAD7B,gEAAU,EAAE;;OACA,iBAAiB,CAgF7B;IAAD,wBAAC;CAAA;AAhF6B;;;;;;;;;;;;;;;;;;ACAvB,IAAM,iBAAiB,GAAG,mBAAmB,CAAC;AAC9C,IAAM,yBAAyB,GAAG,2BAA2B,CAAC;AAErE;IAGI,+BAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QAFtB,SAAI,GAAG,iBAAiB,CAAC;IAEC,CAAC;IACxC,4BAAC;AAAD,CAAC;;AAED;IAGI,sCAAmB,cAA2B;QAA3B,mBAAc,GAAd,cAAc,CAAa;QAFrC,SAAI,GAAG,yBAAyB,CAAC;IAG1C,CAAC;IACL,mCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACdD;AAAA,oDAAoD;AAC7C,IAAM,uBAAuB,GAAG,yBAAyB,CAAC;AAGjE;IAGI,oCAAmB,aAA0B;QAA1B,kBAAa,GAAb,aAAa,CAAa;QAFpC,SAAI,GAAG,uBAAuB,CAAC;IAGxC,CAAC;IACL,iCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPM,IAAM,SAAS,GAAG,kBAAkB,CAAC;AACrC,IAAM,iBAAiB,GAAG,0BAA0B,CAAC;AACrD,IAAM,WAAW,GAAG,oBAAoB,CAAC;AACzC,IAAM,mBAAmB,GAAG,4BAA4B,CAAC;AAEzD,IAAM,kBAAkB,GAAG,2BAA2B,CAAC;AACvD,IAAM,qBAAqB,GAAG,8BAA8B,CAAC;AAE7D,IAAM,wBAAwB,GAAG,iCAAiC,CAAC;AACnE,IAAM,2BAA2B,GAAG,oCAAoC,CAAC;AACzE,IAAM,6BAA6B,GAAG,sCAAsC,CAAC;AAC7E,IAAM,2BAA2B,GAAG,oCAAoC,CAAC;AACzE,IAAM,mCAAmC,GAAG,4CAA4C,CAAC;AACzF,IAAM,iCAAiC,GAAG,0CAA0C,CAAC;AAErF,IAAM,4BAA4B,GAAG,qCAAqC,CAAC;AAC3E,IAAM,+BAA+B,GAAG,wCAAwC,CAAC;AACjF,IAAM,+BAA+B,GAAG,wCAAwC,CAAC;AAEjF,IAAM,WAAW,GAAG,oBAAoB,CAAC;AAEhD;;GAEG;AACH;IAEI,wBAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QADtB,SAAI,GAAG,SAAS,CAAC;IACS,CAAC;IACxC,qBAAC;AAAD,CAAC;;AACD;IAEI,+BAAmB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;QADvB,SAAI,GAAG,iBAAiB,CAAC;IACE,CAAC;IACzC,4BAAC;AAAD,CAAC;;AAED;;GAEG;AACH;IAEI,gCAAmB,EAAU,EAAS,SAAyB,EAAS,YAAY;QAAjE,OAAE,GAAF,EAAE,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAgB;QAAS,iBAAY,GAAZ,YAAY;QAD3E,SAAI,GAAG,kBAAkB,CAAC;IACqD,CAAC;IAC7F,6BAAC;AAAD,CAAC;;AAED;IAEI,qCAAmB,EAAU,EAAS,cAA6B,EAAS,YAAY;QAArE,OAAE,GAAF,EAAE,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAe;QAAS,iBAAY,GAAZ,YAAY;QAD/E,SAAI,GAAG,wBAAwB,CAAC;IACmD,CAAC;IACjG,kCAAC;AAAD,CAAC;;AAED;IAEI,yCAAmB,EAAU,EAAS,YAAoB,EAAS,cAAsB,EAC9E,sBAA8B,EAAS,eAAuB,EAAS,UAAmB;QADlF,OAAE,GAAF,EAAE,CAAQ;QAAS,iBAAY,GAAZ,YAAY,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAQ;QAC9E,2BAAsB,GAAtB,sBAAsB,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAS;QAF5F,SAAI,GAAG,4BAA4B,CAAC;IAE4D,CAAC;IAC9G,sCAAC;AAAD,CAAC;;AAED;;GAEG;AACH;IAEI,0BAAmB,UAAyB,EAAS,EAAU;QAA5C,eAAU,GAAV,UAAU,CAAe;QAAS,OAAE,GAAF,EAAE,CAAQ;QADtD,SAAI,GAAG,WAAW,CAAC;IACuC,CAAC;IACxE,uBAAC;AAAD,CAAC;;AACD;IAEI,iCAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QADpB,SAAI,GAAG,mBAAmB,CAAC;IACH,CAAC;IACtC,8BAAC;AAAD,CAAC;;AAED;IAEI,mCAAmB,EAAU,EAAS,SAAyB,EAAS,YAAoB;QAAzE,OAAE,GAAF,EAAE,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAgB;QAAS,iBAAY,GAAZ,YAAY,CAAQ;QADnF,SAAI,GAAG,qBAAqB,CAAC;IAC0D,CAAC;IACrG,gCAAC;AAAD,CAAC;;AAED;IAEI,wCAAmB,EAAU,EAAS,YAAoB,EAAS,cAAsB,EAC9E,mBAA2B,EAAS,eAAuB,EAAS,UAAmB;QAD/E,OAAE,GAAF,EAAE,CAAQ;QAAS,iBAAY,GAAZ,YAAY,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAQ;QAC9E,wBAAmB,GAAnB,mBAAmB,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAS;QAFzF,SAAI,GAAG,2BAA2B,CAAC;IAE0D,CAAC;IAC3G,qCAAC;AAAD,CAAC;;AAED;IAEI,0CAAmB,EAAU,EAAS,YAAoC,EAC/D,mBAA2B,EAAS,eAAuB;QADnD,OAAE,GAAF,EAAE,CAAQ;QAAS,iBAAY,GAAZ,YAAY,CAAwB;QAC/D,wBAAmB,GAAnB,mBAAmB,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAQ;QAF7D,SAAI,GAAG,6BAA6B,CAAC;IAE4B,CAAC;IAC/E,uCAAC;AAAD,CAAC;;AAED;;GAEG;AACH;IAEI,wCAAmB,KAAa,EAAS,IAAU,EAAS,YAAoC,EACrF,mBAA2B,EAAS,eAAuB;QADnD,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAM;QAAS,iBAAY,GAAZ,YAAY,CAAwB;QACrF,wBAAmB,GAAnB,mBAAmB,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAQ;QAF7D,SAAI,GAAG,2BAA2B,CAAC;IAE8B,CAAC;IAC/E,qCAAC;AAAD,CAAC;;AAED;IAEI,qCAAqC;IACrC,+CAAmB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;QAFnB,SAAI,GAAG,mCAAmC,CAAC;IAEpB,CAAC;IACrC,4CAAC;AAAD,CAAC;;AAED;IAEI,qCAAqC;IACrC,6CAAmB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;QAFpB,SAAI,GAAG,iCAAiC,CAAC;IAEjB,CAAC;IACtC,0CAAC;AAAD,CAAC;;AAED,sEAAsE;AACtE,uDAAuD;AACvD,iGAAiG;AACjG,iFAAiF;AACjF,IAAI;AAEJ;IAEI,4CAAmB,EAAU,EAAS,YAAoB,EAAS,cAAsB;QAAtE,OAAE,GAAF,EAAE,CAAQ;QAAS,iBAAY,GAAZ,YAAY,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAQ;QADhF,SAAI,GAAG,+BAA+B,CAAC;IAC6C,CAAC;IAClG,yCAAC;AAAD,CAAC;;AACD;;GAEG;AACH;IAEI,0BAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QADpB,SAAI,GAAG,WAAW,CAAC;IACK,CAAC;IACtC,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACzHM,IAAM,cAAc,GAAG,2BAA2B,CAAC;AACnD,IAAM,uBAAuB,GAAG,oCAAoC,CAAC;AACrE,IAAM,uBAAuB,GAAG,oCAAoC,CAAC;AACrE,IAAM,kBAAkB,GAAG,+BAA+B,CAAC;AAElE;IAGI,6BAAmB,WAAuB,EAC/B,eAAuB,EACvB,eAAuB,EACvB,UAAkB;QAHV,gBAAW,GAAX,WAAW,CAAY;QAC/B,oBAAe,GAAf,eAAe,CAAQ;QACvB,oBAAe,GAAf,eAAe,CAAQ;QACvB,eAAU,GAAV,UAAU,CAAQ;QALpB,SAAI,GAAG,cAAc,CAAC;IAKE,CAAC;IACtC,0BAAC;AAAD,CAAC;;AAED;IAGI,qCAAmB,eAAuB;QAAvB,oBAAe,GAAf,eAAe,CAAQ;QAFjC,SAAI,GAAG,uBAAuB,CAAC;IAEM,CAAC;IACnD,kCAAC;AAAD,CAAC;;AAED;IAGI,qCAAmB,eAAuB;QAAvB,oBAAe,GAAf,eAAe,CAAQ;QAFjC,SAAI,GAAG,uBAAuB,CAAC;IAEM,CAAC;IACnD,kCAAC;AAAD,CAAC;;AAED;IAGI,gCAAmB,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;QAF5B,SAAI,GAAG,kBAAkB,CAAC;IAEM,CAAC;IAC9C,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjC0B;AACC;;;;;;;;;;;;;;;;;;ACAuC;AAM5D,IAAM,YAAY,GAAqB;IAC1C,YAAY,EAAE,EAAE;CACnB,CAAC;AAEI,4BAA6B,KAAoB,EAAE,MAA+B;IAArD,4CAAoB;IACnD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,uFAAyC,CAAC,CAAC;YAC5C,gEAAgE;YAChE,IAAM,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,qBAAW;gBACtD,kBAAW,CAAC,WAAW,CAAC,EAAE,KAAK,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;YAAnE,CAAmE,CAAC,CAAC;YACzE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,OAAO,EAAE,YAAY,EAAM,KAAK,CAAC,YAAY,SAAE,MAAM,CAAC,cAAc,EAAC,EAAE,CAAC;aAC3E;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,CAAC,CAAC;YACL,OAAO,KAAK,CAAC;SAChB;KACJ;AACL,CAAC;AAEM,IAAM,eAAe,GAAG,UAAC,KAAuB,IAAK,YAAK,CAAC,YAAY,EAAlB,CAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BoB;AACnD;AAEmB;AACvB;AACW;AACG;AACN;AASpD,0BAA0B;AACpB,gBAAiB,OAAgC;IACnD,OAAO,UAAU,KAAe,EAAE,MAAW;QACzC,uDAAuD;QACvD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAEtC,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC,CAAC;AACN,CAAC;AAED;;;;GAIG;AACI,IAAM,YAAY,GAAuB,CAAC,qEAAW,CAAC,UAAU;IACnE,CAAC,CAAC,CAAC,MAAM,EAAE,6DAAW,CAAC;IACvB,CAAC,CAAC,EAAE,CAAC;AAEF,IAAM,QAAQ,GAA+B;IAChD,SAAS,EAAE,yDAAqB;IAChC,cAAc,EAAE,oEAA+B;IAC/C,gBAAgB,EAAE,wEAAkC;IACpD,SAAS,EAAE,iEAA6B;CAC3C,CAAC;AAEK,IAAM,WAAW,GAAG,yEAAqB,CAAW,eAAe,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Cb;AAMxD,IAAM,YAAY,GAAmB;IACxC,UAAU,EAAE,EAAE;CACjB,CAAC;AAEI,0BAA2B,KAAoB,EAAE,MAA6B;IAAnD,4CAAoB;IACjD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,mFAAqC,CAAC,CAAC;YACxC,oBACO,KAAK,EACL;gBACC,UAAU,EAAM,MAAM,CAAC,aAAa,QAAC;aACxC,EACH;SACL;QACD,OAAO,CAAC,CAAC;YACL,OAAO,KAAK,CAAC;SAChB;KACJ;AACL,CAAC;AAEM,IAAM,aAAa,GAAG,UAAC,KAAqB,IAAK,YAAK,CAAC,UAAU,EAAhB,CAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BpB;AACkB;AAyBhE,IAAM,YAAY,GAAc;IACnC,KAAK,EAAE,EAAE;CACZ,CAAC;AAEI,qBAAsB,KAAoB,EAAE,MAAyB;IAA/C,4CAAoB;IAC5C,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,sCAAsC;QACtC,gDAAgD;QAChD,eAAe;QACf,oBAAoB;QACpB,yDAAyD;QACzD,SAAS;QACT,IAAI;QACJ,KAAK,uEAA2B,CAAC,CAAC;YAC9B,uEAAuE;YACvE,IAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI;gBACrC,WAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAA3C,CAA2C,CAAC,CAAC;YACjD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,oBACO,KAAK,EACL,EAAE,KAAK,EAAM,KAAK,CAAC,KAAK,SAAE,MAAM,CAAC,OAAO,EAAC,EAAE,EAChD;aACL;iBAAM;gBACH,oBACO,KAAK,EACL;oBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;wBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;4BAC9C,CAAC,CAAC,MAAM,CAAC,OAAO;4BAChB,CAAC,CAAC,IAAI,CAAC;oBACf,CAAC,CAAC;iBACL,EACH;aACL;SACJ;QACD,KAAK,iEAAqB,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;YACpD,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;wBAC/B,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,eAAO,IAAI,CAAC,MAAM,CAAC,UAAU,EAAK,MAAM,CAAC,UAAU,QAGrE,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,2EAA+B,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;YAClD,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;wBAC/B,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,+EAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,SAAS,EACnF,MAAM,CAAC,YAAY,CAAC,OAIhC,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,iFAAqC,CAAC,CAAC;YACxC,qDAAqD;YACrD,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;wBAC/B,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,+EAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,EAC3F,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,UAAU,CAAC,OAGzG,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,iFAAqC,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;YACxC,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;wBAC3C,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,+EAAkB,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EACxE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,eAAe,CAAC,OAGpF,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,mFAAuC,CAAC,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;YACxC,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;wBAC/B,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,+EAAkB,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EACxE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,eAAe,CAAC,OAGpF,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,8EAAkC,CAAC,CAAC;YACrC,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;wBAC/B,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,+EAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EACnE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,YAAY,CAAC,OAGvD,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,kFAAsC,CAAC,CAAC;YACzC,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;wBAC/B,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,+EAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EACvE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,sBAAsB,EACzE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,UAAU,CAAC,OAGtD,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,qFAAyC,CAAC,CAAC;YAC5C,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI;oBACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE;wBAC/B,CAAC,cACM,IAAI,IACP,MAAM,eACC,IAAI,CAAC,MAAM,IACd,UAAU,EAAE,+EAAkB,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAC1E,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,cAAc,CAAC,OAGvD,CAAC,CAAC,IAAI,CAAC;gBACf,CAAC,CAAC;aACL,EACH;SACL;QACD,KAAK,iEAAqB;YACtB,oBACO,KAAK,EACL;gBACC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAxC,CAAwC,CAAC;aAC9E,EACH;QACN,OAAO,CAAC,CAAC;YACL,OAAO,KAAK,CAAC;SAChB;KACJ;AACL,CAAC;AAGM,IAAM,QAAQ,GAAG,UAAC,KAAgB,IAAK,YAAK,CAAC,KAAK,EAAX,CAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1OG;AAWtD,IAAM,YAAY,GAAmB;IACxC,SAAS,EAAE,EAAE;IACb,eAAe,EAAE,OAAO;IACxB,eAAe,EAAE,OAAO;IACxB,UAAU,EAAE,OAAO;CAEtB,CAAC;AAEI,yBAA0B,KAAoB,EAAE,MAA6B;IAAnD,4CAAoB;IAChD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,wEAA4B,CAAC,CAAC;YAC/B,qDAAqD;YACrD,oBACO,KAAK,EACL;gBACC,SAAS,EAAM,MAAM,CAAC,WAAW,QAAC;gBAClC,eAAe,EAAE,MAAM,CAAC,eAAe;gBACvC,eAAe,EAAE,MAAM,CAAC,eAAe;gBACvC,UAAU,EAAE,MAAM,CAAC,UAAU;aAChC,EACH;SACL;QACD,KAAK,iFAAqC,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC;YACzD,oBACO,KAAK,EACL;gBACC,eAAe,EAAE,MAAM,CAAC,eAAe;aAC1C,EACH;SACL;QACD,KAAK,iFAAqC,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC;YACzD,oBACO,KAAK,EACL;gBACC,eAAe,EAAE,MAAM,CAAC,eAAe;aAC1C,EACH;SACL;QACD,KAAK,4EAAgC,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;YACpD,oBACO,KAAK,EACL;gBACC,UAAU,EAAE,MAAM,CAAC,UAAU;aAChC,EACH;SACL;QACD,8BAA8B;QAC9B,eAAe;QACf,oBAAoB;QACpB,eAAe;QACf,0FAA0F;QAC1F,YAAY;QACZ,SAAS;QACT,OAAO,CAAC,CAAC;YACL,OAAO,KAAK,CAAC;SAChB;KACJ;AACL,CAAC;AAEM,IAAM,YAAY,GAAG,UAAC,KAAqB,IAAK,YAAK,CAAC,SAAS,EAAf,CAAe,CAAC;AAChE,IAAM,kBAAkB,GAAG,UAAC,KAAqB,IAAK,YAAK,CAAC,eAAe,EAArB,CAAqB,CAAC;AAC5E,IAAM,kBAAkB,GAAG,UAAC,KAAqB,IAAK,YAAK,CAAC,eAAe,EAArB,CAAqB,CAAC;AAC5E,IAAM,aAAa,GAAG,UAAC,KAAqB,IAAK,YAAK,CAAC,UAAU,EAAhB,CAAgB,CAAC;;;;;;;;;;;;;;;;;;;AC5E5B;AAEF;AACyB;AAE7D,IAAM,mBAAmB,GAAG,kEAAc,CAC7C,qDAAuB,EACvB,UAAC,KAA2B,IAAK,YAAK,CAAC,gBAAgB,EAAtB,CAAsB,CAC1D,CAAC;AAEK,IAAM,eAAe,GAAG,kEAAc,CAAC,mBAAmB,EAAE,8EAA+B,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVlE;AACK;AACE;AACJ;;;;;;;;;;;;;;;;;;;ACHQ;AAEF;AACqB;AAEzD,IAAM,iBAAiB,GAAG,kEAAc,CAC3C,qDAAuB,EACvB,UAAC,KAA2B,IAAK,YAAK,CAAC,cAAc,EAApB,CAAoB,CACxD,CAAC;AAEK,IAAM,aAAa,GAAG,kEAAc,CAAC,iBAAiB,EAAE,0EAA2B,CAAC,CAAC;;;;;;;;;;;;;;;;;;;ACV/C;AAEF;AACW;AAI/C,IAAM,YAAY,GAAG,kEAAc,CACtC,qDAAuB,EACvB,UAAC,KAA2B,IAAK,YAAK,CAAC,SAAS,EAAf,CAAe,CACnD,CAAC;AAEK,IAAM,QAAQ,GAAG,kEAAc,CAAC,YAAY,EAAE,+DAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACZ5B;AAEF;AACkB;AAEtD,IAAM,gBAAgB,GAAG,kEAAc,CAC1C,qDAAuB,EACvB,UAAC,KAA2B,IAAK,YAAK,CAAC,SAAS,EAAf,CAAe,CACnD,CAAC;AAEK,IAAM,YAAY,GAAG,kEAAc,CAAC,gBAAgB,EAAE,uEAAyB,CAAC,CAAC;AACjF,IAAM,kBAAkB,GAAG,kEAAc,CAAC,gBAAgB,EAAE,6EAA+B,CAAC,CAAC;AAC7F,IAAM,kBAAkB,GAAG,kEAAc,CAAC,gBAAgB,EAAE,6EAA+B,CAAC,CAAC;AAC7F,IAAM,aAAa,GAAG,kEAAc,CAAC,gBAAgB,EAAE,wEAA0B,CAAC,CAAC;;;;;;;;;;;;;;ACb1F;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;IACjB,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC;CACtC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n  constructor() {\r\n    // constructor(translate: TranslateService) {\r\n    // // this language will be used as a fallback when a translation isn't found in the current language\r\n    // translate.setDefaultLang('en');\r\n\r\n    // // the lang to use, if the lang isn't available, it will use the current loader to get them\r\n    // translate.use('en');\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    // translate.setDefaultLang('en');\r\n\r\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\r\n    // translate.use('en');\r\n    // translate.use('fr');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ItemService } from './shared/services/item.service';\r\nimport { ContentTypeService } from './shared/services/content-type.service';\r\nimport { metaReducers } from './shared/store';\r\nimport { LanguageService } from './shared/services/language.service';\r\nimport { ScriptLoaderService } from './shared/services/script.service';\r\nimport { EavService } from './shared/services/eav.service';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AdamService } from './eav-material-controls/adam/adam.service';\r\nimport { SvcCreatorService } from './shared/services/svc-creator.service';\r\n\r\nimport { FeatureService } from './shared/services/feature.service';\r\nimport { DnnBridgeService } from './shared/services/dnn-bridge.service';\r\nimport { EntityService } from './shared/services/entity.service';\r\nimport { HeaderInterceptor } from './shared/interceptors/interceptors';\r\nimport { InputTypeService } from './shared/services/input-type.service';\r\nimport { EavAdminUiService } from './shared/services/eav-admin-ui.service';\r\nimport { OpenMultiItemDialogComponent } from './eav-item-dialog/dialogs/open-multi-item-dialog/open-multi-item-dialog.component';\r\nimport { EavItemDialogModule } from './eav-item-dialog/eav-item-dialog.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '**',\r\n    component: OpenMultiItemDialogComponent\r\n  }\r\n];\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './../i18n/ng-edit/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    // DropzoneModule,\r\n    StoreModule.forRoot({}, { metaReducers }),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes),\r\n    BrowserAnimationsModule,\r\n    EavItemDialogModule,\r\n    TranslateModule.forRoot(\r\n      {\r\n        loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: (createTranslateLoader),\r\n          deps: [HttpClient]\r\n        }\r\n      })\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    ItemService,\r\n    ContentTypeService,\r\n    InputTypeService,\r\n    LanguageService,\r\n    ScriptLoaderService,\r\n    EavService,\r\n    AdamService,\r\n    SvcCreatorService,\r\n    FeatureService,\r\n    DnnBridgeService,\r\n    EntityService,\r\n    EavAdminUiService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HeaderInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ComponentFactory,\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  NgModule,\r\n  ModuleWithComponentFactories,\r\n  OnInit,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { FieldConfig } from '../../model/field-config';\r\nimport { FieldWrapper } from '../../model/field-wrapper';\r\nimport { CustomInputType } from '../../../shared/models';\r\nimport { ScriptModel, ScriptLoaderService } from '../../../shared/services/script.service';\r\nimport { InputTypesConstants } from '../../../shared/constants';\r\nimport { FileTypeConstants } from '../../../shared/constants/type-constants';\r\n\r\n@Directive({\r\n  selector: '[appEavField]'\r\n})\r\nexport class EavFieldDirective implements OnInit {\r\n  @Input()\r\n  config: FieldConfig[];\r\n\r\n  @Input()\r\n  group: FormGroup;\r\n\r\n  window: any = window;\r\n  addOnList = [];\r\n  externalCommponentRefList = [];\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef,\r\n    private scriptLoaderService: ScriptLoaderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // Clear lists and container\r\n    this.addOnList = [];\r\n    this.externalCommponentRefList = [];\r\n    this.container.clear();\r\n\r\n    this.config.forEach(controlConfiguration => {\r\n      console.log('create controlConfiguration', controlConfiguration);\r\n      this.createFieldOrGroup(this.container, controlConfiguration);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * create all child fields and groups from fieldConfig in container\r\n   * @param container\r\n   * @param fieldConfig\r\n   */\r\n  private createFieldOrGroup(container: ViewContainerRef, fieldConfig: FieldConfig) {\r\n    if (fieldConfig.fieldGroup) {\r\n      // this.createGroupComponents(container, fieldConfig, <FormGroup>group.controls[fieldConfig.name]);\r\n      this.createGroupComponents(container, fieldConfig);\r\n    } else {\r\n\r\n      if (fieldConfig.type === InputTypesConstants.external) {\r\n        console.log('create external');\r\n        this.createExternalComponent(container, fieldConfig);\r\n      } else {\r\n        console.log('create non external', fieldConfig.type);\r\n        // this.createFieldComponent(container, fieldConfig, group);\r\n        this.createComponent(container, fieldConfig);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create group components with group wrappers in container\r\n   * @param container\r\n   * @param fieldConfig\r\n   */\r\n  private createGroupComponents(container: ViewContainerRef, fieldConfig: FieldConfig) {\r\n    if (fieldConfig.wrappers) {\r\n      container = this.createComponentWrappers(container, fieldConfig, fieldConfig.wrappers);\r\n    }\r\n    fieldConfig.fieldGroup.forEach(controlConfiguration => {\r\n      this.createFieldOrGroup(container, controlConfiguration);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create component and component wrappers if component exist\r\n   * @param container\r\n   * @param fieldConfig\r\n   */\r\n  private createComponent(container: ViewContainerRef, fieldConfig: FieldConfig): ComponentRef<any> {\r\n    if (fieldConfig.wrappers) {\r\n      container = this.createComponentWrappers(container, fieldConfig, fieldConfig.wrappers);\r\n    }\r\n\r\n    const componentType = this.readComponentType(fieldConfig.type);\r\n\r\n    const inputTypeAnnotations = Reflect.getMetadata('inputTypeAnnotations', componentType);\r\n    // console.log('reading wrapper:', inputTypeAnnotations);\r\n\r\n    // if inputTypeAnnotations of componentType exist then create component\r\n    if (inputTypeAnnotations) {\r\n      if (inputTypeAnnotations.wrapper) {\r\n        container = this.createComponentWrappers(container, fieldConfig, inputTypeAnnotations.wrapper);\r\n      }\r\n\r\n      const factory = this.resolver.resolveComponentFactory(<Type<any>>componentType);\r\n      const ref = container.createComponent(factory);\r\n\r\n      Object.assign(ref.instance, {\r\n        group: this.group,\r\n        config: fieldConfig,\r\n      });\r\n\r\n      return ref;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Create and register external commponent\r\n   * @param container\r\n   * @param fieldConfig\r\n   */\r\n  private createExternalComponent(container: ViewContainerRef, fieldConfig: FieldConfig) {\r\n\r\n    // first create component container - then load script\r\n    const externalComponentRef = this.createComponent(container, fieldConfig);\r\n\r\n    this.externalCommponentRefList[fieldConfig.name] = externalComponentRef;\r\n\r\n    if (this.window.addOn === undefined) {\r\n      // this.window.addOn = [];\r\n      this.window.addOn = new CustomInputType(this.registerExternalComponent.bind(this));\r\n    }\r\n\r\n    // // TODO: read data from config\r\n    // Start loading all external dependencies (start with css). This method recursively load all dependencies.\r\n    this.loadExternalnputType(\r\n      0,\r\n      fieldConfig.name,\r\n      'tinymce-wysiwyg',\r\n      ['assets/script/tinymce-wysiwyg/src/tinymce-wysiwyg.css'],\r\n      ['http://cdn.tinymce.com/4.6/tinymce.min.js', 'assets/script/tinymce-wysiwyg/src/tinymce-wysiwyg.js'],\r\n      // ['http://cdn.tinymce.com/4.6/tinymce.min.js', 'assets/script/tinymce-wysiwyg/dist/tinymce-wysiwyg.min.js'],\r\n      FileTypeConstants.css);\r\n  }\r\n\r\n  private loadExternalnputType(increment: number, name: string, type: string, styles: string[], scripts: string[], fileType: string) {\r\n    const scriptModel: ScriptModel = {\r\n      name: `${fileType}${name}${increment}`,\r\n      filePath: (fileType === FileTypeConstants.css) ? styles[increment] : scripts[increment],\r\n      loaded: false\r\n    };\r\n\r\n    this.scriptLoaderService.load(scriptModel, fileType).subscribe(s => {\r\n      if (s.loaded) {\r\n        increment++;\r\n        const nextScript = (fileType === FileTypeConstants.css) ? styles[increment] : scripts[increment];\r\n        if (nextScript) {\r\n          console.log('nextScript', name);\r\n          this.loadExternalnputType(increment, name, type, styles, scripts, fileType);\r\n        } else if (fileType === FileTypeConstants.css) {\r\n          console.log('nextScript css', name);\r\n          this.loadExternalnputType(0, name, type, styles, scripts, FileTypeConstants.javaScript);\r\n        } else { // when scripts load is finish then call registered factory\r\n          console.log('nextScript facrory', type);\r\n          this.loadExternalFactoryToComponent(name, type);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * First read component reference with NAME and external component (factory) with TYPE,\r\n   * and then add external component (factory) to component (input type) reference.\r\n   * @param name\r\n   * @param type\r\n   */\r\n  private loadExternalFactoryToComponent(name: string, type: string) {\r\n    const externalCommponentRef = this.externalCommponentRefList[name];\r\n    const factory = this.addOnList[type];\r\n    console.log('loaded name factory', this.addOnList);\r\n    if (externalCommponentRef && factory) {\r\n      console.log('loaded name', name);\r\n      console.log('loaded this.externalCommponentRefList[name]', this.externalCommponentRefList);\r\n      console.log('loaded factory', factory);\r\n      Object.assign(externalCommponentRef.instance, {\r\n        factory: Object.create(factory)\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When external component is registered on load - this method add that component to list\r\n   * @param factory\r\n   */\r\n  private registerExternalComponent(factory) {\r\n    this.addOnList[factory.name] = factory;\r\n  }\r\n\r\n  /**\r\n   * Read component type by selector with ComponentFactoryResolver\r\n   * @param selector\r\n   */\r\n  private readComponentType(selector: string): Type<any> {\r\n    const factories = Array.from(this.resolver['_factories'].values());\r\n    const componentType = factories.find((x: any) => x.selector === selector)['componentType'];\r\n\r\n    return componentType;\r\n  }\r\n\r\n  /**\r\n   * Create wrappers in container\r\n   * @param container\r\n   * @param fieldConfig\r\n   * @param wrappers\r\n   */\r\n  private createComponentWrappers(container: ViewContainerRef, fieldConfig: FieldConfig, wrappers: string[]): ViewContainerRef {\r\n\r\n    wrappers.forEach(wrapperName => {\r\n      container = this.createWrapper(container, fieldConfig, wrapperName);\r\n    });\r\n\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * Create wrapper in container\r\n   * @param container\r\n   * @param fieldConfig\r\n   * @param wrapper\r\n   */\r\n  private createWrapper(container: ViewContainerRef, fieldConfig: FieldConfig, wrapper: string): ViewContainerRef {\r\n    const componentType = this.readComponentType(wrapper);\r\n\r\n    // create component from component type\r\n    const componentFactory = this.resolver.resolveComponentFactory(componentType);\r\n    const ref = <ComponentRef<FieldWrapper>>container.createComponent(componentFactory);\r\n\r\n    Object.assign(ref.instance, {\r\n      group: this.group, // this only need if we have form groups\r\n      config: fieldConfig\r\n    });\r\n\r\n    return ref.instance.fieldComponent;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<form class=\\\"dynamic-form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save($event)\\\" #dynamicForm=\\\"ngForm\\\">\\r\\n  <ng-container appEavField [config]=\\\"config\\\" [group]=\\\"form\\\">\\r\\n  </ng-container>\\r\\n</form>\\r\\n\\r\\n<span *ngIf=\\\"form && debugEnviroment\\\">\\r\\n  <button mat-icon-button type=\\\"button\\\" (click)=\\\"showDebugItems = !showDebugItems\\\">\\r\\n    <i class=\\\"eav-icon-flash\\\"></i>\\r\\n  </button>\\r\\n</span>\\r\\n<div *ngIf=\\\"form && debugEnviroment && showDebugItems\\\">\\r\\n  <div>\\r\\n    isValid: {{ form.valid }}<br />\\r\\n  </div>\\r\\n  <pre>{{ form.value | json }}</pre>\\r\\n</div>\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormGroupDirective } from '@angular/forms';\r\n\r\nimport { FieldConfig } from '../../model/field-config';\r\nimport { Subscription } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  exportAs: 'appEavForm',\r\n  templateUrl: './eav-form.component.html',\r\n  selector: 'app-eav-form',\r\n  styleUrls: ['./eav-form.component.css']\r\n})\r\nexport class EavFormComponent implements OnChanges, OnInit, OnDestroy {\r\n  @ViewChild('dynamicForm') dynamicForm: FormGroupDirective;\r\n\r\n  @Input()\r\n  config: FieldConfig[] = [];\r\n\r\n  @Output()\r\n  submit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  formValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  form: FormGroup = new FormGroup({});\r\n  showDebugItems = false;\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  get changes() { return this.form.valueChanges; }\r\n  get valid() { return this.form.valid; }\r\n  get value() { return this.form.value; }\r\n  get debugEnviroment() {\r\n    return !environment.production;\r\n  }\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    // let group = this.formBuilder.group({});\r\n    this.createControlsInFormGroup(this.config);\r\n\r\n    this.subscriptions.push(\r\n      this.form.valueChanges.subscribe(val => {\r\n        // if (this.form.valid) {\r\n        // this.formErrors = this.FormService.validateForm(this.form, this.formErrors, true);\r\n\r\n        this.formValueChange.emit(val);\r\n        // }\r\n      }));\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // console.log('ngOnChanges EavFormComponent');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscriber => subscriber.unsubscribe());\r\n  }\r\n\r\n  /**\r\n   * Create form from configuration\r\n   * @param fieldConfigArray\r\n   */\r\n  private createControlsInFormGroup(fieldConfigArray: FieldConfig[]) {\r\n    // const group = this.formBuilder.group({});\r\n    fieldConfigArray.forEach(fieldConfig => {\r\n      if (fieldConfig.fieldGroup) {\r\n        this.createControlsInFormGroup(fieldConfig.fieldGroup);\r\n      } else {\r\n        this.form.addControl(fieldConfig.name, this.createControl(fieldConfig));\r\n      }\r\n    }\r\n    );\r\n\r\n    return this.form;\r\n  }\r\n\r\n  /**\r\n   *  Create form control\r\n   * @param config\r\n   */\r\n  private createControl(config: FieldConfig) {\r\n    // tslint:disable-next-line:prefer-const\r\n    let { disabled, validation, value } = config;\r\n    return this.formBuilder.control({ disabled, value }, validation);\r\n  }\r\n\r\n  // handleSubmit(event: Event) {\r\n  //   console.log('Submit');\r\n  //   event.preventDefault();\r\n  //   event.stopPropagation();\r\n  //   this.submit.emit(this.value);\r\n  // }\r\n\r\n  save(event) {\r\n    console.log('form save', event);\r\n    // Use this to emit value out\r\n    this.submit.emit(this.value);\r\n  }\r\n\r\n  submitOutside() {\r\n    this.dynamicForm.ngSubmit.emit(this.value);\r\n  }\r\n\r\n  setDisabled(name: string, disable: boolean, emitEvent: boolean) {\r\n    if (this.form.controls[name]) {\r\n      if (disable) {\r\n        this.form.controls[name].disable({ emitEvent: emitEvent });\r\n      } else {\r\n        this.form.controls[name].enable({ emitEvent: emitEvent });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set form control value\r\n   * @param name\r\n   * @param value\r\n   * @param emitEvent If emitEvent is true, this change will cause a valueChanges event on the FormControl\r\n   * to be emitted. This defaults to true (as it falls through to updateValueAndValidity).\r\n   */\r\n  setValue(name: string, value: any, emitEvent: boolean) {\r\n    if (value !== this.form.controls[name].value) {\r\n      console.log('CHANGE' + name + ' from value: ' + this.form.controls[name].value + ' to ' + value);\r\n      this.form.controls[name].setValue(value, { emitEvent: emitEvent });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Patch values to formGroup. It accepts an object with control names as keys, and will do it's best to\r\n   * match the values to the correct controls in the group.\r\n   * @param values\r\n   * @param emitEvent If emitEvent is true, this change will cause a valueChanges event on the FormGroup\r\n   * to be emitted. This defaults to true (as it falls through to updateValueAndValidity).\r\n   */\r\n  patchValue(values: { [key: string]: any }, emitEvent: boolean) {\r\n    // if (this.valueIsChanged(values)) {\r\n    // console.log('value patchValue');\r\n    this.form.patchValue(values, { emitEvent: emitEvent });\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * Check is value in form changed\r\n   *\r\n  */\r\n  public valueIsChanged = (values: { [key: string]: any }) => {\r\n    let valueIsChanged = false;\r\n    console.log('[Test Disabled] VALUECHANGED values', values);\r\n    console.log('[Test Disabled] VALUECHANGED form values', this.form.value);\r\n    Object.keys(this.form.value).forEach(valueKey => {\r\n      if (this.form.value[valueKey] !== values[valueKey]) {\r\n        valueIsChanged = true;\r\n      }\r\n    });\r\n\r\n    console.log('[Test Disabled] VALUECHANGED', valueIsChanged);\r\n    return valueIsChanged;\r\n  }\r\n}\r\n","\r\n// import 'zone.js';\r\nimport 'reflect-metadata';\r\n\r\nexport function InputType(annotation: any) {\r\n    return function (target: Function) {\r\n        // Object.defineProperty(target.prototype, 'wrapper', { value: () => annotation.wrapper });\r\n        // const metadata = new Component(annotation);\r\n        Reflect.defineMetadata('inputTypeAnnotations', annotation, target);\r\n    };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { EavFieldDirective } from './components/eav-field/eav-field.directive';\r\nimport { EavFormComponent } from './components/eav-form/eav-form.component';\r\nimport {\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        EavFieldDirective,\r\n        EavFormComponent,\r\n    ],\r\n    exports: [\r\n        EavFormComponent\r\n    ],\r\n})\r\nexport class EavDynamicFormModule { }\r\n","module.exports = \"\"","import { Component, OnInit, ChangeDetectorRef, AfterContentChecked } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { MultiItemEditFormComponent } from '../../multi-item-edit-form/multi-item-edit-form.component';\r\nimport { EavAdminUiService } from '../../../shared/services/eav-admin-ui.service';\r\n\r\n/**\r\n * This component only open multi-item-dailog component in mat-dialog window\r\n */\r\n@Component({\r\n  selector: 'app-open-multi-item-dialog',\r\n  templateUrl: './open-multi-item-dialog.component.html',\r\n  // styleUrls: ['./open-multi-item-dialog.component.css']\r\n})\r\nexport class OpenMultiItemDialogComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog,\r\n    private eavAdminUiService: EavAdminUiService) {\r\n\r\n    // Open dialog\r\n    const dialogRef = this.eavAdminUiService.openItemEditWithContent(this.dialog, MultiItemEditFormComponent);\r\n\r\n    // Close dialog\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.afterClosedDialog();\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  /**\r\n   * Triggered after dialog is closed\r\n   */\r\n  private afterClosedDialog() {\r\n    console.log('The dialog was closed');\r\n    // find and remove iframe\r\n    // TODO: this is not good - need to find better solution\r\n    const iframes = window.parent.frames.document.getElementsByTagName('iframe');\r\n    if (iframes[0] && iframes[0].parentElement) {\r\n      iframes[0].parentElement.remove();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StoreModule, Store } from '@ngrx/store';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatMenuModule,\r\n  MatSnackBarModule,\r\n  MatDialogModule\r\n} from '@angular/material';\r\n\r\nimport { MultiItemEditFormComponent } from './multi-item-edit-form/multi-item-edit-form.component';\r\nimport { EavDynamicFormModule } from '../eav-dynamic-form/eav-dynamic-form.module';\r\nimport { ItemEditFormComponent } from './item-edit-form/item-edit-form.component';\r\nimport { EavMaterialControlsModule } from '../eav-material-controls/eav-material-controls.module';\r\nimport { reducers } from '../shared/store';\r\n\r\nimport { ItemEffects } from '../shared/effects/item.effects';\r\nimport { ContentTypeEffects } from '../shared/effects/content-type.effects';\r\nimport { EavEffects } from '../shared/effects/eav.effects';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { OpenMultiItemDialogComponent } from './dialogs/open-multi-item-dialog/open-multi-item-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MultiItemEditFormComponent,\r\n    ItemEditFormComponent,\r\n    OpenMultiItemDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatSnackBarModule,\r\n    EavDynamicFormModule,\r\n    EavMaterialControlsModule,\r\n    MatDialogModule,\r\n    StoreModule.forFeature('eavItemDialog', reducers),\r\n    EffectsModule.forFeature([ItemEffects, ContentTypeEffects, EavEffects]),\r\n    TranslateModule.forChild()\r\n  ],\r\n  entryComponents: [\r\n    MultiItemEditFormComponent\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n})\r\nexport class EavItemDialogModule { }\r\n","module.exports = \".button-top-right {\\r\\n\\tposition: absolute;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"(contentType$ | async)\\\">\\r\\n    <!-- <button mat-icon-button (click)=\\\"deleteItem()\\\" class=\\\"button-top-right\\\">\\r\\n        <mat-icon class=\\\"mat-24\\\">close</mat-icon>\\r\\n    </button> -->\\r\\n\\r\\n    <app-eav-form [config]=\\\"itemFields$ | async\\\" (submit)=\\\"submit($event)\\\" (formValueChange)=\\\"formValueChange($event)\\\">\\r\\n    </app-eav-form>\\r\\n    <!-- <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-default submit-button\\\" (click)=\\\"changeThis()\\\">change</button> -->\\r\\n</div>\"","import {\r\n  Component, ViewChild, OnInit, Input, OnChanges, OnDestroy, EventEmitter, Output\r\n} from '@angular/core';\r\nimport { ValidatorFn } from '@angular/forms';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { switchMap, filter } from 'rxjs/operators';\r\nimport { Action } from '@ngrx/store';\r\n\r\n// TODO: fix this dependency - from other module - move maybe to shared\r\nimport { FieldConfig } from '../../eav-dynamic-form/model/field-config';\r\n// TODO: fix this dependency\r\nimport { EavFormComponent } from '../../eav-dynamic-form/components/eav-form/eav-form.component';\r\nimport {\r\n  Item, ContentType, EavAttributes, EavValues\r\n} from '../../shared/models/eav';\r\nimport { AttributeDef } from '../../shared/models/eav/attribute-def';\r\nimport { InputTypesConstants } from '../../shared/constants/input-types-constants';\r\nimport { ItemService } from '../../shared/services/item.service';\r\nimport { ContentTypeService } from '../../shared/services/content-type.service';\r\nimport { LocalizationHelper } from '../../shared/helpers/localization-helper';\r\nimport { ValidationHelper } from '../../eav-material-controls/validators/validation-helper';\r\nimport { EavService } from '../../shared/services/eav.service';\r\nimport { Actions } from '@ngrx/effects';\r\nimport * as fromItems from '../../shared/store/actions/item.actions';\r\n\r\n@Component({\r\n  selector: 'app-item-edit-form',\r\n  templateUrl: './item-edit-form.component.html',\r\n  styleUrls: ['./item-edit-form.component.css']\r\n})\r\nexport class ItemEditFormComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild(EavFormComponent) form: EavFormComponent;\r\n\r\n  @Output()\r\n  itemFormValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Input() defaultLanguage: string;\r\n\r\n  @Input()\r\n  set currentLanguage(value: string) {\r\n    this.currentLanguageValue = value;\r\n    this.setFormValues(this.item, false); // need set emit to true because of  external commponents\r\n  }\r\n  get currentLanguage(): string {\r\n    return this.currentLanguageValue;\r\n  }\r\n\r\n  @Input()\r\n  set item(value: Item) {\r\n    this.itemBehaviorSubject$.next(value);\r\n  }\r\n  get item(): Item {\r\n    return this.itemBehaviorSubject$.getValue();\r\n  }\r\n\r\n  private eavConfig;\r\n  private currentLanguageValue: string;\r\n  private itemBehaviorSubject$: BehaviorSubject<Item> = new BehaviorSubject<Item>(null);\r\n  contentType$: Observable<ContentType>;\r\n  itemFields$: Observable<FieldConfig[]>;\r\n\r\n  formIsValid = false;\r\n\r\n  constructor(\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private eavService: EavService,\r\n    private actions$: Actions\r\n  ) {\r\n    this.eavConfig = eavService.getEavConfiguration();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.itemBehaviorSubject$.subscribe((item: Item) => {\r\n      this.setFormValues(item, false);\r\n    });\r\n\r\n    this.loadContentTypeFromStore();\r\n  }\r\n\r\n  public formSaveObservable(): Observable<Action> {\r\n    return this.actions$\r\n      .ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES)\r\n      .pipe(filter((action: fromItems.SaveItemAttributesValuesAction) => action.item.entity.id === this.item.entity.id));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.itemBehaviorSubject$.unsubscribe();\r\n    // this.formSuccess.unsubscribe();\r\n    // this.formError.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    console.log('ItemEditFormComponent current change: ', this.currentLanguage);\r\n    // this.formIsValid = this.form.form.valid;\r\n  }\r\n\r\n  /**\r\n   * Update NGRX/store on form value change\r\n   * @param values key:value list of fields from form\r\n   */\r\n  formValueChange(values: { [key: string]: any }) {\r\n    if (this.form.form.valid) {\r\n      this.itemService.updateItemAttributesValues(this.item.entity.id, values, this.currentLanguage, this.defaultLanguage);\r\n    }\r\n\r\n    // emit event to perent\r\n    this.itemFormValueChange.emit();\r\n  }\r\n\r\n  submit(values: { [key: string]: any }) {\r\n    console.log('submit item edit');\r\n    console.log(values);\r\n\r\n    if (this.form.form.valid) {\r\n      // TODO create body for submit\r\n      this.eavService.saveItem(this.eavConfig.appId, this.item, values, this.currentLanguage, this.defaultLanguage);\r\n    }\r\n  }\r\n\r\n  // deleteItem() {\r\n  //   this.itemService.deleteItem(this.item);\r\n  // }\r\n\r\n  private setFormValues = (item: Item, emit: boolean) => {\r\n    if (this.form) {\r\n      const formValues: { [name: string]: any } = {};\r\n      Object.keys(item.entity.attributes).forEach(attributeKey => {\r\n        formValues[attributeKey] = LocalizationHelper.translate(this.currentLanguage,\r\n          this.defaultLanguage, item.entity.attributes[attributeKey], null);\r\n      });\r\n\r\n      if (this.form.valueIsChanged(formValues)) {\r\n        // set new values to form\r\n        this.form.patchValue(formValues, emit);\r\n      }\r\n      // important to be after patchValue\r\n      this.eavService.triggerFormSetValueChange(formValues);\r\n    }\r\n  }\r\n\r\n  private loadContentTypeFromStore() {\r\n    // Load content type for item from store\r\n    this.contentType$ = this.contentTypeService.getContentTypeById(this.item.entity.type.id);\r\n    // create form fields from content type\r\n    this.itemFields$ = this.loadContentTypeFormFields();\r\n  }\r\n\r\n  /**\r\n   * load content type attributes to Formly FormFields (formlyFieldConfigArray)\r\n   */\r\n  private loadContentTypeFormFields = (): Observable<FieldConfig[]> => {\r\n    return this.contentType$\r\n      .pipe(\r\n        switchMap((data) => {\r\n          const parentFieldGroup = this.createEmptyFieldGroup(null, false);\r\n          let currentFieldGroup = parentFieldGroup;\r\n          // loop through contentType attributes\r\n          data.contentType.attributes.forEach((attribute, index) => {\r\n            const formlyFieldConfig: FieldConfig = this.loadFieldFromDefinitionTest(attribute, index);\r\n            // if input type is empty-default create new field group and than continue to add fields to that group\r\n            if (attribute.settings.InputType.values[0].value === InputTypesConstants.emptyDefault) {\r\n              const collapsed = attribute.settings.DefaultCollapsed ? attribute.settings.DefaultCollapsed.values[0].value : false;\r\n              currentFieldGroup = this.createEmptyFieldGroup(attribute, collapsed);\r\n              parentFieldGroup.fieldGroup.push(currentFieldGroup);\r\n            } else {\r\n              currentFieldGroup.fieldGroup.push(formlyFieldConfig);\r\n            }\r\n          });\r\n          return of([parentFieldGroup]);\r\n        })\r\n      );\r\n  }\r\n\r\n  // TEST\r\n  private loadFieldFromDefinitionTest(attribute: AttributeDef, index: number): FieldConfig {\r\n    if (attribute.settings.InputType.values[0].value === 'custom-gps') {\r\n      console.log('loadFieldFromDefinitionTest attribute:', attribute);\r\n    }\r\n\r\n    console.log('loadFieldFromDefinitionTest', attribute.settings.InputType);\r\n    if (attribute.settings.InputType) {\r\n\r\n      // if (attribute.settings.InputType.values[0].value.startWith('custom')) {\r\n      //   return this.loadFieldFromDefinition(attribute, InputTypesConstants.external, index);\r\n      // } else {\r\n      //   return this.loadFieldFromDefinition(attribute, attribute.settings.InputType.values[0].value, index);\r\n      // }\r\n\r\n      switch (attribute.settings.InputType.values[0].value) {\r\n        case InputTypesConstants.stringDefault:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.stringDefault, index);\r\n        case InputTypesConstants.stringUrlPath:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.stringUrlPath, index);\r\n        // return this.loadFieldFromDefinitionStringUrlPath(attribute);\r\n        case InputTypesConstants.booleanDefault:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.booleanDefault, index);\r\n        // return this.getStringIconFontPickerFormlyField(attribute);\r\n        case InputTypesConstants.stringDropdown:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.stringDropdown, index);\r\n        // return this.loadFieldFromDefinitionStringDropDown(attribute);\r\n        case InputTypesConstants.datetimeDefault:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.datetimeDefault, index);\r\n        case InputTypesConstants.numberDefault:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.numberDefault, index);\r\n        case InputTypesConstants.stringFontIconPicker:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.stringFontIconPicker, index);\r\n        case InputTypesConstants.entityDefault:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.entityDefault, index);\r\n        case InputTypesConstants.hyperlinkDefault:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.hyperlinkDefault, index);\r\n        case InputTypesConstants.hyperlinkLibrary:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.hyperlinkLibrary, index);\r\n        case InputTypesConstants.external:\r\n        case 'string-wysiwyg':\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.external, index);\r\n        case 'custom-my-field-test':\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.external, index);\r\n        default:\r\n          return this.loadFieldFromDefinition(attribute, InputTypesConstants.stringDefault, index);\r\n      }\r\n\r\n    } else {\r\n      return this.loadFieldFromDefinition(attribute, InputTypesConstants.stringDefault, index);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load formly field from AttributeDef\r\n   * @param attribute\r\n   */\r\n  private loadFieldFromDefinition(attribute: AttributeDef, inputType: string, index: number): FieldConfig {\r\n    // const inputType = InputTypesConstants.stringDefault; // attribute.settings.InputType.values[0].value;\r\n    const settingsTranslated = LocalizationHelper.translateSettings(attribute.settings, this.currentLanguage, this.defaultLanguage);\r\n    // set validation for all input types\r\n    const validationList: ValidatorFn[] = ValidationHelper.setDefaultValidations(settingsTranslated);\r\n    const required = settingsTranslated.Required ? settingsTranslated.Required : false;\r\n    // LocalizationHelper.translate(this.currentLanguage, this.defaultLanguage, attribute.settings.Required, false);\r\n    // attribute.settings.Required ? attribute.settings.Required.values[0].value : false;\r\n    const value = LocalizationHelper.translate(this.currentLanguage, this.defaultLanguage,\r\n      this.item.entity.attributes[attribute.name], null);\r\n\r\n    const disabled: boolean = settingsTranslated.Disabled\r\n      ? settingsTranslated.Disabled : (this.isControlDisabledForCurrentLanguage(this.currentLanguage, this.defaultLanguage,\r\n        this.item.entity.attributes[attribute.name], attribute.name));\r\n\r\n    // const label = settingsTranslated.Name ? settingsTranslated.Name : null;\r\n    const label = attribute !== null\r\n      ? (settingsTranslated !== null && settingsTranslated.Name) ? settingsTranslated.Name : attribute.name\r\n      : null;\r\n\r\n    // LocalizationHelper.translate(this.currentLanguage, this.defaultLanguage, attribute.settings.Name, null);\r\n    return {\r\n      // valueKey: `${attribute.name}.values[0].value`,\r\n      // pattern: pattern,\r\n      disabled: disabled,\r\n      entityId: this.item.entity.id,\r\n      fullSettings: attribute.settings,\r\n      header: this.item.header,\r\n      index: index,\r\n      label: label,\r\n      name: attribute.name,\r\n      placeholder: `Enter ${attribute.name}`, // TODO: need see what to use placeholder or label or both\r\n      required: required,\r\n      settings: settingsTranslated,\r\n      type: inputType, // TODO see do we need this\r\n      validation: validationList,\r\n      value: value,\r\n      wrappers: ['app-hidden-wrapper'],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Determines is control disabled\r\n   * @param currentLanguage\r\n   * @param defaultLanguage\r\n   * @param attributeValues\r\n   * @param attributeKey\r\n   */\r\n  private isControlDisabledForCurrentLanguage(currentLanguage: string, defaultLanguage: string,\r\n    attributeValues: EavValues<any>, attributeKey: string): boolean {\r\n    if (LocalizationHelper.isEditableTranslationExist(attributeValues, currentLanguage, defaultLanguage)) {\r\n      return false;\r\n      // } else if (LocalizationHelper.isReadonlyTranslationExist(attributeValues, currentLanguage)) {\r\n      //   return true;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enables all controls in form\r\n   * @param allAttributes\r\n   */\r\n  private enableAllControls(allAttributes: EavAttributes) {\r\n    Object.keys(allAttributes).forEach(attributeKey => {\r\n      if (this.form.value[attributeKey] === undefined) {\r\n        this.form.setDisabled(attributeKey, false, false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * loop trough all controls and set disable control if needed\r\n   * @param allAttributes\r\n   * @param currentLanguage\r\n   * @param defaultLanguage\r\n   */\r\n  private disableControlsForCurrentLanguage(allAttributes: EavAttributes, currentLanguage: string, defaultLanguage: string) {\r\n    Object.keys(this.item.entity.attributes).forEach(attributeKey => {\r\n      const disabled: boolean = this.isControlDisabledForCurrentLanguage(currentLanguage, defaultLanguage,\r\n        this.item.entity.attributes[attributeKey], attributeKey);\r\n      this.form.setDisabled(attributeKey, disabled, false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create title field group with collapsible wrapper\r\n   */\r\n  private createEmptyFieldGroup = (attribute: AttributeDef, collapse: boolean): FieldConfig => {\r\n    let settingsTranslated = null;\r\n    if (attribute) {\r\n      settingsTranslated = LocalizationHelper.translateSettings(attribute.settings, this.currentLanguage, this.defaultLanguage);\r\n    }\r\n\r\n    return {\r\n      collapse: collapse,\r\n      fieldGroup: [],\r\n      header: this.item.header,\r\n      label: attribute !== null\r\n        ? (settingsTranslated !== null && settingsTranslated.Name) ? settingsTranslated.Name : attribute.name\r\n        : 'Edit Item',\r\n      name: attribute !== null ? attribute.name : 'Edit Item',\r\n      settings: settingsTranslated,\r\n      type: InputTypesConstants.emptyDefault,\r\n      wrappers: ['app-collapsible-wrapper'],\r\n    };\r\n  }\r\n}\r\n","module.exports = \" .example-card {\\r\\n    max-width: 600px;\\r\\n    margin: 0 auto; \\r\\n\\r\\n    /* position: fixed; \\r\\n    left: 50%;\\r\\n    margin-left: -400px; */\\r\\n  } \\r\\n\\r\\n  .button-top-right {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n  } \\r\\n\\r\\n  .disabled {\\r\\n  color: rgba(0,0,0,.26);\\r\\n  background-color: rgba(0,0,0,.12);\\r\\n}\"","module.exports = \"<!-- <mat-card class=\\\"example-card\\\" *ngIf=\\\"(items$ | async) && (items$ | async).length\\\"> -->\\r\\n<!-- <mat-dialog-actions> -->\\r\\n<!-- class=\\\"button-top-right\\\" -->\\r\\n<!-- <button mat-icon-button (click)=\\\"close()\\\">\\r\\n    <mat-icon class=\\\"mat-24\\\">close</mat-icon>\\r\\n  </button>\\r\\n</mat-dialog-actions> -->\\r\\n<div mat-dialog-content *ngIf=\\\"(items$ | async) && (items$ | async).length\\\">\\r\\n  <!-- <button mat-icon-button (click)=\\\"close()\\\" class=\\\"button-top-right\\\">\\r\\n    <mat-icon class=\\\"mat-24\\\">close</mat-icon>\\r\\n  </button> -->\\r\\n\\r\\n  <app-eav-language-switcher *ngIf=\\\"(languages$ | async).length > 0\\\" [languages]=\\\"(languages$ | async)\\\" [currentLanguage]=\\\"(currentLanguage$ | async)\\\"></app-eav-language-switcher>\\r\\n\\r\\n  <mat-error *ngIf=\\\"!formsAreValid\\\">\\r\\n    <span *ngFor=\\\"let formError of formErrors;\\\">\\r\\n      <p *ngFor=\\\"let key of Object.keys(formError)\\\">{{key}}: {{ formError[key] | translate}}</p>\\r\\n    </span>\\r\\n  </mat-error>\\r\\n\\r\\n  <div *ngFor=\\\"let item of (items$ | async); trackBy:trackByFn\\\">\\r\\n    <app-item-edit-form [item]=\\\"item\\\" [currentLanguage]=\\\"(currentLanguage$ | async)\\\" [defaultLanguage]=\\\"(defaultLanguage$ | async)\\\"\\r\\n      (itemFormValueChange)=\\\"formValueChange($event)\\\"></app-item-edit-form>\\r\\n  </div>\\r\\n  <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-default submit-button\\\" [ngClass]=\\\"{ 'disabled': !formsAreValid }\\\"\\r\\n    (click)=\\\"saveAll(true)\\\">{{ 'Button.Save' | translate}}</button>\\r\\n  <button mat-icon-button type=\\\"button\\\" [matMenuTriggerFor]=\\\"saveMenu\\\" [ngClass]=\\\"{ 'disabled': !formsAreValid }\\\">\\r\\n    <i class=\\\"eav-icon-down-dir\\\"></i>\\r\\n  </button>\\r\\n  <mat-menu #saveMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" (click)=\\\"saveAll(true)\\\">{{ 'Button.Save' | translate}}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" (click)=\\\"saveAll(false)\\\">{{ 'Button.SaveAndKeepOpen' | translate}}</button>\\r\\n  </mat-menu>\\r\\n  <button mat-icon-button type=\\\"button\\\" [matMenuTriggerFor]=\\\"publishModeMenu\\\" [ngClass]=\\\"{ 'disabled': !formsAreValid }\\\">\\r\\n    <i [ngClass]=\\\"{'eav-icon-eye': publishMode === 'show', 'eav-icon-eye-close': publishMode === 'hide', 'eav-icon-git-branch': publishMode === 'branch'}\\\"></i> {{ 'SaveMode.' + publishMode | translate }}\\r\\n    <i class=\\\"eav-icon-down-dir\\\"></i>\\r\\n  </button>\\r\\n\\r\\n  <mat-menu #publishModeMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n    <button *ngIf=\\\"eavConfig.versioningOptions.show\\\" mat-menu-item type=\\\"button\\\" (click)=\\\"publishMode = 'show'\\\">\\r\\n      <i class=\\\"eav-icon-eye\\\"></i>{{ 'SaveMode.show' | translate }}</button>\\r\\n    <button *ngIf=\\\"eavConfig.versioningOptions.hide\\\" mat-menu-item type=\\\"button\\\" (click)=\\\"publishMode = 'hide'\\\">\\r\\n      <i class=\\\"eav-icon-eye-close\\\"></i>{{ 'SaveMode.hide' | translate }}</button>\\r\\n    <button *ngIf=\\\"eavConfig.versioningOptions.branch\\\" mat-menu-item type=\\\"button\\\" (click)=\\\"publishMode = 'branch'\\\">\\r\\n      <i class=\\\"eav-icon-git-branch\\\"></i>{{ 'SaveMode.branch' |translate }}</button>\\r\\n  </mat-menu>\\r\\n</div>\\r\\n<!-- </mat-card> -->\"","import {\r\n  Component, OnInit, QueryList, ViewChildren, ChangeDetectorRef, AfterContentChecked, OnDestroy, Inject, AfterContentInit, AfterViewInit\r\n} from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Observable, zip, of, Subscription } from 'rxjs';\r\nimport { switchMap, map, tap, catchError } from 'rxjs/operators';\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions } from '@ngrx/effects';\r\nimport { MatSnackBar, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport 'reflect-metadata';\r\nimport * as fromItems from '../../shared/store/actions/item.actions';\r\nimport { Item, Language } from '../../shared/models/eav';\r\nimport { ContentTypeService } from '../../shared/services/content-type.service';\r\nimport { ItemEditFormComponent } from '../item-edit-form/item-edit-form.component';\r\nimport { ItemService } from '../../shared/services/item.service';\r\nimport { EavService } from '../../shared/services/eav.service';\r\nimport { LanguageService } from '../../shared/services/language.service';\r\nimport { ValidationMessagesService } from '../../eav-material-controls/validators/validation-messages-service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { JsonItem1 } from '../../shared/models/json-format-v1';\r\nimport { EavConfiguration } from '../../shared/models/eav-configuration';\r\nimport { InputTypeService } from '../../shared/services/input-type.service';\r\nimport { DialogTypeConstants } from '../../shared/constants/type-constants';\r\nimport { AdminDialogData } from '../../shared/models/eav/admin-dialog-data';\r\n\r\n@Component({\r\n  selector: 'app-multi-item-edit-form',\r\n  templateUrl: './multi-item-edit-form.component.html',\r\n  styleUrls: ['./multi-item-edit-form.component.css']\r\n})\r\nexport class MultiItemEditFormComponent implements OnInit, AfterContentChecked, OnDestroy {\r\n  @ViewChildren(ItemEditFormComponent) itemEditFormComponentQueryList: QueryList<ItemEditFormComponent>;\r\n\r\n  items$: Observable<Item[]>;\r\n  languages$: Observable<Language[]>;\r\n  currentLanguage$: Observable<string>;\r\n  defaultLanguage$: Observable<string>;\r\n  formSaveAllObservables$: Observable<Action>[] = [];\r\n  formErrors: { [key: string]: any }[] = [];\r\n  Object = Object;\r\n  formsAreValid = false;\r\n  closeWindow = false;\r\n  willPublish = false;     // default is won't publish, but will usually be overridden\r\n  publishMode = 'hide';    // has 3 modes: show, hide, branch (where branch is a hidden, linked clone)\r\n  enableDraft = false;\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  private eavConfig: EavConfiguration;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) private formDialogData: AdminDialogData,\r\n    private itemService: ItemService,\r\n    private inputTypeService: InputTypeService,\r\n    private contentTypeService: ContentTypeService,\r\n    private eavService: EavService,\r\n    private languageService: LanguageService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private actions$: Actions,\r\n    private snackBar: MatSnackBar,\r\n    private validationMessagesService: ValidationMessagesService,\r\n    private translate: TranslateService) {\r\n    this.currentLanguage$ = languageService.getCurrentLanguage();\r\n    this.defaultLanguage$ = languageService.getDefaultLanguage();\r\n\r\n    this.translate.setDefaultLang('en');\r\n    this.translate.use('en');\r\n    // Read configuration from queryString\r\n    this.eavConfig = this.eavService.getEavConfiguration();\r\n    this.languageService.loadLanguages(JSON.parse(this.eavConfig.langs), this.eavConfig.lang, this.eavConfig.langpri, 'en-us');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadItemsData();\r\n    this.setLanguageConfig();\r\n    // suscribe to form submit\r\n    this.saveFormMessagesSubscribe();\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.saveFormSuscribe();\r\n    this.setFormsAreValid();\r\n    // need this to detectChange this.formsAreValid after ViewChecked\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscriber => subscriber.unsubscribe());\r\n  }\r\n\r\n  /**\r\n   * observe formValue changes from all child forms\r\n   */\r\n  formValueChange() {\r\n    this.setFormsAreValid();\r\n    // reset form errors\r\n    this.formErrors = [];\r\n  }\r\n\r\n  /**\r\n * save all forms\r\n */\r\n  saveAll(close: boolean) {\r\n    if (this.formsAreValid) {\r\n      this.itemEditFormComponentQueryList.forEach((itemEditFormComponent: ItemEditFormComponent) => {\r\n        itemEditFormComponent.form.submitOutside();\r\n      });\r\n\r\n      if (close) {\r\n        this.closeWindow = true;\r\n        // this.close();\r\n      }\r\n    } else {\r\n      this.displayAllValidationMessages();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * close (remove) iframe window\r\n   */\r\n  close() {\r\n    // find and remove iframe\r\n    // TODO: this is not good - need to find better solution\r\n    const iframes = window.parent.frames.document.getElementsByTagName('iframe');\r\n    if (iframes[0] && iframes[0].parentElement) {\r\n      iframes[0].parentElement.remove();\r\n    }\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return item.entity.id;\r\n  }\r\n\r\n  /**\r\n   * Load all data for forms\r\n   */\r\n  private loadItemsData() {\r\n    const entityId: number = Number(this.formDialogData.id);\r\n\r\n    // if dialog type load with entity ids (edit - entity)\r\n    if (this.formDialogData.type === DialogTypeConstants.itemEditWithEntityId && entityId) {\r\n      this.eavService.loadAllDataForFormByEntity(this.eavConfig.appId, [{ 'EntityId': entityId }]).subscribe(data => {\r\n        this.afterLoadItemsData(data);\r\n      });\r\n      // this.items$ = this.itemService.selectItemsByIdList([entityId]);\r\n    } else {  // else dialog type load without entity ids. (edit - toolbar)\r\n      this.eavService.loadAllDataForForm(this.eavConfig.appId, this.eavConfig.items).subscribe(data => {\r\n        this.afterLoadItemsData(data);\r\n        this.items$ = this.itemService.selectItemsByIdList(data.Items.map(item => item.Entity.Id));\r\n      });\r\n    }\r\n  }\r\n\r\n  private afterLoadItemsData(data: any) {\r\n    this.itemService.loadItems(data.Items);\r\n    this.inputTypeService.loadInputTypes(data.InputTypes);\r\n    this.contentTypeService.loadContentTypes(data.ContentTypes);\r\n    this.setPublishMode(data.Items);\r\n    this.items$ = this.itemService.selectItemsByIdList(data.Items.map(item => item.Entity.Id));\r\n  }\r\n\r\n  /**\r\n   * Read Eav Configuration\r\n   */\r\n  // private setEavConfiguration() {\r\n  //   const queryStringParameters = UrlHelper.readQueryStringParameters(this.route.snapshot.fragment);\r\n  //   console.log('queryStringParameters', queryStringParameters);\r\n  //   // const eavConfiguration: EavConfiguration = UrlHelper.getEavConfiguration(queryStringParameters);\r\n  //   this.eavConfig = UrlHelper.getEavConfiguration(queryStringParameters);\r\n  // }\r\n\r\n  private setLanguageConfig() {\r\n    this.setTranslateLanguage(this.eavConfig.lang);\r\n    // UILanguage harcoded (for future usage)\r\n    // this.languageService.loadLanguages(JSON.parse(this.eavConfig.langs), this.eavConfig.lang, this.eavConfig.langpri, 'en-us');\r\n\r\n    this.languages$ = this.languageService.selectAllLanguages();\r\n    // on current language change reset form errors\r\n    this.subscriptions.push(this.currentLanguage$.subscribe(len => {\r\n      this.formErrors = [];\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Set translate language of all forms\r\n   * @param language\r\n   *\r\n   */\r\n  private setTranslateLanguage(language: string) {\r\n    if (language) {\r\n      // TODO: find better solution\r\n      const isoLangCode = language.substring(0, language.indexOf('-') > 0 ? language.indexOf('-') : 2);\r\n      this.translate.use(isoLangCode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * With zip function look all forms submit observables and when all finish save all data (call savemany service)\r\n   */\r\n  private saveFormSuscribe() {\r\n    // important - only subscribe once\r\n    if (this.formSaveAllObservables$.length === 0) {\r\n      if (this.itemEditFormComponentQueryList && this.itemEditFormComponentQueryList.length > 0) {\r\n        this.itemEditFormComponentQueryList.forEach((itemEditFormComponent: ItemEditFormComponent) => {\r\n          this.formSaveAllObservables$.push(itemEditFormComponent.formSaveObservable());\r\n        });\r\n      }\r\n\r\n      if (this.formSaveAllObservables$ && this.formSaveAllObservables$.length > 0) {\r\n        this.subscriptions.push(\r\n          zip(...this.formSaveAllObservables$)\r\n            .pipe(\r\n              switchMap((actions: fromItems.SaveItemAttributesValuesAction[]) => {\r\n                console.log('ZIP ACTIONS ITEM: ', JsonItem1.create(actions[0].item));\r\n                const allItems = [];\r\n                actions.forEach(action => {\r\n                  allItems.push(JsonItem1.create(action.item));\r\n                });\r\n\r\n                const body = `{\"Items\": ${JSON.stringify(allItems)}}`;\r\n                return this.eavService.savemany(this.eavConfig.appId, this.eavConfig.partOfPage, body)\r\n                  .pipe(\r\n                    map(data => this.eavService.saveItemSuccess(data)),\r\n                    tap(data => console.log('working'))\r\n                  );\r\n              }),\r\n              catchError(err => of(this.eavService.saveItemError(err)))\r\n            )\r\n            .subscribe()\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * display form messages on form success or form error\r\n   */\r\n  private saveFormMessagesSubscribe() {\r\n    this.subscriptions.push(this.actions$\r\n      .ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS)\r\n      .subscribe((action: fromItems.SaveItemAttributesValuesSuccessAction) => {\r\n        console.log('success END: ', action.data);\r\n        // TODO show success message\r\n        // this.snackBar.open('saved',);\r\n        this.snackBarOpen('saved', this.closeWindow);\r\n      }));\r\n    this.subscriptions.push(this.actions$\r\n      .ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES_ERROR)\r\n      .subscribe((action: fromItems.SaveItemAttributesValuesErrorAction) => {\r\n        console.log('error END', action.error);\r\n        // TODO show error message\r\n        this.snackBarOpen('error', false);\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * Open snackbar with message and after closed call function close\r\n   * @param message\r\n   * @param callClose\r\n   */\r\n  private snackBarOpen(message: string, callClose: boolean) {\r\n    const snackBarRef = this.snackBar.open(message, '', {\r\n      duration: 2000\r\n    });\r\n\r\n    if (callClose) {\r\n      this.subscriptions.push(\r\n        snackBarRef.afterDismissed().subscribe(null, null, () => {\r\n          this.close();\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines whether all forms are valid and sets a this.formsAreValid depending on it\r\n   */\r\n  private setFormsAreValid() {\r\n    this.formsAreValid = false;\r\n    if (this.itemEditFormComponentQueryList && this.itemEditFormComponentQueryList.length > 0) {\r\n      this.formsAreValid = true;\r\n      this.itemEditFormComponentQueryList.forEach((itemEditFormComponent: ItemEditFormComponent) => {\r\n        if (itemEditFormComponent.form.valid === false) {\r\n          this.formsAreValid = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fill in all error validation messages from all forms\r\n   */\r\n  private displayAllValidationMessages() {\r\n    this.formErrors = [];\r\n    if (this.itemEditFormComponentQueryList && this.itemEditFormComponentQueryList.length > 0) {\r\n      this.itemEditFormComponentQueryList.forEach((itemEditFormComponent: ItemEditFormComponent) => {\r\n        if (itemEditFormComponent.form.form.invalid) {\r\n          this.formErrors.push(this.validationMessagesService.validateForm(itemEditFormComponent.form.form, false));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // TODO: finish group and new entity ?????\r\n  private setPublishMode(items: Item[]) {\r\n    items.forEach(item => {\r\n\r\n      // If the entity is null, it does not exist yet. Create a new one\r\n      // TODO: do we need this ???\r\n      // if (!item.entity && !!item.header.contentTypeName) {\r\n      //   // TODO: do we need this ???\r\n      //   item.entity = entitiesSvc.newEntity(item.header);\r\n      // }\r\n      // TODO: do we need this ???\r\n      // item.entity = enhanceEntity(item.entity);\r\n\r\n      ////// load more content-type metadata to show\r\n      //// vm.items[i].ContentType = contentTypeSvc.getDetails(vm.items[i].Header.ContentTypeName);\r\n      // set slot value - must be inverte for boolean-switch\r\n      // const grp = item.header.group;\r\n      // item.slotIsUsed = (grp === null || grp === undefined || grp.SlotIsEmpty !== true);\r\n    });\r\n\r\n    // this.willPublish = items[0].entity.IsPublished;\r\n    // this.enableDraft = items[0].header.entityId !== 0; // it already exists, so enable draft\r\n    // this.publishMode = items[0].entity.IsBranch\r\n    //   ? 'branch' // it's a branch, so it must have been saved as a draft-branch\r\n    //   : items[0].entity.IsPublished ? 'show' : 'hide';\r\n\r\n    // if publish mode is prohibited, revert to default\r\n    if (!this.eavConfig.versioningOptions[this.publishMode]) {\r\n      this.publishMode = Object.keys(this.eavConfig.versioningOptions)[0];\r\n    }\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<!-- This div is adam-hint -->\\r\\n<div class=\\\"small pull-right\\\">\\r\\n  <span style=\\\"opacity: 0.5\\\">drop files here -</span>\\r\\n  <a href=\\\"http://2sxc.org/help?tag=adam\\\" target=\\\"_blank\\\" matTooltip=\\\"ADAM is the Automatic Digital Assets Manager - click to discover more\\\">\\r\\n    <i class=\\\"eav-icon-apple\\\"></i>\\r\\n    Adam\\r\\n  </a>\\r\\n  <span style=\\\"opacity: 0.5\\\"> is sponsored with\\r\\n    <i class=\\\"eav-icon-heart\\\"></i> by\\r\\n    <a tabindex=\\\"-1\\\" href=\\\"http://2sic.com/\\\" target=\\\"_blank\\\">\\r\\n      2sic.com\\r\\n    </a>\\r\\n  </span>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-hint',\r\n  templateUrl: './adam-hint.component.html',\r\n  styleUrls: ['./adam-hint.component.css']\r\n})\r\nexport class AdamHintComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\nimport { throwError as observableThrowError, Observable } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { UrlHelper } from '../../shared/helpers/url-helper';\r\nimport { SvcCreatorService } from '../../shared/services/svc-creator.service';\r\nimport { AdamItem } from '../../shared/models/adam/adam-item';\r\nimport { EavService } from '../../shared/services/eav.service';\r\nimport { EavConfiguration } from '../../shared/models/eav-configuration';\r\n\r\n@Injectable()\r\nexport class AdamService {\r\n\r\n  private eavConfig: EavConfiguration;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private svcCreatorService: SvcCreatorService,\r\n    private eavService: EavService) {\r\n\r\n    this.eavConfig = this.eavService.getEavConfiguration();\r\n  }\r\n\r\n  createSvc(subfolder, serviceConfig, url) {\r\n    // TODO: find how to solve serviceRoot\r\n    // const serviceRoot = 'http://2sxc-dnn742.dnndev.me/en-us/desktopmodules/2sxc/api/';\r\n    // const url = url, //UrlHelper.resolveServiceUrl('app-content/' + contentType + '/' + entityGuid + '/' + field, serviceRoot);\r\n    const folders = [];\r\n    const adamRoot = this.eavConfig.approot.substr(0, this.eavConfig.approot.indexOf('2sxc'));\r\n\r\n    // extend a json-response with a path (based on the adam-root) to also have a fullPath\r\n    const addFullPath = (value: AdamItem, key) => {\r\n      // 2dm 2018-03-29 special fix - sometimes the path already has the full path, sometimes not\r\n      // it should actually be resolved properly, but because I don't have time\r\n      // ATM (data comes from different web-services, which are also used in other places\r\n      // I'll just check if it's already in there\r\n      value.FullPath = value.Path;\r\n      if (value.Path && value.Path.toLowerCase().indexOf(adamRoot.toLowerCase()) === -1) {\r\n        value.FullPath = adamRoot + value.Path;\r\n      }\r\n    };\r\n\r\n    // create folder\r\n    const addFolder = (newfolder) => {\r\n      // maybe create model for data\r\n      return this.httpClient.post(url + '/folder',\r\n        {},\r\n        {\r\n          params: {\r\n            subfolder: subfolder,\r\n            newFolder: newfolder,\r\n            usePortalRoot: serviceConfig.usePortalRoot,\r\n            appId: this.eavConfig.appId\r\n          }\r\n        })\r\n        .pipe(\r\n          map((data: any) => {\r\n            reload();\r\n            return data;\r\n          }),\r\n          tap(data => console.log('addFolder: ', data)),\r\n          catchError(error => this.handleError(error))\r\n        );\r\n    };\r\n\r\n    const goIntoFolder = (childFolder): string => {\r\n      folders.push(childFolder);\r\n      const pathParts = childFolder.Path.split('/');\r\n      let subPath = '';\r\n      for (let i = 0; i < folders.length; i++) {\r\n        subPath = pathParts[pathParts.length - i - 2] + '/' + subPath;\r\n      }\r\n      subPath = subPath.replace('//', '/');\r\n      if (subPath[subPath.length - 1] === '/') {\r\n        subPath = subPath.substr(0, subPath.length - 1);\r\n      }\r\n\r\n      childFolder.Subfolder = subPath;\r\n      // now assemble the correct subfolder based on the folders-array\r\n      subfolder = subPath;\r\n\r\n      reload();\r\n\r\n      return subPath;\r\n    };\r\n\r\n    const goUp = () => {\r\n      if (folders.length > 0) {\r\n        folders.pop();\r\n      }\r\n      if (folders.length > 0) {\r\n        subfolder = folders[folders.length - 1].Subfolder;\r\n      } else {\r\n        subfolder = '';\r\n      }\r\n      reload();\r\n      return subfolder;\r\n    };\r\n\r\n    const getAll = (): Observable<AdamItem[]> => {\r\n\r\n      console.log('GET ALL subfolder:', subfolder);\r\n      // maybe create model for data\r\n      return this.httpClient.get(url + '/items',\r\n        {\r\n          params: {\r\n            subfolder: subfolder,\r\n            usePortalRoot: serviceConfig.usePortalRoot,\r\n            appId: this.eavConfig.appId\r\n          }\r\n        })\r\n        .pipe(\r\n          map((data: any) => {\r\n            data.forEach(addFullPath);\r\n            return data;\r\n          }),\r\n          tap(data => console.log('items subfolder: ', subfolder)),\r\n          catchError(error => this.handleError(error))\r\n        );\r\n    };\r\n\r\n    // delete, then reload\r\n    // IF verb DELETE fails, so I'm using get for now\r\n    const deleteItem = (item) => {\r\n      return this.httpClient.get(url + '/delete',\r\n        {\r\n          params: {\r\n            subfolder: subfolder,\r\n            isFolder: item.IsFolder,\r\n            id: item.Id,\r\n            usePortalRoot: serviceConfig.usePortalRoot,\r\n            appId: this.eavConfig.appId\r\n          }\r\n        })\r\n        .pipe(\r\n          map((data: any) => {\r\n            reload();\r\n            return data;\r\n          }),\r\n          // tap(data => console.log('delete: ', data))),\r\n          catchError(error => this.handleError(error))\r\n        );\r\n    };\r\n\r\n    // rename, then reload\r\n    const rename = (item, newName) => {\r\n      return this.httpClient.get(url + '/rename',\r\n        {\r\n          params: {\r\n            subfolder: subfolder,\r\n            isFolder: item.IsFolder,\r\n            id: item.Id,\r\n            usePortalRoot: serviceConfig.usePortalRoot,\r\n            newName: newName,\r\n            appId: this.eavConfig.appId\r\n          }\r\n        })\r\n        .pipe(\r\n          map((data: any) => {\r\n            reload();\r\n            return data;\r\n          }),\r\n          // tap(data => console.log('rename: ', data)),\r\n          catchError(error => this.handleError(error))\r\n        );\r\n    };\r\n\r\n    // get the correct url for uploading as it is needed by external services (dropzone)\r\n    const uploadUrl = (targetSubfolder: string): string => {\r\n      let urlUpl = (targetSubfolder === '')\r\n        ? url\r\n        : url + '?subfolder=' + targetSubfolder;\r\n      urlUpl += (urlUpl.indexOf('?') === -1 ? '?' : '&')\r\n        + 'usePortalRoot=' + serviceConfig.usePortalRoot\r\n        + '&appId=' + this.eavConfig.appId;\r\n      return urlUpl;\r\n    };\r\n\r\n    let svc = {\r\n      url,\r\n      subfolder,\r\n      folders,\r\n      adamRoot,\r\n      getAll,\r\n      uploadUrl,\r\n      addFullPath,\r\n      addFolder,\r\n      goIntoFolder,\r\n      goUp,\r\n      deleteItem,\r\n      rename,\r\n      liveListReload: null,\r\n    };\r\n\r\n    svc = Object.assign(svc, this.svcCreatorService.implementLiveList(getAll, 'true'));\r\n\r\n    const reload = () => svc.liveListReload();\r\n\r\n    return svc;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    const errMsg = error.message || 'Server error';\r\n    console.error(errMsg);\r\n    return observableThrowError(errMsg);\r\n  }\r\n}\r\n","module.exports = \".metadata-exists {\\r\\n    color: #0088f4\\r\\n}\\r\\n\\r\\n.adam-browse-background-icon {\\r\\n    padding-left: 5px;\\r\\n    padding-right: 5px;\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.adam-browse-background-icon i {\\r\\n    font-size: 4em;\\r\\n}\\r\\n\\r\\n.adam-background {\\r\\n    z-index: 20;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    font-size: 13px;\\r\\n    min-width: 100%;\\r\\n    max-width: 100%;\\r\\n    padding: 2em 1em;\\r\\n    text-align: center;\\r\\n    line-height: 150%;\\r\\n}\\r\\n\\r\\n.adam-tag {\\r\\n    cursor: pointer;\\r\\n    font-size: large;position: absolute;right: -15px;top: 50px;font-size: 1.8em;\\r\\n    z-index: 30;\\r\\n}\\r\\n\\r\\n.adam-link-button {\\r\\n    position: absolute;\\r\\n    left: 4px;\\r\\n    top: 4px;\\r\\n    font-size: 1.2em;\\r\\n    color: rgba(0, 0, 0, .9);\\r\\n}\\r\\n\\r\\n.adam-delete-button, .adam-rename-button {\\r\\n    position: absolute;\\r\\n    top: 4px;\\r\\n    right: 4px;\\r\\n    cursor: pointer;\\r\\n    font-size: 1.4em;\\r\\n}\\r\\n\\r\\n.adam-delete-button:hover, .adam-rename-button:hover {\\r\\n    color: #0088f4;\\r\\n}\\r\\n\\r\\n.adam-rename-button {\\r\\n    right: 26px;\\r\\n    font-size:14px;\\r\\n    top:5px;\\r\\n}\\r\\n\\r\\n.dz-details {\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.dropzone .dz-preview:hover .adam-blur {\\r\\n    -webkit-transform:scale(1.05,1.05);\\r\\n    transform:scale(1.05,1.05);\\r\\n    -webkit-filter:blur(8px);\\r\\n    filter:blur(8px)\\r\\n}\\r\\n\\r\\n/*label under the icon*/\\r\\n\\r\\n.adam-short-label  {\\r\\n    text-overflow: ellipsis;\\r\\n    display: block;\\r\\n    overflow: hidden;\\r\\n    white-space: nowrap;\\r\\n\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 10px;\\r\\n}\\r\\n\\r\\n.adam-full-name {\\r\\n    background-color: rgba(255,255,255,.8);\\r\\n    border-radius: 3px;\\r\\n    word-break: break-all;\\r\\n    width: 80%;\\r\\n    max-width: 95%;\\r\\n    max-height: 57px;\\r\\n    overflow: hidden;\\r\\n\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n\\r\\n}\\r\\n\\r\\n.adam-full-name-area {\\r\\n    height: 60px;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.adam-browse-background {\\r\\n        background-color: whitesmoke;\\r\\n}\\r\\n\\r\\n.mce-ico[class^=\\\"icon-\\\"]:before, .mce-ico[class*=\\\" icon-\\\"]:before {\\r\\n    margin-left: 0;\\r\\n}\\r\\n\\r\\n/* TODO:  */\\r\\n\\r\\n/* FROM dropzone-custom - hyperlink */\\r\\n\\r\\n/*\\r\\n * The MIT License\\r\\n * Copyright (c) 2012 Matias Meno <m@tias.me>\\r\\n */\\r\\n\\r\\n/* @-webkit-keyframes passing-through {\\r\\n    0% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(40px);\\r\\n      -moz-transform: translateY(40px);\\r\\n      -ms-transform: translateY(40px);\\r\\n      -o-transform: translateY(40px);\\r\\n      transform: translateY(40px); }\\r\\n    30%, 70% {\\r\\n      opacity: 1;\\r\\n      -webkit-transform: translateY(0px);\\r\\n      -moz-transform: translateY(0px);\\r\\n      -ms-transform: translateY(0px);\\r\\n      -o-transform: translateY(0px);\\r\\n      transform: translateY(0px); }\\r\\n    100% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(-40px);\\r\\n      -moz-transform: translateY(-40px);\\r\\n      -ms-transform: translateY(-40px);\\r\\n      -o-transform: translateY(-40px);\\r\\n      transform: translateY(-40px); } }\\r\\n  @-moz-keyframes passing-through {\\r\\n    0% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(40px);\\r\\n      -moz-transform: translateY(40px);\\r\\n      -ms-transform: translateY(40px);\\r\\n      -o-transform: translateY(40px);\\r\\n      transform: translateY(40px); }\\r\\n    30%, 70% {\\r\\n      opacity: 1;\\r\\n      -webkit-transform: translateY(0px);\\r\\n      -moz-transform: translateY(0px);\\r\\n      -ms-transform: translateY(0px);\\r\\n      -o-transform: translateY(0px);\\r\\n      transform: translateY(0px); }\\r\\n    100% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(-40px);\\r\\n      -moz-transform: translateY(-40px);\\r\\n      -ms-transform: translateY(-40px);\\r\\n      -o-transform: translateY(-40px);\\r\\n      transform: translateY(-40px); } }\\r\\n  @keyframes passing-through {\\r\\n    0% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(40px);\\r\\n      -moz-transform: translateY(40px);\\r\\n      -ms-transform: translateY(40px);\\r\\n      -o-transform: translateY(40px);\\r\\n      transform: translateY(40px); }\\r\\n    30%, 70% {\\r\\n      opacity: 1;\\r\\n      -webkit-transform: translateY(0px);\\r\\n      -moz-transform: translateY(0px);\\r\\n      -ms-transform: translateY(0px);\\r\\n      -o-transform: translateY(0px);\\r\\n      transform: translateY(0px); }\\r\\n    100% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(-40px);\\r\\n      -moz-transform: translateY(-40px);\\r\\n      -ms-transform: translateY(-40px);\\r\\n      -o-transform: translateY(-40px);\\r\\n      transform: translateY(-40px); } }\\r\\n  @-webkit-keyframes slide-in {\\r\\n    0% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(40px);\\r\\n      -moz-transform: translateY(40px);\\r\\n      -ms-transform: translateY(40px);\\r\\n      -o-transform: translateY(40px);\\r\\n      transform: translateY(40px); }\\r\\n    30% {\\r\\n      opacity: 1;\\r\\n      -webkit-transform: translateY(0px);\\r\\n      -moz-transform: translateY(0px);\\r\\n      -ms-transform: translateY(0px);\\r\\n      -o-transform: translateY(0px);\\r\\n      transform: translateY(0px); } }\\r\\n  @-moz-keyframes slide-in {\\r\\n    0% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(40px);\\r\\n      -moz-transform: translateY(40px);\\r\\n      -ms-transform: translateY(40px);\\r\\n      -o-transform: translateY(40px);\\r\\n      transform: translateY(40px); }\\r\\n    30% {\\r\\n      opacity: 1;\\r\\n      -webkit-transform: translateY(0px);\\r\\n      -moz-transform: translateY(0px);\\r\\n      -ms-transform: translateY(0px);\\r\\n      -o-transform: translateY(0px);\\r\\n      transform: translateY(0px); } }\\r\\n  @keyframes slide-in {\\r\\n    0% {\\r\\n      opacity: 0;\\r\\n      -webkit-transform: translateY(40px);\\r\\n      -moz-transform: translateY(40px);\\r\\n      -ms-transform: translateY(40px);\\r\\n      -o-transform: translateY(40px);\\r\\n      transform: translateY(40px); }\\r\\n    30% {\\r\\n      opacity: 1;\\r\\n      -webkit-transform: translateY(0px);\\r\\n      -moz-transform: translateY(0px);\\r\\n      -ms-transform: translateY(0px);\\r\\n      -o-transform: translateY(0px);\\r\\n      transform: translateY(0px); } }\\r\\n  @-webkit-keyframes pulse {\\r\\n    0% {\\r\\n      -webkit-transform: scale(1);\\r\\n      -moz-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      -o-transform: scale(1);\\r\\n      transform: scale(1); }\\r\\n    10% {\\r\\n      -webkit-transform: scale(1.1);\\r\\n      -moz-transform: scale(1.1);\\r\\n      -ms-transform: scale(1.1);\\r\\n      -o-transform: scale(1.1);\\r\\n      transform: scale(1.1); }\\r\\n    20% {\\r\\n      -webkit-transform: scale(1);\\r\\n      -moz-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      -o-transform: scale(1);\\r\\n      transform: scale(1); } }\\r\\n  @-moz-keyframes pulse {\\r\\n    0% {\\r\\n      -webkit-transform: scale(1);\\r\\n      -moz-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      -o-transform: scale(1);\\r\\n      transform: scale(1); }\\r\\n    10% {\\r\\n      -webkit-transform: scale(1.1);\\r\\n      -moz-transform: scale(1.1);\\r\\n      -ms-transform: scale(1.1);\\r\\n      -o-transform: scale(1.1);\\r\\n      transform: scale(1.1); }\\r\\n    20% {\\r\\n      -webkit-transform: scale(1);\\r\\n      -moz-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      -o-transform: scale(1);\\r\\n      transform: scale(1); } }\\r\\n  @keyframes pulse {\\r\\n    0% {\\r\\n      -webkit-transform: scale(1);\\r\\n      -moz-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      -o-transform: scale(1);\\r\\n      transform: scale(1); }\\r\\n    10% {\\r\\n      -webkit-transform: scale(1.1);\\r\\n      -moz-transform: scale(1.1);\\r\\n      -ms-transform: scale(1.1);\\r\\n      -o-transform: scale(1.1);\\r\\n      transform: scale(1.1); }\\r\\n    20% {\\r\\n      -webkit-transform: scale(1);\\r\\n      -moz-transform: scale(1);\\r\\n      -ms-transform: scale(1);\\r\\n      -o-transform: scale(1);\\r\\n      transform: scale(1); } } */\\r\\n\\r\\n.dropzone, .dropzone * {\\r\\n        box-sizing: border-box;outline-color: #0069BF;  }\\r\\n\\r\\n.eav-dragging .dropzone, .dropzone.dz-drag-hover {\\r\\n        min-height: 0;\\r\\n        outline: 2px dashed #0069BF;\\r\\n        background: white;\\r\\n          padding: 0;\\r\\n          border-radius: 5px;\\r\\n          transition: outline-color 0.5s;\\r\\n      }\\r\\n\\r\\n.dropzone.dz-clickable {\\r\\n          cursor: pointer; }\\r\\n\\r\\n.dropzone.dz-clickable * {\\r\\n            cursor: default; }\\r\\n\\r\\n.dropzone.dz-clickable .dz-message, .dropzone.dz-clickable .dz-message * {\\r\\n            cursor: pointer; }\\r\\n\\r\\n.dropzone.dz-started .dz-message {\\r\\n          display: none; }\\r\\n\\r\\n.dropzone.dz-drag-hover {\\r\\n            outline-color:  #0087F7;\\r\\n      ;\\r\\n          }\\r\\n\\r\\n.dropzone.dz-drag-hover .dz-message {\\r\\n            opacity: 0.5; }\\r\\n\\r\\n.dropzone .dz-message {\\r\\n          text-align: center;\\r\\n          margin: 2em 0; }\\r\\n\\r\\n.dropzone-previews { margin: 5px -5px; }\\r\\n\\r\\n.dropzone .dz-preview {\\r\\n          position: relative;\\r\\n          display: inline-block;\\r\\n          vertical-align: top;\\r\\n          margin: 5px;\\r\\n          min-height: 100px; }\\r\\n\\r\\n.dropzone .dz-preview:hover {\\r\\n            z-index: 1000; }\\r\\n\\r\\n.dropzone .dz-preview:hover .dz-details {\\r\\n              opacity: 1; }\\r\\n\\r\\n.dropzone .dz-preview.dz-file-preview .dz-image {\\r\\n              border-radius: 6px; /* original before 2016-07-06 2dm: 20px;*/\\r\\n            background: #999;\\r\\n            background: linear-gradient(to bottom, #eee, #ddd); }\\r\\n\\r\\n.dropzone .dz-preview.dz-file-preview .dz-details {\\r\\n            opacity: 1; }\\r\\n\\r\\n.dropzone .dz-preview.dz-image-preview {\\r\\n            background: white; }\\r\\n\\r\\n.dropzone .dz-preview.dz-image-preview .dz-details {\\r\\n              transition: opacity 0.2s linear; }\\r\\n\\r\\n.dropzone .dz-preview .dz-remove {\\r\\n            font-size: 14px;\\r\\n            text-align: center;\\r\\n            display: block;\\r\\n            cursor: pointer;\\r\\n            border: none; }\\r\\n\\r\\n.dropzone .dz-preview .dz-remove:hover {\\r\\n              text-decoration: underline; }\\r\\n\\r\\n.dropzone .dz-preview:hover .dz-details {\\r\\n            opacity: 1; }\\r\\n\\r\\n.dropzone .dz-preview .dz-details {\\r\\n            z-index: 20;\\r\\n            position: absolute;\\r\\n            top: 0;\\r\\n            left: 0;\\r\\n            opacity: 0;\\r\\n            font-size: 13px;\\r\\n            min-width: 100%;\\r\\n            max-width: 100%;\\r\\n            padding: 2em 1em;\\r\\n            text-align: center;\\r\\n            color: rgba(0, 0, 0, 0.9);\\r\\n            line-height: 150%; }\\r\\n\\r\\n.dropzone .dz-preview .dz-details .dz-size {\\r\\n              margin-bottom: 1em;\\r\\n              font-size: 16px; }\\r\\n\\r\\n.dropzone .dz-preview .dz-details .dz-filename {\\r\\n              white-space: nowrap; }\\r\\n\\r\\n.dropzone .dz-preview .dz-details .dz-filename:hover span {\\r\\n                border: 1px solid rgba(200, 200, 200, 0.8);\\r\\n                background-color: rgba(255, 255, 255, 0.8); }\\r\\n\\r\\n.dropzone .dz-preview .dz-details .dz-filename:not(:hover) {\\r\\n                overflow: hidden;\\r\\n                text-overflow: ellipsis; }\\r\\n\\r\\n.dropzone .dz-preview .dz-details .dz-filename:not(:hover) span {\\r\\n                  border: 1px solid transparent; }\\r\\n\\r\\n.dropzone .dz-preview .dz-details .dz-filename span, .dropzone .dz-preview .dz-details .dz-size span {\\r\\n              background-color: rgba(255, 255, 255, 0.4);\\r\\n              padding: 0 0.4em;\\r\\n              border-radius: 3px; }\\r\\n\\r\\n.dropzone .dz-preview:hover .dz-image img {\\r\\n            -webkit-transform: scale(1.05, 1.05);\\r\\n            transform: scale(1.05, 1.05);\\r\\n            -webkit-filter: blur(8px);\\r\\n            filter: blur(8px); }\\r\\n\\r\\n.dropzone .dz-preview .dz-image {\\r\\n              border-radius: 6px; /* original before 2016-07-06 2dm: 20px;*/\\r\\n            overflow: hidden;\\r\\n            width: 120px;\\r\\n            height: 120px;\\r\\n            position: relative;\\r\\n            display: block;\\r\\n            z-index: 10; }\\r\\n\\r\\n.dropzone .dz-preview .dz-image img {\\r\\n              display: block; }\\r\\n\\r\\n.dropzone .dz-preview.dz-success .dz-success-mark {\\r\\n            -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\\r\\n            animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1); }\\r\\n\\r\\n.dropzone .dz-preview.dz-error .dz-error-mark {\\r\\n            opacity: 1;\\r\\n            -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\\r\\n            animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1); }\\r\\n\\r\\n.dropzone .dz-preview .dz-success-mark, .dropzone .dz-preview .dz-error-mark {\\r\\n            pointer-events: none;\\r\\n            opacity: 0;\\r\\n            z-index: 500;\\r\\n            position: absolute;\\r\\n            display: block;\\r\\n            top: 50%;\\r\\n            left: 50%;\\r\\n            margin-left: -27px;\\r\\n            margin-top: -27px; }\\r\\n\\r\\n.dropzone .dz-preview .dz-success-mark svg, .dropzone .dz-preview .dz-error-mark svg {\\r\\n              display: block;\\r\\n              width: 54px;\\r\\n              height: 54px; }\\r\\n\\r\\n.dropzone .dz-preview.dz-processing .dz-progress {\\r\\n            opacity: 1;\\r\\n            transition: all 0.2s linear; }\\r\\n\\r\\n.dropzone .dz-preview.dz-complete .dz-progress {\\r\\n            opacity: 0;\\r\\n            transition: opacity 0.4s ease-in; }\\r\\n\\r\\n.dropzone .dz-preview:not(.dz-processing) .dz-progress {\\r\\n            -webkit-animation: pulse 6s ease infinite;\\r\\n            animation: pulse 6s ease infinite; }\\r\\n\\r\\n.dropzone .dz-preview .dz-progress {\\r\\n            opacity: 1;\\r\\n            z-index: 1000;\\r\\n            pointer-events: none;\\r\\n            position: absolute;\\r\\n            height: 16px;\\r\\n            left: 50%;\\r\\n            top: 50%;\\r\\n            margin-top: -8px;\\r\\n            width: 80px;\\r\\n            margin-left: -40px;\\r\\n            background: rgba(255, 255, 255, 0.9);\\r\\n            -webkit-transform: scale(1);\\r\\n            border-radius: 8px;\\r\\n            overflow: hidden; }\\r\\n\\r\\n.dropzone .dz-preview .dz-progress .dz-upload {\\r\\n              background: #333;\\r\\n              background: linear-gradient(to bottom, #666, #444);\\r\\n              position: absolute;\\r\\n              top: 0;\\r\\n              left: 0;\\r\\n              bottom: 0;\\r\\n              width: 0;\\r\\n              transition: width 300ms ease-in-out; }\\r\\n\\r\\n.dropzone .dz-preview.dz-error .dz-error-message {\\r\\n            display: block; }\\r\\n\\r\\n.dropzone .dz-preview.dz-error:hover .dz-error-message {\\r\\n            opacity: 1;\\r\\n            pointer-events: auto; }\\r\\n\\r\\n.dropzone .dz-preview .dz-error-message {\\r\\n            pointer-events: none;\\r\\n            z-index: 1000;\\r\\n            position: absolute;\\r\\n            display: block;\\r\\n            display: none;\\r\\n            opacity: 0;\\r\\n            transition: opacity 0.3s ease;\\r\\n            border-radius: 8px;\\r\\n            font-size: 13px;\\r\\n            top: 130px;\\r\\n            left: -10px;\\r\\n            width: 140px;\\r\\n            background: #be2626;\\r\\n            background: linear-gradient(to bottom, #be2626, #a92222);\\r\\n            padding: 0.5em 1.2em;\\r\\n            color: white; }\\r\\n\\r\\n.dropzone .dz-preview .dz-error-message:after {\\r\\n              content: '';\\r\\n              position: absolute;\\r\\n              top: -6px;\\r\\n              left: 64px;\\r\\n              width: 0;\\r\\n              height: 0;\\r\\n              border-left: 6px solid transparent;\\r\\n              border-right: 6px solid transparent;\\r\\n              border-bottom: 6px solid #be2626; }\\r\\n\\r\\n\"","module.exports = \"<!-- TODO: this dropzone class only because css - need to change-->\\r\\n<!--  -->\\r\\n<div class=\\\"dropzone\\\" *ngIf=\\\"!disabled\\\">\\r\\n  <div *ngIf=\\\"show\\\" ngClass=\\\"{{'adam-scope-' + (adamModeConfig.usePortalRoot ? 'site' : field)}}\\\">\\r\\n\\r\\n    <!-- info for dropping stuff here -->\\r\\n    <!--  [disabled]=\\\"disabled\\\"-->\\r\\n    <div class=\\\"dz-preview dropzone-adam\\\" (click)=\\\"openUploadClick($event)\\\" matTooltip=\\\"{{'Edit.Fields.Hyperlink.Default.AdamUploadLabel' | translate }}\\\">\\r\\n      <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\" xstyle=\\\"background-color: whitesmoke\\\">\\r\\n        <i class=\\\"eav-icon-up-circled2\\\"></i>\\r\\n        <div class=\\\"adam-short-label\\\">upload to\\r\\n          <i ngClass=\\\"{{adamModeConfig.usePortalRoot ? 'eav-icon-globe' : 'eav-icon-apple'}}\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- info for paste image from clipboard here -->\\r\\n    <!-- TODO: disable -->\\r\\n    <div *ngIf=\\\"!clipboardPasteImageFunctionalityDisabled\\\" class=\\\"dz-preview dropzone-adam paste-image\\\" matTooltip=\\\"{{'Edit.Fields.Hyperlink.Default.AdamUploadPasteLabel' | translate }}\\\">\\r\\n      <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\" xstyle=\\\"background-color: whitesmoke\\\">\\r\\n        <i class=\\\"eav-icon-file-image\\\"></i>\\r\\n        <div class=\\\"adam-short-label\\\">paste image</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- add folder - not always shown -->\\r\\n    <!-- TODOD: disable -->\\r\\n    <div *ngIf=\\\"allowCreateFolder()\\\" class=\\\"dz-preview\\\" (click)=\\\"addFolder()\\\">\\r\\n      <div class=\\\"dz-image adam-browse-background-icon adam-browse-background\\\">\\r\\n        <div class=\\\"\\\">\\r\\n          <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n          <div class=\\\"adam-short-label\\\">new folder</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n        <i class=\\\"eav-icon-plus\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n      </div>\\r\\n      <div class=\\\"dz-details\\\" style=\\\"opacity: 1\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <!-- browse up a folder - not always shown -->\\r\\n    <!-- <div  ng-disabled=\\\"vm.disabled\\\"> -->\\r\\n    <ng-container *ngIf=\\\"showFolders\\\">\\r\\n      <div *ngIf=\\\"folders.length > 0\\\" class=\\\"dz-preview\\\" (click)=\\\"goUp()\\\">\\r\\n        <div class=\\\"dz-image  adam-browse-background-icon adam-browse-background\\\">\\r\\n          <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n          <div class=\\\"adam-short-label\\\">up</div>\\r\\n        </div>\\r\\n        <div class=\\\"adam-background adam-browse-background-icon\\\">\\r\\n          <i class=\\\"eav-icon-level-up\\\" style=\\\"font-size: 2em; top: 13px; position: relative;\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- folder list - not always shown -->\\r\\n    <ng-container *ngIf=\\\"showFolders\\\">\\r\\n      <div class=\\\"dz-preview\\\" *ngFor=\\\"let item of (items$ | async | filter: 'IsFolder' : true  | filter: 'Name' : '2sxc' : false | filter: 'Name' : 'adam' : false | orderby : 'Name')\\\"\\r\\n        (click)=\\\"goIntoFolder(item)\\\">\\r\\n        <div class=\\\"dz-image adam-blur adam-browse-background-icon adam-browse-background\\\">\\r\\n          <i class=\\\"eav-icon-folder-empty\\\"></i>\\r\\n          <div class=\\\"short-label\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n          <span (click)=\\\"del(item)\\\" appClickStopPropagation class=\\\"adam-delete-button\\\">\\r\\n            <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n          </span>\\r\\n          <span (click)=\\\"rename(item)\\\" appClickStopPropagation class=\\\"adam-rename-button\\\">\\r\\n            <i class=\\\"eav-icon-pencil\\\"></i>\\r\\n          </span>\\r\\n          <div class=\\\"adam-full-name-area\\\">\\r\\n            <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <span class=\\\"adam-tag\\\" [ngClass]=\\\"{'metadata-exists': item.MetadataId > 0}\\\" (click)=\\\"editMetadata(item)\\\" matTooltip=\\\"{{getMetadataType(item)}}:{{item.MetadataId}}\\\"\\r\\n          appClickStopPropagation *ngIf=\\\"getMetadataType(item)\\\">\\r\\n          <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- files -->\\r\\n    <!-- <div  ng-disabled=\\\"vm.disabled || !vm.enableSelect\\\"> -->\\r\\n    <div class=\\\"dz-preview\\\" *ngFor=\\\"let item of (items$ | async | filter: 'IsFolder' : false | filter: (showImagesOnly ? 'Type' : undefined) : (showImagesOnly ? 'image' : undefined) | fileEndingFilter: allowedFileTypes | orderby : 'Name')\\\"\\r\\n      (click)=\\\"select(item)\\\" [ngClass]=\\\"{ 'dz-success': getValueCallback && getValueCallback().toLowerCase() === 'file:' + item.Id }\\\">\\r\\n      <div *ngIf=\\\"item.Type !== 'image'\\\" class=\\\"dz-image adam-blur adam-browse-background-icon adam-browse-background\\\">\\r\\n        <i [ngClass]=\\\"icon(item)\\\"></i>\\r\\n        <div class=\\\"adam-short-label\\\">{{ item.Name }}</div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"item.Type === 'image'\\\" class=\\\"dz-image\\\">\\r\\n        <img data-dz-thumbnail=\\\"\\\" [alt]=\\\"item.Id + ':' + item.Name\\\" [src]=\\\"item.FullPath + '?w=120&h=120&mode=crop'\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"dz-details file-type-{{item.Type}}\\\">\\r\\n        <span (click)=\\\"del(item)\\\" appClickStopPropagation class=\\\"adam-delete-button\\\">\\r\\n          <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n        </span>\\r\\n        <span (click)=\\\"rename(item)\\\" appClickStopPropagation class=\\\"adam-rename-button\\\">\\r\\n          <i class=\\\"eav-icon-pencil\\\"></i>\\r\\n        </span>\\r\\n        <div class=\\\"adam-full-name-area\\\">\\r\\n          <div class=\\\"adam-full-name\\\">{{ item.Name }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"dz-filename adam-short-label\\\">\\r\\n          <span>#{{ item.Id }} - {{ (item.Size / 1024).toFixed(0) }} kb</span>\\r\\n        </div>\\r\\n        <a class=\\\"adam-link-button\\\" target=\\\"_blank\\\" [href]=\\\"item.FullPath\\\">\\r\\n          <i class=\\\"eav-icon-link-ext\\\" style=\\\"font-size: larger\\\"></i>\\r\\n        </a>\\r\\n      </div>\\r\\n      <span class=\\\"adam-tag\\\" [ngClass]=\\\"{'metadata-exists': item.MetadataId > 0}\\\" (click)=\\\"editMetadata(item)\\\" *ngIf=\\\"getMetadataType(item)\\\"\\r\\n        appClickStopPropagation matTooltip=\\\"{{getMetadataType(item)}}:{{item.MetadataId}}\\\">\\r\\n        <i class=\\\"eav-icon-tag\\\" style=\\\"font-size: larger\\\"></i>\\r\\n      </span>\\r\\n\\r\\n      <div class=\\\"dz-success-mark\\\">\\r\\n        <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n          xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\r\\n          <title>Check</title>\\r\\n          <defs></defs>\\r\\n          <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\r\\n            <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\"\\r\\n              id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\r\\n          </g>\\r\\n        </svg>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AdamService } from '../adam.service';\r\nimport { AdamItem } from '../../../shared/models/adam/adam-item';\r\nimport { FileTypeService } from '../../../shared/services/file-type.service';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { EavConfiguration } from '../../../shared/models/eav-configuration';\r\nimport { FeatureService } from '../../../shared/services/feature.service';\r\nimport { AdamConfig } from '../../../shared/models/adam/adam-config';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'adam-browser',\r\n  templateUrl: './adam-browser.component.html',\r\n  styleUrls: ['./adam-browser.component.css']\r\n})\r\nexport class AdamBrowserComponent implements OnInit {\r\n\r\n  // TODO: temp need to change\r\n  // eavConfig.metadataOfCmsObject\r\n  @Input() metadataOfCmsObject: any;\r\n\r\n  // Identity fields\r\n  // @Input() contentTypeName: any;\r\n  // @Input() entityGuid: any;\r\n  // @Input() fieldName: any;\r\n\r\n  // New Configuration\r\n  @Input() url;\r\n\r\n  // basic functionality\r\n  @Input() disabled = false;\r\n  @Input() show = false;\r\n\r\n  @Output() openUpload: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // Configuration\r\n  adamModeConfig = { usePortalRoot: false };\r\n  allowAssetsInRoot;\r\n  autoLoad = false;\r\n  enableSelect = true;\r\n  fileFilter = '';\r\n  folderDepth = 0;\r\n  metadataContentTypes;\r\n  showImagesOnly;\r\n  subFolder = '';\r\n\r\n  showFolders;\r\n\r\n  // callback is set in attachAdam\r\n  updateCallback;\r\n  afterUploadCallback;\r\n  getValueCallback;\r\n\r\n  allowedFileTypes = [];\r\n  clipboardPasteImageFunctionalityDisabled = true;\r\n  items: AdamItem[];\r\n  items$: Observable<AdamItem[]>; // = this.svc.liveList();\r\n  oldConfig;\r\n  svc;\r\n\r\n  private eavConfig: EavConfiguration;\r\n\r\n  get folders() {\r\n    return this.svc ? this.svc.folders : [];\r\n  }\r\n\r\n  constructor(private adamService: AdamService,\r\n    private fileTypeService: FileTypeService,\r\n    private eavService: EavService,\r\n    private featureService: FeatureService) {\r\n\r\n    this.eavConfig = this.eavService.getEavConfiguration();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.initConfig();\r\n    // console.log('adam ngOnInit config:', this.config);\r\n    this.svc = this.adamService.createSvc(this.subFolder, this.adamModeConfig, this.url);\r\n\r\n    console.log('adam ngOnInit url:', this.url);\r\n    this.setAllowedFileTypes();\r\n\r\n    // TODO: when to load folders??? Before was toggle!!!\r\n    this.items$ = this.svc.liveListCache$;\r\n    this.loadFileList();\r\n    // TODO: when set folders??? Before was toggle!!!\r\n    // this.folders = this.svc.folders;\r\n\r\n    if (this.autoLoad) {\r\n      this.toggle(null);\r\n    }\r\n  }\r\n\r\n  initConfig() {\r\n    this.subFolder = this.subFolder || '';\r\n    this.showImagesOnly = this.showImagesOnly || false;\r\n    this.folderDepth = (typeof this.folderDepth !== 'undefined' && this.folderDepth !== null) ? this.folderDepth : 2;\r\n    this.showFolders = !!this.folderDepth;\r\n    this.allowAssetsInRoot = this.allowAssetsInRoot || true; // if true, the initial folder can have files, otherwise only subfolders\r\n    this.metadataContentTypes = this.metadataContentTypes || '';\r\n\r\n    // TODO:\r\n    // appRoot = read app root\r\n    this.enableSelect = (this.enableSelect === false) ? false : true; // must do it like this, $scope.enableSelect || true will not work\r\n\r\n    // if feature clipboardPasteImageFunctionality enabled\r\n    this.featureService.enabled('f6b8d6da-4744-453b-9543-0de499aa2352', this.eavConfig.appId, this.url)\r\n      .subscribe(enabled =>\r\n        this.clipboardPasteImageFunctionalityDisabled = (enabled === false)\r\n      );\r\n  }\r\n\r\n  addFolder() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    const folderName = window.prompt('Please enter a folder name'); // todo i18n\r\n    if (folderName) {\r\n      this.svc.addFolder(folderName).subscribe();\r\n    }\r\n  }\r\n\r\n  allowCreateFolder(): boolean {\r\n    return this.svc.folders.length < this.folderDepth;\r\n  }\r\n\r\n  del(item) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    const ok = window.confirm('Are you sure you want to delete this item?'); // todo i18n\r\n    if (ok) {\r\n      this.svc.deleteItem(item).subscribe();\r\n    }\r\n  }\r\n\r\n  editMetadata(item) {\r\n    const items = [\r\n      this.itemDefinition(item, this.getMetadataType(item))\r\n    ];\r\n    // TODO:\r\n    // eavAdminDialogs.openEditItems(items, vm.refresh);\r\n  }\r\n\r\n  goUp = () => {\r\n    this.subFolder = this.svc.goUp();\r\n  }\r\n\r\n  getMetadataType = function (item) {\r\n    let found;\r\n\r\n    // check if it's a folder and if this has a special registration\r\n    if (item.Type === 'folder') {\r\n      found = this.metadataContentTypes.match(/^(folder)(:)([^\\n]*)/im);\r\n      if (found) {\r\n        return found[3];\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // check if the extension has a special registration\r\n    // -- not implemented yet\r\n\r\n    // check if the type \"image\" or \"document\" has a special registration\r\n    // -- not implemneted yet\r\n\r\n    // nothing found so far, go for the default with nothing as the prefix\r\n    found = this.metadataContentTypes.match(/^([^:\\n]*)(\\n|$)/im);\r\n    if (found) {\r\n      return found[1];\r\n    }\r\n\r\n    // this is if we don't find anything\r\n    return null;\r\n  };\r\n\r\n  //#region Folder Navigation\r\n  goIntoFolder(folder) {\r\n    const subFolder = this.svc.goIntoFolder(folder);\r\n    // this.refresh();\r\n    this.subFolder = subFolder;\r\n  }\r\n\r\n  icon(item: AdamItem) {\r\n    return this.fileTypeService.getIconClass(item.Name);\r\n  }\r\n\r\n  // load svc...\r\n  // vm.svc = adamSvc(vm.contentTypeName, vm.entityGuid, vm.fieldName, vm.subFolder, $scope.adamModeConfig);\r\n\r\n  openUploadClick = (event) => this.openUpload.emit();\r\n\r\n  rename(item) {\r\n    const newName = window.prompt('Rename the file / folder to: ', item.Name);\r\n    if (newName) {\r\n      this.svc.rename(item, newName).subscribe();\r\n    }\r\n  }\r\n\r\n  refresh = () => this.svc.liveListReload();\r\n\r\n  select(fileItem) {\r\n    if (this.disabled || !this.enableSelect) {\r\n      return;\r\n    }\r\n    this.updateCallback(fileItem);\r\n  }\r\n\r\n  toggle(newConfig) {\r\n    // Reload configuration\r\n    this.initConfig();\r\n    let configChanged = false;\r\n\r\n    if (newConfig) {\r\n      // Detect changes in config, allows correct toggle behaviour\r\n      if (JSON.stringify(newConfig) !== this.oldConfig) {\r\n        configChanged = true;\r\n      }\r\n      this.oldConfig = JSON.stringify(newConfig);\r\n\r\n      this.showImagesOnly = newConfig.showImagesOnly;\r\n      this.adamModeConfig.usePortalRoot = !!(newConfig.usePortalRoot);\r\n    }\r\n\r\n    this.show = configChanged || !this.show;\r\n\r\n    if (!this.show) {\r\n      this.adamModeConfig.usePortalRoot = false;\r\n    }\r\n\r\n    // Override configuration in portal mode\r\n    if (this.adamModeConfig.usePortalRoot) {\r\n      this.showFolders = true;\r\n      this.folderDepth = 99;\r\n    }\r\n\r\n    if (this.show) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set configuration (called from input type)\r\n   * @param adamConfig\r\n   */\r\n  setConfig(adamConfig: AdamConfig) {\r\n    console.log('adam browser setAdamConfig', adamConfig);\r\n    this.allowAssetsInRoot = adamConfig.allowAssetsInRoot;\r\n    this.autoLoad = adamConfig.autoLoad;\r\n    this.enableSelect = adamConfig.enableSelect;\r\n    this.fileFilter = adamConfig.fileFilter;\r\n    this.folderDepth = adamConfig.folderDepth;\r\n    this.metadataContentTypes = adamConfig.metadataContentTypes;\r\n    this.showImagesOnly = adamConfig.showImagesOnly;\r\n    this.subFolder = adamConfig.subFolder;\r\n\r\n    // Reload configuration\r\n    this.initConfig();\r\n    this.show = this.autoLoad;\r\n    if (this.show) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  private itemDefinition = function (item, metadataType) {\r\n    const title = 'EditFormTitle.Metadata'; // todo: i18n\r\n    return item.MetadataId !== 0\r\n      ? { EntityId: item.MetadataId, Title: title } // if defined, return the entity-number to edit\r\n      : {\r\n        ContentTypeName: metadataType, // otherwise the content type for new-assegnment\r\n        Metadata: {\r\n          Key: (item.Type === 'folder' ? 'folder' : 'file') + ':' + item.Id,\r\n          KeyType: 'string',\r\n          TargetType: this.metadataOfCmsObject\r\n        },\r\n        Title: title,\r\n        Prefill: { EntityTitle: item.Name } // possibly prefill the entity title\r\n      };\r\n\r\n  };\r\n\r\n  private setAllowedFileTypes() {\r\n    if (this.fileFilter) {\r\n      this.allowedFileTypes = this.fileFilter.split(',').map(function (i) {\r\n        return i.replace('*', '').trim();\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadFileList = () => this.svc.liveListLoad();\r\n}\r\n\r\n\r\n","module.exports = \"/* .field-hints {\\r\\n    visibility: hidden;\\r\\n    opacity: 0;\\r\\n    transition-duration: 200ms, 200ms;\\r\\n    transition-property: opacity, visibility;\\r\\n    transition-delay: 0, 200ms;\\r\\n  }\\r\\n  \\r\\n  div.mce-edit-focus .field-hints {\\r\\n    visibility: visible;\\r\\n    opacity:1;\\r\\n  } */\"","module.exports = \"<div class=\\\"dropzone dropzone-container\\\" [dropzone]=\\\"dropzoneConfig\\\" [disabled]=\\\"disabled\\\" (error)=\\\"onUploadError($event)\\\"\\r\\n  (success)=\\\"onUploadSuccess($event)\\\" (drop)=\\\"onDrop($event)\\\">\\r\\n  <ng-container #fieldComponent></ng-container>\\r\\n  <!-- [autoLoad]=\\\"false\\\" [folderDepth]=\\\"0\\\" [subFolder]=\\\"\\\" fileFilter=\\\"*.jpg,*.pdf.,*.css\\\" [enableSelect]=\\\"true\\\"-->\\r\\n  <adam-browser (openUpload)=\\\"openUpload()\\\" [url]=\\\"url\\\" [metadataOfCmsObject]=\\\"\\\">\\r\\n  </adam-browser>\\r\\n  <!-- ng-show=\\\"uploading\\\" -->\\r\\n  <div class=\\\"{{'field-' + config.index}}\\\">\\r\\n    <div class=\\\"dropzone-previews\\\">\\r\\n    </div>\\r\\n    <span #invisibleClickable class=\\\"invisible-clickable\\\" data-note=\\\"just a fake, invisible area for dropzone\\\"></span>\\r\\n  </div>\\r\\n  <!-- todo: focus with css -->\\r\\n  <adam-hint class=\\\"field-hints\\\"></adam-hint>\\r\\n</div>\"","import { Component, OnInit, ViewContainerRef, Input, ViewChild, AfterContentInit, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { DropzoneDirective, DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\r\nimport { FieldConfig } from '../../../eav-dynamic-form/model/field-config';\r\nimport { AdamBrowserComponent } from '../browser/adam-browser.component';\r\nimport { EavConfiguration } from '../../../shared/models/eav-configuration';\r\nimport { EavService } from '../../../shared/services/eav.service';\r\nimport { UrlHelper } from '../../../shared/helpers/url-helper';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-dropzone',\r\n  templateUrl: './dropzone.component.html',\r\n  styleUrls: ['./dropzone.component.css']\r\n})\r\nexport class DropzoneComponent implements FieldWrapper, OnInit, AfterViewInit {\r\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild(DropzoneDirective) dropzoneRef?: DropzoneDirective;\r\n  @ViewChild('invisibleClickable') invisibleClickableReference: ElementRef;\r\n  @ViewChild(AdamBrowserComponent) adamRef: AdamBrowserComponent;\r\n\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  public dropzoneConfig: DropzoneConfigInterface;\r\n  private eavConfig: EavConfiguration;\r\n  // acceptedFiles: 'image/*',\r\n  // createImageThumbnails: true\r\n  url: string;\r\n\r\n  get disabled() {\r\n    return this.group.controls[this.config.name].disabled;\r\n  }\r\n\r\n  constructor(private eavService: EavService) {\r\n    this.eavConfig = this.eavService.getEavConfiguration();\r\n  }\r\n\r\n  tempFileFilter = '*.jpg,*.pdf';\r\n\r\n  ngOnInit() {\r\n    this.config.adam = this.adamRef;\r\n    // const serviceRoot = 'http://2sxc-dnn742.dnndev.me/en-us/desktopmodules/2sxc/api/';\r\n    const serviceRoot = this.eavConfig.portalroot + 'desktopmodules/2sxc/api/';\r\n\r\n    // const url = UrlHelper.resolveServiceUrl('app-content/' + contentType + '/' + entityGuid + '/' + field, serviceRoot);\r\n\r\n    const contentType = this.config.header.contentTypeName;\r\n    // const contentType = '106ba6ed-f807-475a-b004-cd77e6b317bd';\r\n    const entityGuid = this.config.header.guid;\r\n    // const entityGuid = '386ec145-d884-4fea-935b-a4d8d0c68d8d';\r\n    const field = this.config.name;\r\n    // const field = 'HyperLinkStaticName';\r\n\r\n    this.url = UrlHelper.resolveServiceUrl(`app-content/${contentType}/${entityGuid}/${field}`, serviceRoot);\r\n\r\n    console.log('', this.url);\r\n\r\n    this.dropzoneConfig = {\r\n      url: this.url + `?usePortalRoot=${this.eavConfig.portalroot}false&appId=${this.eavConfig.appId}`,\r\n      maxFiles: 1,\r\n      autoReset: null,\r\n      errorReset: null,\r\n      cancelReset: null,\r\n      // 'http://2sxc-dnn742.dnndev.me/en-us/desktopmodules/2sxc/api/app-content/106ba6ed-f807-475a-b004-cd77e6b317bd/\r\n      // 386ec145-d884-4fea-935b-a4d8d0c68d8d/HyperLinkStaticName?usePortalRoot=false&appId=7',\r\n      // urlRoot: 'http://2sxc-dnn742.dnndev.me/',\r\n      maxFilesize: 10000, // 10'000 MB = 10 GB, note that it will also be stopped on the server if it's larger than the really allowed sized\r\n      paramName: 'uploadfile',\r\n      maxThumbnailFilesize: 10,\r\n      headers: {\r\n        'ModuleId': this.eavConfig.mid,\r\n        'TabId': this.eavConfig.tid,\r\n        'ContentBlockId': this.eavConfig.cbid\r\n      },\r\n      dictDefaultMessage: '',\r\n      addRemoveLinks: false,\r\n      // '.field-' + field.toLowerCase() + ' .dropzone-previews',\r\n      previewsContainer: '.dropzone-previews', // '.field-' + this.config.index + ' .dropzone-previews',\r\n      // we need a clickable, because otherwise the entire area is clickable.\r\n      // so i'm just making the preview clickable, as it's not important\r\n      clickable: '.dropzone-previews' // '.field-' + this.config.index + ' .invisible-clickable'  // \" .dropzone-adam\"\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dropzoneConfig.previewsContainer = '.field-' + this.config.index + ' .dropzone-previews';\r\n    this.dropzoneConfig.clickable = '.field-' + this.config.index + ' .invisible-clickable';\r\n\r\n    console.log('this.dropzoneConfig:', this.dropzoneConfig);\r\n    console.log('config ddropzone wrapper:', this.config.index);\r\n  }\r\n\r\n  public onUploadError(args: any): void {\r\n    console.log('onUploadError:', args);\r\n  }\r\n\r\n  public onUploadSuccess(args: any): void {\r\n    console.log('onUploadSuccess:', args);\r\n    const response = args[1]; // Gets the server response as second argument.\r\n    if (response.Success) {\r\n      this.adamRef.svc.addFullPath(response); // calculate additional infos\r\n      this.adamRef.afterUploadCallback(response);\r\n      // Reset dropzone\r\n      this.dropzoneRef.reset();\r\n      this.adamRef.refresh();\r\n    } else {\r\n      alert('Upload failed because: ' + response.Error);\r\n    }\r\n\r\n  }\r\n\r\n  public onDrop(args: any): void {\r\n    // this.adamRef.updateCallback();\r\n  }\r\n\r\n  /**\r\n   * triger click on clickable element for load open\r\n   */\r\n  openUpload() {\r\n    console.log('openUpload click');\r\n    this.invisibleClickableReference.nativeElement.click();\r\n  }\r\n\r\n  // updateCallback() {\r\n  //   console.log('update callback');\r\n  //   console.log('adamModeImage', this.adamModeImage);\r\n  // }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatFormFieldModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatGridListModule,\r\n  MatAutocompleteModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatTooltipModule,\r\n  MatTabsModule,\r\n  MatProgressSpinnerModule,\r\n\r\n} from '@angular/material';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\r\n\r\nimport {\r\n  CollapsibleWrapperComponent,\r\n  // FormFieldWrapperComponent\r\n} from './wrappers';\r\nimport {\r\n  BooleanDefaultComponent,\r\n  DatetimeDefaultComponent,\r\n  EntityDefaultComponent,\r\n  EmptyDefaultComponent,\r\n  ExternalComponent,\r\n  HyperlinkDefaultComponent,\r\n  StringDefaultComponent,\r\n  StringUrlPathComponent,\r\n  StringDropdownComponent,\r\n  StringDropdownQueryComponent,\r\n  StringFontIconPickerComponent,\r\n  NumberDefaultComponent\r\n} from './input-types';\r\nimport { ValidationMessagesService } from './validators/validation-messages-service';\r\nimport { TextEntryWrapperComponent } from './wrappers/text-entry-wrapper/text-entry-wrapper.component';\r\nimport { ErrorWrapperComponent } from './wrappers/field-parent-wrapper/error-wrapper.component';\r\nimport { EavLocalizationComponent } from './wrappers/eav-localization-wrapper/eav-localization-wrapper.component';\r\nimport { FileTypeService } from '../shared/services/file-type.service';\r\nimport { EavLanguageSwitcherComponent } from './localization/eav-language-switcher/eav-language-switcher.component';\r\nimport { AdamBrowserComponent } from './adam/browser/adam-browser.component';\r\nimport { AdamHintComponent } from './adam/adam-hint/adam-hint.component';\r\nimport { DropzoneComponent } from './adam/dropzone/dropzone.component';\r\nimport { FilterPipe } from '../shared/pipes/filter.pipe';\r\nimport { OrderByPipe } from '../shared/pipes/orderby.pipe';\r\nimport { ClickStopPropagationDirective } from '../shared/directives/click-stop-propagination.directive';\r\nimport { FileEndingFilterPipe } from '../shared/pipes/file-ending-filter.pipe';\r\nimport { HyperlinkLibraryComponent } from './input-types/hyperlink/hyperlink-library/hyperlink-library.component';\r\nimport { HiddenWrapperComponent } from './wrappers/hidden-wrapper/hidden-wrapper.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // wrappers\r\n    CollapsibleWrapperComponent,\r\n    ErrorWrapperComponent,\r\n    TextEntryWrapperComponent,\r\n    // types\r\n    StringDefaultComponent,\r\n    StringUrlPathComponent,\r\n    StringDropdownComponent,\r\n    StringDropdownQueryComponent,\r\n    StringFontIconPickerComponent,\r\n    BooleanDefaultComponent,\r\n    DatetimeDefaultComponent,\r\n    EmptyDefaultComponent,\r\n    NumberDefaultComponent,\r\n    EavLocalizationComponent,\r\n    EntityDefaultComponent,\r\n    HyperlinkDefaultComponent,\r\n    ExternalComponent,\r\n    AdamBrowserComponent,\r\n    AdamHintComponent,\r\n    DropzoneComponent,\r\n    HyperlinkLibraryComponent,\r\n    EavLanguageSwitcherComponent,\r\n    FilterPipe,\r\n    OrderByPipe,\r\n    FileEndingFilterPipe,\r\n    ClickStopPropagationDirective,\r\n    HiddenWrapperComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DropzoneModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatGridListModule,\r\n    MatAutocompleteModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatProgressSpinnerModule,\r\n    TranslateModule.forChild()\r\n  ],\r\n  entryComponents: [\r\n    StringDefaultComponent,\r\n    StringUrlPathComponent,\r\n    StringDropdownComponent,\r\n    StringDropdownQueryComponent,\r\n    StringFontIconPickerComponent,\r\n    BooleanDefaultComponent,\r\n    TextEntryWrapperComponent,\r\n    DatetimeDefaultComponent,\r\n    EmptyDefaultComponent,\r\n    NumberDefaultComponent,\r\n    EavLocalizationComponent,\r\n    ErrorWrapperComponent,\r\n    CollapsibleWrapperComponent,\r\n    EntityDefaultComponent,\r\n    HyperlinkDefaultComponent,\r\n    HyperlinkLibraryComponent,\r\n    ExternalComponent,\r\n    DropzoneComponent,\r\n    HiddenWrapperComponent\r\n  ],\r\n  exports: [EavLanguageSwitcherComponent],\r\n  providers: [FileTypeService, ValidationMessagesService]\r\n})\r\nexport class EavMaterialControlsModule { }\r\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"group\\\">\\r\\n  <!-- <mat-form-field > -->\\r\\n  <mat-checkbox [formControlName]=\\\"config.name\\\" labelPosition=\\\"start\\\">\\r\\n    {{config.label}}\\r\\n  </mat-checkbox>\\r\\n  <!-- </mat-form-field> -->\\r\\n</div>\"","import { Component, ViewChild, AfterViewInit, Renderer2 } from '@angular/core';\r\nimport { MatCheckbox } from '@angular/material/checkbox';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'boolean-default',\r\n  templateUrl: './boolean-default.component.html',\r\n  styleUrls: ['./boolean-default.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class BooleanDefaultComponent implements Field {\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n  @ViewChild(MatCheckbox) matCheckbox: MatCheckbox;\r\n\r\n  // constructor(private renderer?: Renderer2) {\r\n  //   super();\r\n  // }\r\n\r\n  // ngAfterViewInit() {\r\n  //   // const formField = (<any>this.field)['__formField__'];\r\n  //   // if (formField) {\r\n  //   //   formField._control.focusMonitor([this.matCheckbox._inputElement.nativeElement]);\r\n\r\n  //   //   // temporary fix for https://github.com/angular/material2/issues/7891\r\n  //   //   if (formField.underlineRef && this.renderer) {\r\n  //   //     this.renderer.removeClass(formField.underlineRef.nativeElement, 'mat-form-field-underline');\r\n  //   //   }\r\n  //   // }\r\n  //   //super.ngAfterViewInit();\r\n  // }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n    <input matInput type=\\\"text\\\" id=\\\"demo\\\" class=\\\"form-control material\\\" [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.label\\\"\\r\\n        [required]=\\\"config.required\\\" #someVar1>\\r\\n</mat-form-field> -->\\r\\n\\r\\n<!-- style=\\\"display:none;\\\" -->\\r\\n\\r\\n<mat-spinner *ngIf=\\\"loaded\\\"></mat-spinner>\\r\\n<div #container></div>\\r\\n\\r\\n<mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n<mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n\\r\\n\\r\\n<!-- <div [innerHtml]=\\\"html\\\"></div> -->\"","import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { FieldExternal } from '../../../../eav-dynamic-form/model/field-external';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { AdamConfig } from '../../../../shared/models/adam/adam-config';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'external',\r\n  templateUrl: './external.component.html',\r\n  styleUrls: ['./external.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-dropzone', 'app-eav-localization-wrapper'],\r\n})\r\nexport class ExternalComponent implements FieldExternal, OnInit {\r\n  @ViewChild('container') elReference: ElementRef;\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n  @Input()\r\n  set factory(value: any) {\r\n    console.log('set factory', value);\r\n    if (value) {\r\n      this.renderExternalComponent(value);\r\n      this.subscribeFormChange(value);\r\n      this.externalFactory = value;\r\n    }\r\n  }\r\n\r\n  private subscriptions: Subscription[] = [];\r\n  loaded = true;\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  get id() {\r\n    return `${this.config.entityId}${this.config.index}`;\r\n  }\r\n\r\n  externalFactory: any;\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService,\r\n    private eavService: EavService) { }\r\n\r\n  /**\r\n   * This is host methods which the external control sees\r\n   */\r\n  private externalInputTypeHost = {\r\n    update: (value) => this.update(value),\r\n    setInitValues: (value) => this.setInitValues(),\r\n    // toggleAdam: (value1, value2) => this.toggleAdam(value1, value2),\r\n    // adamModeImage: () => (this.config && this.config.adam) ? this.config.adam.showImagesOnly : null,\r\n    attachAdam: () => this.attachAdam()\r\n  };\r\n\r\n  // TODO: need to finish validation\r\n  getErrorMessage() {\r\n    // console.log('trigger getErrorMessage1:', this.config.name);\r\n    // console.log('trigger getErrorMessage:',\r\n\r\n    let formError = '';\r\n    const control = this.group.controls[this.config.name];\r\n    if (control) {\r\n      const messages = this.validationMessagesService.validationMessages();\r\n      if (control && control.invalid) {\r\n        // if ((control.dirty || control.touched)) {\r\n        // if (this.externalFactory && this.externalFactory.isDirty) {\r\n        Object.keys(control.errors).forEach(key => {\r\n          if (messages[key]) {\r\n            formError = messages[key](this.config);\r\n          }\r\n        });\r\n        // }\r\n        // }\r\n      }\r\n    }\r\n    // console.log('control.dirty:', control.dirty);\r\n    // console.log('control.touched:', control.touched);\r\n    return formError;\r\n\r\n    // this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config));\r\n    // return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  private renderExternalComponent(factory: any) {\r\n    console.log('this.customInputTypeHost', this.externalInputTypeHost);\r\n    console.log('this.customInputTypeHost', this.elReference.nativeElement);\r\n    factory.initialize(this.externalInputTypeHost, this.config, this.id);\r\n    factory.render(this.elReference.nativeElement);\r\n    console.log('factory.writeValue(', this.group.controls[this.config.name].value);\r\n\r\n    // factory.writeValue(this.elReference.nativeElement, this.group.controls[this.config.name].value);\r\n    // this.setExternalControlValues(factory, this.group.controls[this.config.name].value);\r\n\r\n    this.suscribeValueChanges(factory);\r\n    // this.subscribeToCurrentLanguageFromStore(factory);\r\n    this.loaded = false;\r\n  }\r\n\r\n  private update(value) {\r\n    console.log('ExternalComponent update change', value);\r\n    // TODO: validate value\r\n    this.group.controls[this.config.name].patchValue(value);\r\n  }\r\n\r\n  /**\r\n   * Set initial values when external component is initialized\r\n   */\r\n  private setInitValues() {\r\n    this.setExternalControlValues(this.externalFactory, this.group.controls[this.config.name].value);\r\n  }\r\n\r\n  private attachAdam() {\r\n    // TODO:\r\n    // If adam registered then attach Adam\r\n    console.log('setInitValues');\r\n    if (this.config.adam) {\r\n      console.log('adam is registered - adam attached updateCallback', this.externalFactory);\r\n      // set update callback = external method setAdamValue\r\n\r\n      // callbacks - functions called from adam\r\n\r\n      this.config.adam.updateCallback = (value) =>\r\n        this.externalFactory.adamSetValue\r\n          ? this.externalFactory.adamSetValue(value)\r\n          : alert('adam attached but adamSetValue method not exist');\r\n\r\n\r\n      this.config.adam.afterUploadCallback = (value) =>\r\n        this.externalFactory.adamAfterUpload\r\n          ? this.externalFactory.adamAfterUpload(value)\r\n          : alert('adam attached but adamAfterUpload method not exist');\r\n\r\n      // return value from form\r\n      this.config.adam.getValueCallback = () => this.group.controls[this.config.name].value;\r\n\r\n      return {\r\n        toggleAdam: (value1, value2) => this.config.adam.toggle(value1), // this.toggleAdam(value1, value2)\r\n        setAdamConfig: (adamConfig: AdamConfig) => this.config.adam.setConfig(adamConfig),\r\n        adamModeImage: () => (this.config && this.config.adam) ? this.config.adam.showImagesOnly : null,\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * subscribe to form value changes for this field\r\n   */\r\n  private suscribeValueChanges(factory: any) {\r\n    this.subscriptions.push(\r\n      this.group.controls[this.config.name].valueChanges.subscribe((item) => {\r\n        console.log('ExternalComponent suscribeValueChanges', item);\r\n        this.setExternalControlValues(factory, item);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This is subscribe for all setforms - even if is not changing value.\r\n   * @param factory\r\n   */\r\n  private subscribeFormChange(factory: any) {\r\n    this.subscriptions.push(\r\n      this.eavService.formSetValueChange$.subscribe((item) => {\r\n        console.log('Formm CHANGEEEEEEEEEEEEEEEEEE', item);\r\n        this.setExternalControlValues(factory, item[this.config.name]);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * write value from the form into the view in external component\r\n   * @param factory\r\n   * @param value\r\n   */\r\n  private setExternalControlValues(factory, value) {\r\n    // if container have value\r\n    if (this.elReference.nativeElement.innerHTML) {\r\n      if (value) {\r\n        console.log('set valueeee', value);\r\n        factory.setValue(this.elReference.nativeElement, value);\r\n      }\r\n      factory.setOptions(this.elReference.nativeElement, this.group.controls[this.config.name].disabled);\r\n\r\n      // this.setAdamOptions();\r\n    }\r\n  }\r\n\r\n  // private setAdamOptions() {\r\n  //   // set Adam disabled state\r\n  //   if (this.config.adam) {\r\n  //     this.config.adam.disabled = this.group.controls[this.config.name].disabled;\r\n  //   }\r\n  // }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"config.settings.UseTimePicker && config.settings.UseTimePicker === true; then useTimePickerTemplate else notUseTimePickerTemplate\\\"></div>\\r\\n\\r\\n<ng-template #notUseTimePickerTemplate>\\r\\n  <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n    <input matInput [matDatepicker]=\\\"picker\\\" class=\\\"form-control material\\\" [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.label\\\"\\r\\n      [required]='config.required'>\\r\\n    <!-- [matDatepickerFilter]=\\\"to.datepickerOptions.filter\\\" -->\\r\\n    <!-- (dateChange)=\\\"to.change(field, formControl)\\\" -->\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #picker></mat-datepicker>\\r\\n    <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n    <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n  </mat-form-field>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #useTimePickerTemplate>\\r\\n  <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n    <input matInput [formControlName]=\\\"config.name\\\" [owlDateTime]=\\\"picker\\\" [placeholder]=\\\"config.label\\\" [required]='config.required'>\\r\\n    <!-- (dateTimeChange)=\\\"to.change(field, formControl)\\\" -->\\r\\n    <!-- control from https://github.com/DanielYKPan/date-time-picker -->\\r\\n    <owl-date-time #picker></owl-date-time>\\r\\n\\r\\n    <button matSuffix type=\\\"button\\\" mat-icon-button [owlDateTimeTrigger]=\\\"picker\\\">\\r\\n      <mat-icon class=\\\"mat-24\\\">today</mat-icon>\\r\\n    </button>\\r\\n    <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n    <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n  </mat-form-field>\\r\\n</ng-template>\"","import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'datetime-default',\r\n  templateUrl: './datetime-default.component.html',\r\n  styleUrls: ['./datetime-default.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class DatetimeDefaultComponent implements Field {\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<span></span>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'empty-default',\r\n  templateUrl: './empty-default.component.html',\r\n  styleUrls: ['./empty-default.component.css']\r\n})\r\nexport class EmptyDefaultComponent {\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- !modes.freeTextMode && -->\\r\\n<mat-list *ngIf=\\\"enableCreate || (chosenEntities && chosenEntities.length > 0)\\\">\\r\\n  <mat-list-item *ngFor=\\\"let item of chosenEntities; let i = index\\\">\\r\\n    <p matLine>\\r\\n      <!-- ng-show=\\\"!allowMultiValue\\\" -->\\r\\n      <!-- <i class=\\\"material-icons\\\">check</i> -->\\r\\n      <button mat-icon-button *ngIf=\\\"allowMultiValue\\\" [disabled]=\\\"chosenEntities[0] === item || disabled\\\" type=\\\"button\\\" (click)=\\\"levelUp(item, i)\\\">\\r\\n        <mat-icon class=\\\"mat-24\\\">arrow_upward</mat-icon>\\r\\n      </button>\\r\\n      <button mat-icon-button *ngIf=\\\"allowMultiValue\\\" [disabled]=\\\"chosenEntities[chosenEntities.length - 1] === item || disabled\\\"\\r\\n        type=\\\"button\\\" (click)=\\\"levelDown(item, i)\\\">\\r\\n        <mat-icon class=\\\"mat-24\\\">arrow_downward</mat-icon>\\r\\n      </button>\\r\\n      <i title=\\\"\\\" class=\\\"eav-icon-link pull-left eav-entityselect-icon\\\" *ngIf=\\\"allowMultiValue\\\"></i>\\r\\n      <i title=\\\"\\\" class=\\\"eav-icon-link pull-left eav-entityselect-icon\\\" *ngIf=\\\"!allowMultiValue\\\"></i>\\r\\n      <span [title]=\\\"getEntityText(item) + ' (' + item + ')'\\\">{{ getEntityText(item) }}</span>\\r\\n      <button mat-icon-button *ngIf=\\\"enableEdit\\\" type=\\\"button\\\" (click)=\\\"edit(item)\\\" title=\\\"{{ 'FieldType.Entity.Edit' | translate }}\\\"\\r\\n        [disabled]=\\\"disabled\\\">\\r\\n        <i class=\\\"eav-icon-pencil\\\"></i>\\r\\n      </button>\\r\\n      <button mat-icon-button *ngIf=\\\"enableRemove\\\" type=\\\"button\\\" (click)=\\\"removeSlot(item, i)\\\" title=\\\"{{ 'FieldType.Entity.Remove' | translate }}\\\"\\r\\n        [disabled]=\\\"disabled\\\">\\r\\n        <i class=\\\"{{allowMultiValue ? 'eav-icon-minus-circled' : 'eav-icon-down-dir'}}\\\"></i>\\r\\n      </button>\\r\\n      <button mat-icon-button *ngIf=\\\"enableDelete\\\" type=\\\"button\\\" (click)=\\\"deleteItemInSlot(item)\\\" title=\\\"{{ 'FieldType.Entity.Delete' | translate }}\\\"\\r\\n        [disabled]=\\\"disabled\\\">\\r\\n        <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n      </button>\\r\\n    </p>\\r\\n  </mat-list-item>\\r\\n</mat-list>\\r\\n\\r\\n<!-- pick existing entity -->\\r\\n<!-- ng-if=\\\"!modes.freeTextMode\\\" -->\\r\\n<div *ngIf=\\\"enableAddExisting && (allowMultiValue || (chosenEntities && chosenEntities.length < 1))\\\">\\r\\n  <mat-form-field [style.width]=\\\"'100%'\\\" [formGroup]=\\\"group\\\">\\r\\n\\r\\n    <!--(click)=\\\"setSelectEntitiesObservables()\\\"  -->\\r\\n    <input matInput type=\\\"text\\\" #autocompleteInput [id]=\\\"id\\\" [placeholder]=\\\"config.label\\\" [matAutocomplete]=\\\"auto\\\" [disabled]=\\\"disabled\\\"\\r\\n      [placeholder]=\\\"config.label\\\" [required]=\\\"config.required\\\">\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"optionSelected($event)\\\">\\r\\n      <mat-option *ngFor=\\\"let item of (selectEntities | async)\\\" [value]=\\\"item.Value\\\" [disabled]=\\\"isInChosenEntities(item.Value)\\\">\\r\\n        <span>{{item.Text ? item.Text: item.Value}} {{value}}</span>\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n    <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n  <!-- <span ng-if=\\\"!error\\\">{{ 'FieldType.EntityQuery.QueryNoItems' | translate }}</span> -->\\r\\n</div>\\r\\n<!-- create new entity to add to this list -->\\r\\n<button mat-icon-button *ngIf=\\\"enableCreate && entityType !== '' && (allowMultiValue || chosenEntities.length < 1)\\\" type=\\\"button\\\"\\r\\n  (click)=\\\"openNewEntityDialog()\\\" [disabled]=\\\"disabled\\\">\\r\\n  <i class=\\\"eav-icon-plus\\\"></i>\\r\\n</button>\\r\\n\\r\\n<!-- TODO: Do we need this ??? -->\\r\\n<!-- handle free text mode -->\\r\\n<!-- <input ng-show=\\\"modes.freeTextMode\\\" class=\\\"form-control input-material material\\\" ng-model=\\\"value.Value\\\" formly-skip-ng-model-attrs-manipulator\\r\\n  type=\\\"text\\\">\\r\\n<a ng-show=\\\"to.settings.merged.EnableTextEntry && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)\\\" class=\\\"freetext-toggle input-group-addon icon-field-button icon-field-button-small\\\"\\r\\n  ng-class=\\\"{'active': modes.freeTextMode}\\\" ng-click=\\\"modes.freeTextMode = !modes.freeTextMode\\\">\\r\\n\\r\\n  <span ng-show=\\\"modes.freeTextMode\\\" class=\\\"eav-icon-down-dir\\\"></span>\\r\\n  <span ng-show=\\\"!modes.freeTextMode\\\" class=\\\"eav-icon-i-cursor\\\"></span>\\r\\n</a> -->\"","import {\r\n  AfterViewInit,\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable, Subscription, merge, fromEvent } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EavConfiguration } from '../../../../shared/models/eav-configuration';\r\nimport { EntityInfo } from '../../../../shared/models/eav/entity-info';\r\nimport { EntityService } from '../../../../shared/services/entity.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { MultiItemEditFormComponent } from '../../../../eav-item-dialog/multi-item-edit-form/multi-item-edit-form.component';\r\nimport { EavAdminUiService } from '../../../../shared/services/eav-admin-ui.service';\r\nimport { FieldMaskService } from '../../../../shared/services/field-mask.service';\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'entity-default',\r\n  templateUrl: './entity-default.component.html',\r\n  styleUrls: ['./entity-default.component.css'],\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class EntityDefaultComponent implements Field, OnInit, OnDestroy, AfterViewInit {\r\n  @ViewChild('autocompleteInput') input;\r\n\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  chosenEntities: string[];\r\n  // options: Item[];\r\n  selectEntities: Observable<EntityInfo[]> = null;\r\n  // entities = [];\r\n  private contentType: FieldMaskService;\r\n\r\n  private availableEntities: EntityInfo[] = [];\r\n  private entityTextDefault = 'Item not found'; // $translate.instant(\"FieldType.Entity.EntityNotFound\");\r\n  private subscriptions: Subscription[] = [];\r\n  private eavConfig: EavConfiguration;\r\n\r\n  get allowMultiValue() {\r\n    return this.config.settings.AllowMultiValue || false;\r\n  }\r\n\r\n  get entityType() {\r\n    return this.config.settings.EntityType || '';\r\n  }\r\n\r\n  get enableAddExisting() {\r\n    return this.config.settings.EnableAddExisting || false;\r\n  }\r\n\r\n  get enableCreate() {\r\n    return this.config.settings.EnableCreate || false;\r\n  }\r\n\r\n  get enableEdit() {\r\n    return this.config.settings.EnableEdit || false;\r\n  }\r\n\r\n  get enableRemove() {\r\n    return this.config.settings.EnableRemove || false;\r\n  }\r\n\r\n  get enableDelete() {\r\n    return this.config.settings.EnableDelete || false;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.group.controls[this.config.name].disabled;\r\n  }\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config, true);\r\n  }\r\n\r\n  constructor(private entityService: EntityService,\r\n    private eavService: EavService,\r\n    private eavAdminUiService: EavAdminUiService,\r\n    private validationMessagesService: ValidationMessagesService,\r\n    private dialog: MatDialog) {\r\n    this.eavConfig = this.eavService.getEavConfiguration();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // Initialize entities\r\n    const sourceMask = this.entityType || null;\r\n    // this will contain the auto-resolve type (based on other contentType-field)\r\n    this.contentType = new FieldMaskService(sourceMask, this.maybeReload, null, null);\r\n    // don't get it, it must be blank to start with, so it will be loaded at least 1x lastContentType = contentType.resolve();\r\n    console.log('contentType', this.contentType);\r\n\r\n    console.log('[create]  ngOnInit EntityDefaultComponent', this.group.value);\r\n    this.setChosenEntities();\r\n\r\n    this.setAvailableEntities();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setSelectEntitiesObservables();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscriber => subscriber.unsubscribe());\r\n  }\r\n\r\n  maybeReload() {\r\n    console.log('call maybeReload');\r\n  }\r\n\r\n  optionSelected(event) {\r\n    this.addEntity(event.option.value);\r\n    this.input.nativeElement.value = null;\r\n  }\r\n\r\n  getEntityText = (value): string => {\r\n    if (value === null) {\r\n      return 'empty slot';\r\n    }\r\n    const entities = this.availableEntities.filter(f => f.Value === value);\r\n    if (entities.length > 0) {\r\n      return entities.length > 0 ? entities[0].Text :\r\n        this.entityTextDefault ? this.entityTextDefault : value;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  getEntityId = (value): string => {\r\n    if (value === null) {\r\n      return 'empty slot';\r\n    }\r\n    const entities = this.availableEntities.filter(f => f.Value === value);\r\n    if (entities.length > 0) {\r\n      return entities.length > 0 ? entities[0].Id : value;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Determine is entityID in chosenEntities\r\n   */\r\n  isInChosenEntities = (value): boolean => {\r\n    if (this.chosenEntities.find(e => e === value)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * add entity to form\r\n   * @param value\r\n   */\r\n  addEntity(value: string) {\r\n    if (value) {\r\n      // this.selectedValue = null;\r\n      const entityValues: string[] = [...this.group.controls[this.config.name].value];\r\n      entityValues.push(value);\r\n      this.group.controls[this.config.name].patchValue(entityValues);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  open edit eav item dialog for item\r\n   * @param value\r\n   */\r\n  edit(value: string) {\r\n    const dialogRef = this.eavAdminUiService.openItemEditWithEntityId(this.dialog, this.getEntityId(value), MultiItemEditFormComponent);\r\n  }\r\n\r\n  /**\r\n   * remove entity value from form\r\n   * @param value\r\n   */\r\n  removeSlot(item: string, index: number) {\r\n    const entityValues: string[] = [...this.group.controls[this.config.name].value];\r\n    entityValues.splice(index, 1);\r\n    // this.group.patchValue({ [this.config.name]: entityValues.filter(entity => entity !== value) });\r\n    this.group.controls[this.config.name].patchValue(entityValues);\r\n  }\r\n\r\n  /**\r\n   * delete entity\r\n   * @param value\r\n   */\r\n  deleteItemInSlot(item: string, index: number) {\r\n    if (this.entityType === '') {\r\n      alert('delete not possible - no type specified in entity field configuration');\r\n      return;\r\n    }\r\n\r\n    const entities: EntityInfo[] = this.availableEntities.filter(f => f.Value === item);\r\n    const id = entities[0].Id;\r\n    const text = entities[0].Text;\r\n    // TODO:contentType.resolve()\r\n    const contentTypeTemp = this.entityType; // contentType.resolve()\r\n    // Then delete entity item:\r\n    this.entityService.delete(this.eavConfig.appId, contentTypeTemp, id, false).subscribe(result => {\r\n      if (result === null || result.status >= 200 && result.status < 300) {\r\n        // TODO: make message\r\n        this.removeSlot(item, index);\r\n      } else {\r\n        // TODO: message success\r\n        this.entityService.delete(this.eavConfig.appId, contentTypeTemp, id, true).subscribe(items => {\r\n          this.removeSlot(item, index);\r\n          // TODO: refresh avalable entities\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  levelUp(value: string, index: number) {\r\n    const entityValues: string[] = [...this.group.controls[this.config.name].value];\r\n    entityValues.splice(index, 1);\r\n    entityValues.splice(index - 1, 0, ...[value]);\r\n    this.group.controls[this.config.name].patchValue(entityValues);\r\n  }\r\n\r\n  levelDown(value: string, index: number) {\r\n    const entityValues: string[] = [...this.group.controls[this.config.name].value];\r\n    entityValues.splice(index, 1);\r\n    entityValues.splice(index + 1, 0, ...[value]);\r\n    this.group.controls[this.config.name].patchValue(entityValues);\r\n  }\r\n\r\n  openNewEntityDialog() {\r\n    console.log('TODO openNewEntityDialog');\r\n\r\n    // open the dialog for a new item\r\n    // TODO: finisih this when web services are completed\r\n    // eavAdminDialogs.openItemNew(contentType.resolve(), reloadAfterAdd);\r\n  }\r\n\r\n  /**\r\n   * set initial value and subscribe to form value changes\r\n   */\r\n  private setChosenEntities() {\r\n    this.chosenEntities = this.group.controls[this.config.name].value || [];\r\n\r\n    this.subscriptions.push(\r\n      this.group.controls[this.config.name].valueChanges.subscribe((item) => {\r\n        this.updateChosenEntities(item);\r\n      })\r\n    );\r\n\r\n    this.subscriptions.push(\r\n      this.eavService.formSetValueChange$.subscribe((item) => {\r\n        this.updateChosenEntities(this.group.controls[this.config.name].value);\r\n      })\r\n    );\r\n  }\r\n\r\n  private updateChosenEntities(values: string[]) {\r\n    if (this.chosenEntities !== values) {\r\n      this.chosenEntities = values;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * TODO: select all entities from app\r\n   */\r\n  private setAvailableEntities() {\r\n    // TODO:\r\n    // const ctName = this.contentType.resolve(); // always get the latest definition, possibly from another drop-down\r\n    // TEMP: harcoded\r\n    const ctName = this.entityType;\r\n\r\n    // check if we should get all or only the selected ones...\r\n    // if we can't add, then we only need one...\r\n    let itemFilter = null;\r\n    try {\r\n      itemFilter = this.enableAddExisting\r\n        ? null\r\n        : this.group.controls[this.config.name].value;\r\n    } catch (err) { }\r\n\r\n    this.entityService.getAvailableEntities(this.eavConfig.appId, itemFilter, ctName).subscribe(items => {\r\n      this.availableEntities = [...items];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * selectEntities observe events from input autocomplete field\r\n   */\r\n  private setSelectEntitiesObservables() {\r\n    if (this.input && this.selectEntities === null) {\r\n      const eventNames = ['keyup', 'click'];\r\n      // Merge all observables into one single stream:\r\n      const eventStreams = eventNames.map((eventName) => {\r\n        // return Observable.fromEvent(this.input.nativeElement, eventName);\r\n        return fromEvent(this.input.nativeElement, eventName);\r\n      });\r\n\r\n      const allEvents$ = merge(...eventStreams);\r\n\r\n      this.selectEntities = allEvents$\r\n        .pipe(map((value: any) => this.filter(value.target.value)));\r\n      // .do(value => console.log('test selectEntities', value));\r\n    }\r\n\r\n    // clear this.selectEntities if input don't exist\r\n    // this can happen when not allowMultiValue\r\n    if (!this.input) {\r\n      this.selectEntities = null;\r\n    }\r\n  }\r\n\r\n  private filter(val: string): EntityInfo[] {\r\n    if (val === '') {\r\n      return this.availableEntities;\r\n    }\r\n\r\n    return this.availableEntities.filter(option =>\r\n      option.Text ?\r\n        option.Text.toLowerCase().indexOf(val.toLowerCase()) === 0\r\n        : option.Value.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n}\r\n","module.exports = \".thumbnail-before-input.icon-before-input {\\r\\n    width: 46px;\\r\\n    font-size: 42px;\\r\\n    padding-left: 2px;\\r\\n    padding-right: 5px;\\r\\n    padding-top: 2px;\\r\\n    padding-bottom: 3px;\\r\\n}\\r\\n.icon-before-input a {\\r\\n    color: #444;\\r\\n}\\r\\n.thumbnail-before-input {\\r\\n    padding-top: 0; \\r\\n    padding-bottom: 0; \\r\\n    border-top-width: 0; \\r\\n    padding-left: 0; \\r\\n    padding-right: 0; \\r\\n    border-left-width: 0; \\r\\n    border-bottom-width: 0; \\r\\n    background-color: transparent;\\r\\n    /* transparent;  */\\r\\n\\r\\n    /* new */\\r\\n    width: 64px;\\r\\n    height: 64px;\\r\\n    /* position: absolute;\\r\\n    top: 0; */\\r\\n     /* important to add this, because of paddings which are auto-added */\\r\\n    border-radius: 0;\\r\\n}\\r\\n/* design/style the empty placeholder - for now don't do anything '*/\\r\\n/* .thumbnail-before-input.empty-placeholder { */\\r\\n/*background-color: pink;*/\\r\\n/* } */\\r\\ndiv.dropzone div.input-group div.tooltip-inner {\\r\\n    word-wrap: break-word;\\r\\n}\\r\\n.field-hints {\\r\\n    visibility: hidden;\\r\\n    opacity: 0;\\r\\n    transition-duration: 200ms, 200ms;\\r\\n    transition-property: opacity, visibility;\\r\\n    transition-delay: 0, 200ms;\\r\\n}\\r\\ndiv.focused .field-hints {\\r\\n    visibility: visible;\\r\\n    opacity:1;\\r\\n}\"","module.exports = \"<!-- <div (mouseleave)=\\\"showFieldHints = false\\\"> -->\\r\\n<div>\\r\\n  <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n    <div matPrefix *ngIf=\\\"value && isImage()\\\" class=\\\"thumbnail-before-input\\\" (mouseenter)=\\\"showPreview = true\\\" (mouseleave)=\\\"showPreview = false\\\"\\r\\n      [ngStyle]=\\\"{'background-image': 'url(' + thumbnailUrl(1, true) + ')'}\\\">\\r\\n    </div>\\r\\n    <div matPrefix *ngIf=\\\"value && !isImage()\\\" class=\\\"thumbnail-before-input icon-before-input\\\">\\r\\n      <a [href]=\\\"link\\\" target=\\\"_blank\\\" tabindex=\\\"-1\\\" [class]=\\\"icon()\\\" matTooltip=\\\"{{tooltipUrl(link)}}\\\" matTooltipPosition=\\\"right\\\">\\r\\n      </a>\\r\\n    </div>\\r\\n    <div matPrefix *ngIf=\\\"!value\\\" class=\\\"thumbnail-before-input empty-placeholder\\\">\\r\\n    </div>\\r\\n    <input matInput type=\\\"text\\\" [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.label\\\" [required]=\\\"config.required\\\" (click)=\\\"showFieldHints = true\\\"\\r\\n      [required]=\\\"config.required\\\" matTooltip=\\\"{{'Edit.Fields.Hyperlink.Default.Tooltip1' | translate }}\\r\\n      {{'Edit.Fields.Hyperlink.Default.Tooltip2' | translate }}\\r\\n      ADAM - sponsored with ♥ by 2sic.com\\\" matTooltipPosition=\\\"above\\\">\\r\\n    <!-- <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() }}</mat-error> -->\\r\\n    <span matSuffix class=\\\"input-group-btn\\\">\\r\\n      <div style=\\\"width: 6px;\\\"></div>\\r\\n      <button mat-icon-button *ngIf=\\\"buttons.indexOf('adam') > -1\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\" class=\\\"btn btn-default icon-field-button\\\"\\r\\n        (click)=\\\"toggleAdam()\\\" matTooltip=\\\"{{ 'Edit.Fields.Hyperlink.Default.AdamUploadLabel' | translate }}\\\">\\r\\n        <i class=\\\"eav-icon-apple\\\"></i>\\r\\n      </button>\\r\\n      <button mat-icon-button *ngIf=\\\"buttons.indexOf('page') > -1\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\" class=\\\"btn btn-default icon-field-button\\\"\\r\\n        (click)=\\\"openPageDialog()\\\" matTooltip=\\\"{{ 'Edit.Fields.Hyperlink.Default.PageLabel' | translate }}\\\">\\r\\n        <i class=\\\"eav-icon-sitemap\\\"></i>\\r\\n      </button>\\r\\n      <button mat-icon-button *ngIf=\\\"buttons.indexOf('more') > -1\\\" tabindex=\\\"-1\\\" [disabled]=\\\"disabled\\\" type=\\\"button\\\" class=\\\"btn btn-default icon-field-button\\\"\\r\\n        [matMenuTriggerFor]=\\\"menu\\\">\\r\\n        <i class=\\\"eav-icon-options\\\"></i>\\r\\n      </button>\\r\\n      <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item *ngIf=\\\"showAdam\\\" (click)=\\\"toggleAdam(false)\\\">\\r\\n          <i class=\\\"eav-icon-apple\\\"></i>\\r\\n          <span>{{'Edit.Fields.Hyperlink.Default.MenuAdam' | translate }}</span>\\r\\n        </button>\\r\\n        <button mat-menu-item *ngIf=\\\"config.settings.ShowPagePicker\\\" (click)=\\\"openPageDialog()\\\">\\r\\n          <i class=\\\"eav-icon-sitemap\\\" xicon=\\\"home\\\"></i>\\r\\n          <span>{{'Edit.Fields.Hyperlink.Default.MenuPage' | translate }}</span>\\r\\n        </button>\\r\\n        <button mat-menu-item *ngIf=\\\"config.settings.ShowImageManager\\\" (click)=\\\"toggleAdam(true, true)\\\">\\r\\n          <i class=\\\"eav-icon-file-image\\\" xicon=\\\"picture\\\"></i>\\r\\n          <span>{{'Edit.Fields.Hyperlink.Default.MenuImage' | translate }}</span>\\r\\n        </button>\\r\\n        <button mat-menu-item *ngIf=\\\"config.settings.ShowFileManager\\\" (click)=\\\"toggleAdam(true, false)\\\">\\r\\n          <i class=\\\"eav-icon-file\\\" xicon=\\\"file\\\"></i>\\r\\n          <span>{{'Edit.Fields.Hyperlink.Default.MenuDocs' | translate }}</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </span>\\r\\n    <div *ngIf=\\\"showPreview\\\" style=\\\"position: relative\\\">\\r\\n      <div style=\\\"position: absolute; z-index: 100; background: white; top: 10px; text-align: center; left: 0; right: 0;\\\">\\r\\n        <img [src]=\\\"thumbnailUrl(2)\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-form-field>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { FileTypeService } from '../../../../shared/services/file-type.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { DnnBridgeService } from '../../../../shared/services/dnn-bridge.service';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { AdamConfig, AdamModeConfig } from '../../../../shared/models/adam/adam-config';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'hyperlink-default',\r\n  templateUrl: './hyperlink-default.component.html',\r\n  styleUrls: ['./hyperlink-default.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-dropzone', 'app-eav-localization-wrapper'],\r\n})\r\nexport class HyperlinkDefaultComponent implements Field, OnInit, OnDestroy {\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  showPreview;\r\n  toggleAdamValue = false;\r\n  link = '';\r\n  showFieldHints;\r\n\r\n  // TODOD: temp\r\n  private eavConfig;\r\n\r\n  // adam: any;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  private adamModeConfig: AdamModeConfig = {\r\n    usePortalRoot: false\r\n  };\r\n\r\n  get value() {\r\n    return this.group.controls[this.config.name].value;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.group.controls[this.config.name].disabled;\r\n  }\r\n\r\n  // ensureDefaultConfig();\r\n  get showAdam() {\r\n    // this.config.settings.ShowAdam.values.Where(v => v.Dimensions.Contains(\"en-en\").value) or values[0]\r\n    // then the wrapper will enable/disable the field, depending on the dimension state\\\r\n    // so if it's read-only sharing, the input-field is disabled till the globe is clicked to enable edit...\r\n    return this.config.settings.ShowAdam ? this.config.settings.ShowAdam : true;\r\n  }\r\n\r\n  get fileFilter() {\r\n    return this.config.settings.FileFilter || '';\r\n  }\r\n\r\n  get buttons(): string {\r\n    return this.config.settings.Buttons ? this.config.settings.Buttons : 'adam,more';\r\n  }\r\n\r\n  constructor(private fileTypeService: FileTypeService,\r\n    private dnnBridgeService: DnnBridgeService,\r\n    private eavService: EavService) {\r\n    this.eavConfig = this.eavService.getEavConfiguration();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.attachAdam();\r\n    this.setLink(this.value);\r\n    this.suscribeValueChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscriber => subscriber.unsubscribe());\r\n  }\r\n\r\n  private setFormValue(formControlName: string, value: any) {\r\n    this.group.patchValue({ [formControlName]: value });\r\n  }\r\n\r\n  isImage = () => this.fileTypeService.isImage(this.link);\r\n\r\n  icon = () => this.fileTypeService.getIconClass(this.link);\r\n\r\n  thumbnailUrl(size: number, quote: boolean) {\r\n    let result = this.link;\r\n    if (size === 1) {\r\n      result = result + '?w=64&h=64&mode=crop';\r\n    }\r\n    if (size === 2) {\r\n      result = result + '?w=500&h=400&mode=max';\r\n    }\r\n    const qt = quote ? '\"' : '';\r\n    return qt + result + qt;\r\n  }\r\n\r\n  tooltipUrl = (str: string): string => {\r\n    if (!str) {\r\n      return '';\r\n    }\r\n    return str.replace(/\\//g, '/&#8203;');\r\n  }\r\n\r\n  //#region dnn-page picker dialog\r\n\r\n  // the callback when something was selected\r\n  private processResultOfPagePicker(value) {\r\n    // Convert to page:xyz format (if it wasn't cancelled)\r\n    if (value) {\r\n      this.setFormValue(this.config.name, `page:${value.id}`);\r\n    }\r\n  }\r\n\r\n  // open the dialog\r\n  openPageDialog() {\r\n    console.log('openPageDialog');\r\n    // dnnBridgeSvc.open(\r\n    //   this.value,\r\n    //   {\r\n    //     Paths: this.config.settings.Paths ? this.config.settings.Paths.values[0].value : '',\r\n    //     FileFilter: this.config.settings.FileFilter ? this.config.settings.FileFilter : ''\r\n    //   },\r\n    //   this.processResultOfPagePicker);\r\n  }\r\n\r\n  //#endregion dnn page picker\r\n\r\n  //#region new adam: callbacks only\r\n\r\n  setValue(fileItem) {\r\n    console.log('setValue fileItem :', fileItem);\r\n    this.setFormValue(this.config.name, `File:${fileItem.Id}`);\r\n  }\r\n\r\n  toggleAdam(usePortalRoot, showImagesOnly) {\r\n    console.log('toggleAdam hdefault');\r\n    this.config.adam.toggle({\r\n      showImagesOnly: showImagesOnly,\r\n      usePortalRoot: usePortalRoot\r\n    });\r\n  }\r\n\r\n  /**\r\n * subscribe to form value changes. Only this field change\r\n *\r\n */\r\n  private suscribeValueChanges() {\r\n    this.subscriptions.push(\r\n      this.group.controls[this.config.name].valueChanges.subscribe((item) => {\r\n        console.log('suscribeValueChanges CHANGE');\r\n        this.setLink(item);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update test-link if necessary - both when typing or if link was set by dialogs\r\n   * @param value\r\n   */\r\n  private setLink(value: string) {\r\n    // const oldValue = this.value;\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    // handle short-ID links like file:17\r\n    const urlFromId$ = this.dnnBridgeService.getUrlOfId(this.eavConfig.appId,\r\n      value,\r\n      this.config.header.contentTypeName,\r\n      this.config.header.guid,\r\n      this.config.name);\r\n\r\n    if (urlFromId$) {\r\n      this.subscriptions.push(\r\n        urlFromId$.subscribe((data) => {\r\n          if (data) {\r\n            this.link = data;\r\n          }\r\n        }));\r\n    } else {\r\n      this.link = value;\r\n    }\r\n  }\r\n\r\n  private attachAdam() {\r\n    if (this.config.adam) {\r\n      // callbacks - functions called from adam\r\n      this.config.adam.updateCallback = (value) => this.setValue(value);\r\n\r\n      // binding for dropzone\r\n      this.config.adam.afterUploadCallback = (value) => this.setValue(value);\r\n\r\n      // return value from form\r\n      this.config.adam.getValueCallback = () => this.group.controls[this.config.name].value;\r\n\r\n      // set adam configuration (initial config)\r\n      // this.config.adam.setConfig(\r\n      //   new AdamConfig(this.adamModeConfig,\r\n      //     true, // allowAssetsRoot\r\n      //     false, // autoLoad\r\n      //     true, // enableSelect\r\n      //     this.fileFilter, // fileFilter\r\n      //     0, // folderDepth\r\n      //     '', // metadataContentTypes\r\n      //     '', // subFolder\r\n      //   )\r\n      // );\r\n      console.log('HyperDefault setConfig : ', Object.assign(new AdamConfig(), {\r\n        adamModeConfig: this.adamModeConfig,\r\n        fileFilter: this.fileFilter\r\n      }));\r\n\r\n      this.config.adam.setConfig(Object.assign(new AdamConfig(), {\r\n        adamModeConfig: this.adamModeConfig,\r\n        fileFilter: this.fileFilter\r\n      }));\r\n      //   new AdamConfig(this.adamModeConfig,\r\n      //     true, // allowAssetsInRoot\r\n      //     false, // autoLoad\r\n      //     true, // enableSelect\r\n      //     this.fileFilter, // fileFilter\r\n      //     0, // folderDepth\r\n      //     '', // metadataContentTypes\r\n      //     '', // subFolder\r\n\r\n\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { AdamConfig, AdamModeConfig } from '../../../../shared/models/adam/adam-config';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'hyperlink-library',\r\n  templateUrl: './hyperlink-library.component.html',\r\n  styleUrls: ['./hyperlink-library.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-dropzone', 'app-eav-localization-wrapper'],\r\n})\r\nexport class HyperlinkLibraryComponent implements Field, OnInit {\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  adamModeConfig: AdamModeConfig = {\r\n    usePortalRoot: false\r\n  };\r\n\r\n  get folderDepth() {\r\n    console.log('this.config.settings.FolderDepth', this.config.settings.FolderDepth);\r\n    return this.config.settings.FolderDepth || '';\r\n  }\r\n\r\n  get metadataContentTypes() {\r\n    return this.config.settings.MetadataContentTypes || '';\r\n  }\r\n\r\n  get allowAssetsInRoot() {\r\n    return this.config.settings.AllowAssetsInRoot || true;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.attachAdam();\r\n  }\r\n\r\n  private attachAdam() {\r\n    if (this.config.adam) {\r\n      // callbacks - functions called from adam\r\n      this.config.adam.updateCallback = (fileItem) => { };\r\n\r\n      // binding for dropzone\r\n      this.config.adam.afterUploadCallback = (fileItem) => { };\r\n\r\n      // return value from form\r\n      // this.config.adam.getValueCallback = () =>\r\n      this.config.adam.afterUploadCallback = (fileItem) => { };\r\n\r\n      console.log('HyperLibrary setConfig : ', Object.assign(new AdamConfig(), {\r\n        adamModeConfig: this.adamModeConfig,\r\n        allowAssetsInRoot: this.allowAssetsInRoot,\r\n        autoLoad: true,\r\n        enableSelect: false,\r\n        folderDepth: this.folderDepth,\r\n        metadataContentTypes: this.metadataContentTypes\r\n      }));\r\n      // set adam configuration (initial config)\r\n      this.config.adam.setConfig(Object.assign(new AdamConfig(), {\r\n        adamModeConfig: this.adamModeConfig,\r\n        allowAssetsInRoot: this.allowAssetsInRoot,\r\n        autoLoad: true,\r\n        enableSelect: false,\r\n        folderDepth: this.folderDepth,\r\n        metadataContentTypes: this.metadataContentTypes\r\n      }));\r\n\r\n      // this.config.adam.setConfig(\r\n      //   new AdamConfig(this.adamModeConfig,\r\n      //     this.allowAssetsInRoot,\r\n      //     true, // autoLoad\r\n      //     false, // enableSelect\r\n      //     '', // fileFilter\r\n      //     this.folderDepth,\r\n      //     this.metadataContentTypes,\r\n      //     '', // subFolder\r\n      //   )\r\n      // );\r\n    }\r\n  }\r\n}\r\n\r\n","export { StringDefaultComponent } from './string/string-default/string-default.component';\r\nexport { StringUrlPathComponent } from './string/string-url-path/string-url-path.component';\r\nexport { StringDropdownComponent } from './string/string-dropdown/string-dropdown.component';\r\nexport { StringDropdownQueryComponent } from './string/string-dropdown-query/string-dropdown-query.component';\r\nexport { StringFontIconPickerComponent } from './string/string-font-icon-picker/string-font-icon-picker.component';\r\nexport { BooleanDefaultComponent } from './boolean/boolean-default/boolean-default.component';\r\nexport { DatetimeDefaultComponent } from './datetime/datetime-default/datetime-default.component';\r\nexport { EmptyDefaultComponent } from './empty/empty-default/empty-default.component';\r\nexport { NumberDefaultComponent } from './number/number-default/number-default.component';\r\nexport { EntityDefaultComponent } from './entity/entity-default/entity-default.component';\r\nexport { HyperlinkDefaultComponent } from './hyperlink/hyperlink-default/hyperlink-default.component';\r\nexport { ExternalComponent } from './custom/external/external.component';\r\n","module.exports = \"\"","module.exports = \"<mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n  <input matInput type=\\\"number\\\" class=\\\"form-control material\\\" [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.label\\\"\\r\\n    [required]='config.required'>\\r\\n  <!-- [pattern]='decimal' [max]='max' [min]='min' -->\\r\\n  <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes && config.settings.Notes\\\">\\r\\n    {{config.settings.Notes}}\\r\\n  </mat-hint>\\r\\n  <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n</mat-form-field>\\r\\n\\r\\n<!-- :{ param: config.settings } -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'number-default',\r\n  templateUrl: './number-default.component.html',\r\n  styleUrls: ['./number-default.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class NumberDefaultComponent implements Field, OnInit {\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    // this.decimal = this.config.settings.Decimals ? `^[0-9]+(\\.[0-9]{1,${this.config.settings.Decimals}})?$` : null;\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"rowCount > 1; then textareaField else inputField\\\">\\r\\n</div>\\r\\n<ng-template #inputField>\\r\\n    <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n        <input matInput type=\\\"text\\\" [id]=\\\"id\\\" class=\\\"form-control material\\\" [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.label\\\"\\r\\n            [required]=\\\"config.required\\\">\\r\\n        <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n        <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n    </mat-form-field>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #textareaField>\\r\\n    <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n        <textarea matInput [rows]=\\\"rowCount\\\" type=\\\"text\\\" [id]=\\\"id\\\" class=\\\"form-control material\\\" [formControlName]=\\\"config.name\\\"\\r\\n            [placeholder]=\\\"config.label\\\" [required]=\\\"config.required\\\"></textarea>\\r\\n        <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n        <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n    </mat-form-field>\\r\\n</ng-template>\"","import { Component, ViewChild, Input, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-default',\r\n  templateUrl: './string-default.component.html',\r\n  styleUrls: ['./string-default.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class StringDefaultComponent implements Field {\r\n  @ViewChild('errorComponent', { read: ViewContainerRef }) errorComponent: ViewContainerRef;\r\n\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  get rowCount() {\r\n    return this.config.settings.RowCount ? this.config.settings.RowCount : 1;\r\n  }\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- <div *ngIf=\\\"config.rowCount > 1; then textareaField else inputField\\\"></div>\\r\\n\\r\\n<ng-template #inputField>\\r\\n  <input matInput [type]=\\\"type\\\" [id]=\\\"id\\\" class=\\\"form-control material\\\" [errorStateMatcher]=\\\"errorStateMatcher\\\" [formControl]=\\\"formControl\\\">\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #textareaField>\\r\\n  <textarea matInput [rows]=\\\"config.rowCount\\\" [type]=\\\"type\\\" [id]=\\\"id\\\" class=\\\"form-control material\\\" [errorStateMatcher]=\\\"errorStateMatcher\\\"\\r\\n    [formControl]=\\\"formControl\\\"></textarea>\\r\\n</ng-template> -->\"","import { Component, ViewChild } from '@angular/core';\r\nimport { MatInput } from '@angular/material';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-dropdown-query',\r\n  templateUrl: './string-dropdown-query.component.html',\r\n  styleUrls: ['./string-dropdown-query.component.css']\r\n})\r\nexport class StringDropdownQueryComponent {\r\n  @ViewChild(MatInput) matInput: MatInput;\r\n  // errorStateMatcher = new FormlyErrorStateMatcher(this);\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"freeTextMode; then inputField else selectField\\\"></div>\\r\\n\\r\\n<ng-template #selectField>\\r\\n  <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n    <mat-select placeholder=\\\"Favorite animal\\\" [formControlName]=\\\"config.name\\\" [required]='config.required' [placeholder]=\\\"config.placeholder\\\">\\r\\n      <mat-option>--</mat-option>\\r\\n      <mat-option *ngFor=\\\"let item of selectOptions\\\" [value]=\\\"item.value\\\">\\r\\n        {{item.label}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n    <a matSuffix *ngIf=\\\"config.settings.EnableTextEntry && config.settings.EnableTextEntry\\\" [class]=\\\"'input-group-addon icon-field-button icon-field-button-small' + (freeTextMode ? ' active' : '')\\\"\\r\\n      (click)=\\\"freeTextMode= !freeTextMode \\\">\\r\\n      <i *ngIf=\\\"!freeTextMode\\\" class=\\\"eav-icon-i-cursor\\\"></i>\\r\\n    </a>\\r\\n    <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n    <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n  </mat-form-field>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #inputField>\\r\\n  <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n    <input matInput *ngIf=\\\"freeTextMode\\\" type=\\\"text\\\" [id]=\\\"id\\\" class=\\\"form-control input-material material\\\" [required]='config.required'\\r\\n      [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.placeholder\\\">\\r\\n    <a matSuffix *ngIf=\\\"config.settings.EnableTextEntry && config.settings.EnableTextEntry\\\" [class]=\\\"'input-group-addon icon-field-button icon-field-button-small' + (freeTextMode ? ' active' : '')\\\"\\r\\n      (click)=\\\"freeTextMode = !freeTextMode \\\">\\r\\n      <i *ngIf=\\\"freeTextMode\\\" class=\\\"eav-icon-down-dir\\\"></i>\\r\\n    </a>\\r\\n    <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n    <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n  </mat-form-field>\\r\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-dropdown',\r\n  templateUrl: './string-dropdown.component.html',\r\n  styleUrls: ['./string-dropdown.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class StringDropdownComponent implements Field, OnInit {\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  freeTextMode = false;\r\n  selectOptions = [];\r\n\r\n  private _selectOptions: string[] = [];\r\n  private _oldOptions: string[] = [];\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    this.selectOptions = this.setOptionsFromDropdownValues();\r\n    console.log('this.config.settings.DropdownValues:', this.config.settings.DropdownValues);\r\n  }\r\n\r\n  /**\r\n  * Read settings Dropdown values\r\n  */\r\n  private setOptionsFromDropdownValues(): any {\r\n    let options = [];\r\n    if (this.config.settings.DropdownValues) {\r\n      const dropdownValues = this.config.settings.DropdownValues;\r\n      options = dropdownValues.replace(/\\r/g, '').split('\\n');\r\n      options = options.map(e => {\r\n        const s = e.split(':');\r\n        const maybeWantedEmptyVal = s[1];\r\n        const key = s.shift(); // take first, shrink the array\r\n        const val = s.join(':');\r\n        return {\r\n          label: key,\r\n          value: (val) ? val : key\r\n        };\r\n      });\r\n    }\r\n    return options;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n    <div matPrefix class=\\\"thumbnail-before-input icon-preview\\\">\\r\\n      <i class=\\\"glyphicon {{value}}\\\"></i>\\r\\n    </div>\\r\\n    <input matInput type=\\\"text\\\" class=\\\"form-control material\\\" [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.label\\\" [required]=\\\"config.required\\\"\\r\\n      [matAutocomplete]=\\\"auto\\\" (click)=\\\"update()\\\">\\r\\n    <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\">{{config.settings.Notes}}</mat-hint>\\r\\n    <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n    <mat-option *ngFor=\\\"let icn of filteredIcons | async\\\" [value]=\\\"icn.class\\\">\\r\\n      <a (click)=\\\"setIcon(icn.class, config.name)\\\">\\r\\n        <i class=\\\"{{config.settings.PreviewCss}} {{icn.class}}\\\"></i>\\r\\n        <span>{{icn.class}}</span>\\r\\n      </a>\\r\\n    </mat-option>\\r\\n  </mat-autocomplete>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { ScriptLoaderService, ScriptModel } from '../../../../shared/services/script.service';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { EavService } from '../../../../shared/services/eav.service';\r\nimport { EavConfiguration } from '../../../../shared/models/eav-configuration';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-font-icon-picker',\r\n  templateUrl: './string-font-icon-picker.component.html',\r\n  styleUrls: ['./string-font-icon-picker.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class StringFontIconPickerComponent implements Field, OnInit, OnDestroy {\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  icons = [];\r\n  // filteredIcons: Observable<{ rule: CSSStyleRule, class: string }>;\r\n  filteredIcons: Observable<any>;\r\n  private subscriptions: Subscription[] = [];\r\n  private eavConfig: EavConfiguration;\r\n\r\n  get files(): string {\r\n    return this.config.settings.Files ? this.config.settings.Files : '';\r\n  }\r\n\r\n  get prefix(): string {\r\n    return this.config.settings.CssPrefix ? this.config.settings.CssPrefix : '';\r\n  }\r\n\r\n  get previewCss(): string {\r\n    return this.config.settings.PreviewCss ? this.config.settings.PreviewCss : '';\r\n  }\r\n\r\n  get value() {\r\n    return this.group.controls[this.config.name].value;\r\n  }\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  constructor(private scriptLoaderService: ScriptLoaderService,\r\n    private validationMessagesService: ValidationMessagesService,\r\n    private eavService: EavService) {\r\n    this.eavConfig = this.eavService.getEavConfiguration();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadAdditionalResources(this.files);\r\n    this.filteredIcons = this.getFilteredIcons();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscriber => subscriber.unsubscribe());\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n\r\n  getIconClasses(className) {\r\n    const charcount = className.length, foundList = [], duplicateDetector = {};\r\n\r\n    if (!className) {\r\n      return foundList;\r\n    }\r\n\r\n    for (let ssSet = 0; ssSet < document.styleSheets.length; ssSet++) {\r\n      try {\r\n        const classes = (<CSSStyleSheet>document.styleSheets[ssSet]).rules || (<CSSStyleSheet>document.styleSheets[ssSet]).cssRules;\r\n        if (classes) {\r\n          for (let x = 0; x < classes.length; x++) {\r\n            if ((<CSSStyleRule>classes[x]).selectorText && (<CSSStyleRule>classes[x]).selectorText.substring(0, charcount) === className) {\r\n              // prevent duplicate-add...\r\n              const txt = (<CSSStyleRule>classes[x]).selectorText,\r\n                icnClass = txt.substring(0, txt.indexOf(':')).replace('.', '');\r\n              if (!duplicateDetector[icnClass]) {\r\n                foundList.push({ rule: classes[x], 'class': icnClass });\r\n                duplicateDetector[icnClass] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // try catch imortant because can't find CSSStyleSheet rules error\r\n        console.log('Icon picker CSSStyleSheet error: ', error);\r\n      }\r\n      //   }\r\n      // }\r\n    }\r\n    // this.icons$ = foundList;\r\n    // this.icons.push(...foundList);\r\n    return foundList;\r\n  }\r\n\r\n  loadAdditionalResources(files: string) {\r\n    // const mapped = files.replace('[App:Path]', appRoot)\r\n    // TODO: test this replace\r\n    const mapped = files.replace('[App:Path]', this.eavConfig.portalroot + this.eavConfig.approot)\r\n      .replace(/([\\w])\\/\\/([\\w])/g,   // match any double // but not if part of https or just \"//\" at the beginning\r\n        '$1/$2');\r\n    const fileList = mapped ? mapped.split('\\n') : [];\r\n\r\n    const scriptModelList: ScriptModel[] = [];\r\n    fileList.forEach((element, index) => {\r\n      const scriptModel: ScriptModel = {\r\n        name: element,\r\n        filePath: element,\r\n        loaded: false\r\n      };\r\n      scriptModelList.push(scriptModel);\r\n    });\r\n\r\n    this.scriptLoaderService.loadList(scriptModelList, 'css').subscribe(s => {\r\n      if (s !== null) {\r\n        this.icons = this.getIconClasses(this.prefix);\r\n      }\r\n    });\r\n  }\r\n\r\n  setIcon(iconClass: any, formControlName: string) {\r\n    this.group.patchValue({ [formControlName]: iconClass });\r\n  }\r\n\r\n  /**\r\n  *  with update on click trigger value change to open autocomplete\r\n  */\r\n  update() {\r\n    this.group.controls[this.config.name].patchValue(this.value);\r\n  }\r\n\r\n  private filterStates(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.icons.filter(icon => icon.class.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  private getFilteredIcons = () => {\r\n    return this.group.controls[this.config.name].valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(icon => icon ? this.filterStates(icon) : this.icons.slice())\r\n      );\r\n\r\n    // .map(state => state ? this.filterStates(state) : this.icons.slice());\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n    <!-- directive : only-simple-url-chars -->\\r\\n    <mat-form-field [formGroup]=\\\"group\\\" [style.width]=\\\"'100%'\\\">\\r\\n        <!-- (keyup)=\\\"clean(config.name, false)\\\" -->\\r\\n        <input matInput type=\\\"text\\\" class=\\\"form-control material\\\" [formControlName]=\\\"config.name\\\" (blur)=\\\"clean(config.name, true)\\\"\\r\\n            [placeholder]=\\\"config.label\\\" [required]='config.required'>\\r\\n        <mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes\\\"> {{config.settings.Notes}}</mat-hint>\\r\\n        <mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\\r\\n    </mat-form-field>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, AfterContentInit, AfterViewChecked, } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Helper } from '../../../../shared/helpers/helper';\r\nimport { Field } from '../../../../eav-dynamic-form/model/field';\r\nimport { FieldConfig } from '../../../../eav-dynamic-form/model/field-config';\r\nimport { InputType } from '../../../../eav-dynamic-form/decorators/input-type.decorator';\r\nimport { ValidationMessagesService } from '../../../validators/validation-messages-service';\r\nimport { Subscription } from 'rxjs';\r\nimport { FieldMaskService } from '../../../../shared/services/field-mask.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'string-url-path',\r\n  templateUrl: './string-url-path.component.html',\r\n  styleUrls: ['./string-url-path.component.css']\r\n})\r\n@InputType({\r\n  wrapper: ['app-eav-localization-wrapper'],\r\n})\r\nexport class StringUrlPathComponent implements Field, OnInit, OnDestroy {\r\n\r\n\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  enableSlashes = true;\r\n  private lastAutoCopy = '';\r\n  // private sourceMask: string;\r\n  private subscriptions: Subscription[] = [];\r\n  private fieldMaskService: FieldMaskService;\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  get autoGenerateMask(): string {\r\n    return this.config.settings.AutoGenerateMask || null;\r\n  }\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    const sourceMask = this.autoGenerateMask;\r\n    // this will contain the auto-resolve type (based on other contentType-field)\r\n    this.fieldMaskService = new FieldMaskService(sourceMask, null, this.preCleane, this.group.controls);\r\n\r\n    // set initial value\r\n    this.sourcesChangedTryToUpdate(this.fieldMaskService);\r\n\r\n    // get all mask field and subcribe to changes. On every change sourcesChangedTryToUpdate.\r\n    this.fieldMaskService.fieldList().forEach((e, i) => {\r\n      if (this.group.controls[e]) {\r\n        this.group.controls[e].valueChanges.subscribe((item) => {\r\n          this.sourcesChangedTryToUpdate(this.fieldMaskService);\r\n        });\r\n      }\r\n    });\r\n\r\n    // clean on value change\r\n    this.subscriptions.push(\r\n      this.group.controls[this.config.name].valueChanges.subscribe((item) => {\r\n        this.clean(this.config.name, false);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscriber => subscriber.unsubscribe());\r\n  }\r\n\r\n  /**\r\n   * Field-Mask handling\r\n   * @param fieldMaskService\r\n   */\r\n  private sourcesChangedTryToUpdate(fieldMaskService: FieldMaskService) {\r\n    const formControlValue = this.group.controls[this.config.name].value;\r\n    // don't do anything if the current field is not empty and doesn't have the last copy of the stripped value\r\n    if (formControlValue && formControlValue !== this.lastAutoCopy) {\r\n      return;\r\n    }\r\n\r\n    const orig = fieldMaskService.resolve();\r\n\r\n    const cleaned = Helper.stripNonUrlCharacters(orig, this.enableSlashes, true);\r\n    if (cleaned) {\r\n      this.lastAutoCopy = cleaned;\r\n      this.group.controls[this.config.name].patchValue(cleaned, { emitEvent: false });\r\n    }\r\n  }\r\n\r\n  private preCleane = (key, value) => {\r\n    return value.replace('/', '-').replace('\\\\', '-'); // this will remove slashes which could look like path-parts\r\n  }\r\n\r\n  clean(formControlName: string, trimEnd: boolean) {\r\n    const formControlValue = this.group.controls[formControlName].value;\r\n    const cleaned = Helper.stripNonUrlCharacters(formControlValue, this.enableSlashes, trimEnd);\r\n    if (formControlValue !== cleaned) {\r\n      this.group.controls[formControlName].patchValue(cleaned, { emitEvent: false });\r\n    }\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n\r\n  // TODO: add mask for other fields !!!\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-tab-group *ngIf=\\\"currentLanguage\\\" (selectedTabChange)=\\\"selectedTabChanged($event)\\\" [selectedIndex]=\\\"languages.indexOf(getLanguage(currentLanguage))\\\">\\r\\n  <mat-tab *ngFor=\\\"let language of languages\\\" [label]=\\\"language.name.substring(0, language.name.indexOf('(') > 0 ? language.name.indexOf('(') - 1 : 100 )\\\"></mat-tab>\\r\\n</mat-tab-group>\"","import { Component, Input } from '@angular/core';\r\nimport { MatTabChangeEvent } from '@angular/material';\r\n\r\nimport { Language } from '../../../shared/models/eav';\r\nimport { LanguageService } from '../../../shared/services/language.service';\r\n\r\n@Component({\r\n  selector: 'app-eav-language-switcher',\r\n  templateUrl: './eav-language-switcher.component.html',\r\n  styleUrls: ['./eav-language-switcher.component.css']\r\n})\r\nexport class EavLanguageSwitcherComponent {\r\n  @Input() languages: Language[];\r\n\r\n  @Input() currentLanguage: string;\r\n\r\n  constructor(private languageService: LanguageService) {\r\n    // this.currentLanguage$ = languageService.getCurrentLanguage();\r\n  }\r\n\r\n  /**\r\n   * on select tab changed update current language in store\r\n   * @param event\r\n   */\r\n  selectedTabChanged(tabChangeEvent: MatTabChangeEvent) {\r\n    const language: Language = this.getLanguageByName(tabChangeEvent.tab.textLabel);\r\n    this.languageService.updateCurrentLanguage(language.key);\r\n  }\r\n\r\n  private getLanguageByName = (name): Language => {\r\n    return this.languages.find(d => d.name.startsWith(name));\r\n  }\r\n\r\n  private getLanguage = (key): Language => {\r\n    return this.languages.find(d => d.key === key);\r\n  }\r\n}\r\n","import { FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Helper } from '../../shared/helpers/helper';\r\n\r\nexport class CustomValidators {\r\n\r\n  /**\r\n   * validate url chars\r\n   *\r\n   */\r\n  static onlySimpleUrlChars(allowPath: boolean, trimEnd: boolean): ValidationErrors {\r\n    return (control: FormControl): { [key: string]: any } => {\r\n      const cleanInputValue = Helper.stripNonUrlCharacters(control.value, allowPath, trimEnd);\r\n      return (cleanInputValue === control.value) ? null : { 'onlySimpleUrlChars': true };\r\n    };\r\n  }\r\n\r\n  // create a static method for your validation\r\n  static validateDecimals(decimals: number): ValidatorFn {\r\n    return (control: FormControl): { [key: string]: any } => {\r\n      // first check if the control has a value\r\n      if (control.value) {\r\n        // match the control value against the regular expression\r\n        const matches = control.value.toString().match(`^[0-9]+(\\.[0-9]{1,${decimals}})?$`);\r\n        // if there are not matches return an object, else return null.\r\n        return !matches ? { decimals: true } : null;\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { ValidatorFn, Validators } from '@angular/forms';\r\nimport { EavAttributesTranslated } from '../../shared/models/eav';\r\nimport { CustomValidators } from './custom-validators';\r\n\r\nexport class ValidationHelper {\r\n\r\n    /**\r\n    * TODO: see can i write this in module configuration ???\r\n    * @param inputType\r\n    */\r\n    public static setDefaultValidations(settings: EavAttributesTranslated): ValidatorFn[] {\r\n\r\n        const validation: ValidatorFn[] = [];\r\n\r\n        const required = settings.Required ? settings.Required : false;\r\n        if (required) {\r\n            validation.push(Validators.required);\r\n        }\r\n\r\n        // const pattern = settings.ValidationRegex ? settings.ValidationRegex : '';\r\n        // if (pattern) {\r\n        //     validation.push(Validators.pattern(pattern));\r\n        // }\r\n\r\n        const pattern = settings.ValidationRegExJavaScript ? settings.ValidationRegExJavaScript : '';\r\n        if (pattern) {\r\n            validation.push(Validators.pattern(pattern));\r\n        }\r\n\r\n        // this.decimal = this.config.settings.Decimals ? `^[0-9]+(\\.[0-9]{1,${this.config.settings.Decimals}})?$` : null;\r\n        // const patternDecimals = settings.Decimals ? `^[0-9]+(\\.[0-9]{1,${settings.Decimals}})?$` : '';\r\n        // if (patternDecimals) {\r\n        //     validation.push(Validators.pattern(patternDecimals));\r\n        // }\r\n\r\n        // const patternDecimals = settings.Decimals ? `^[0-9]+(\\.[0-9]{1,${settings.Decimals}})?$` : '';\r\n        if (settings.Decimals) {\r\n            validation.push(CustomValidators.validateDecimals(settings.Decimals));\r\n            console.log('settings validation: ', validation);\r\n        }\r\n\r\n        // TODO: See do we set this here or in control\r\n        const max = settings.Max ? settings.Max : 0;\r\n        if (max > 0) {\r\n            validation.push(Validators.max(max));\r\n        }\r\n\r\n        // TODO: See do we set this here or in control\r\n        const min = settings.Min ? settings.Min : 0;\r\n        if (min > 0) {\r\n            validation.push(Validators.min(min));\r\n        }\r\n\r\n        // if (inputType === InputTypesConstants.stringUrlPath) {\r\n        //   validation = [...['onlySimpleUrlChars']];\r\n        // }\r\n\r\n        return validation;\r\n    }\r\n}\r\n","import { FieldConfig } from '../../eav-dynamic-form/model/field-config';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidationMessagesService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // static onlySimpleUrlCharsValidatorMessage(err, field: FormlyFieldConfig) {\r\n  //   return `\"${field.formControl.value}\" is not a valid URL`;\r\n  // }\r\n\r\n  // static requiredMessage(config) {\r\n  //   return `You must enter a value`;\r\n  // }\r\n\r\n  // static minlengthValidationMessage(err, field) {\r\n  //   return `Should have atleast ${field.templateOptions.minLength} characters`;\r\n  // }\r\n\r\n  // static maxlengthValidationMessage(err, field) {\r\n  //   return `This value should be less than ${field.settings.templateOptions.maxLength} characters`;\r\n  // }\r\n\r\n  // static minValidationMessage(err, field) {\r\n  //   return `This value should be more than ${field.templateOptions.min}`;\r\n  // }\r\n\r\n  // static maxValidationMessage(err, field) {\r\n  //   return `This value should be less than ${field.templateOptions.max}`;\r\n  // }\r\n\r\n  // static patternValidationMessage(err, field) {\r\n  //   return `\"${field.formControl.value}\" is not a valid`;\r\n  // }\r\n\r\n  // return list of error messages\r\n  public validationMessages() {\r\n    // this.translateService.get('ValidationMessage').subscribe(trans => {\r\n\r\n    //   this.messages['required'] = trans.Required;\r\n    //   // console.log('VALIDATION MESSAGES:', data)\r\n    // });\r\n\r\n    const messages = {\r\n      required: (config: FieldConfig) => {\r\n        return config ? 'ValidationMessage.Required' : `ValidationMessage.RequiredShort`;\r\n      },\r\n      // minLength: (config: FieldConfig) => {\r\n      //   return `Should have atleast ${config.settings.MinLength} characters`;\r\n      // },\r\n      // maxLength: (config: FieldConfig) => {\r\n      //   return `This value should be less than ${config.settings.MaxLength} characters`;\r\n      // },\r\n      min: (config: FieldConfig) => {\r\n        // return config ? `This value should be more than ${config.settings.Min}` : `ValidationMessage.NotValid`;\r\n        return config ? `ValidationMessage.Min` : `ValidationMessage.NotValid`;\r\n      },\r\n      max: (config: FieldConfig) => {\r\n        return config ? `ValidationMessage.Max` : `ValidationMessage.NotValid`;\r\n      },\r\n      pattern: (config: FieldConfig) => {\r\n        return config ? `ValidationMessage.Pattern` : `ValidationMessage.NotValid`;\r\n      },\r\n      decimals: (config: FieldConfig) => {\r\n        return config ? `ValidationMessage.Decimals` : `ValidationMessage.NotValid`;\r\n      },\r\n    };\r\n\r\n    return messages;\r\n  }\r\n\r\n  // Validate form instance\r\n  // check_dirty true will only emit errors if the field is touched\r\n  // check_dirty false will check all fields independent of\r\n  // being touched or not. Use this as the last check before submitting\r\n  public validateForm(formToValidate: FormGroup, checkDirty?: boolean) {\r\n    const form = formToValidate;\r\n    const formErrors = {};\r\n    Object.keys(form.controls).forEach(key => {\r\n      // for (const control in form.controls) {\r\n      const control = form.controls[key];\r\n      if (control) {\r\n        // const control = form.get(field);\r\n        const messages = this.validationMessages();\r\n        if (control && control.invalid) {\r\n          if (!checkDirty || (control.dirty || control.touched)) {\r\n            Object.keys(control.errors).forEach(keyError => {\r\n              console.log('error key', keyError);\r\n              formErrors[key] = formErrors[key] || messages[keyError](undefined);\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return formErrors;\r\n  }\r\n\r\n  /**\r\n   * get validation error for control\r\n   * @param control\r\n   */\r\n  public getErrorMessage(control: AbstractControl, config: FieldConfig, touched?: boolean): string {\r\n    let formError = '';\r\n    if (control) {\r\n      const messages = this.validationMessages();\r\n      if (control && control.invalid) {\r\n        if ((control.dirty || control.touched) || touched) {\r\n          Object.keys(control.errors).forEach(key => {\r\n            if (messages[key]) {\r\n              formError = messages[key](config);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return formError;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n    <div class=\\\"form-ci-subtitle unhide-area\\\" (click)=\\\"config.collapse = !config.collapse\\\">\\r\\n        <span style=\\\"position: relative\\\">\\r\\n            <i class=\\\"eav-icon-side-marker\\\"></i>\\r\\n            <i *ngIf=\\\"config.collapse\\\" class=\\\"eav-icon-minus\\\"></i>\\r\\n            <i *ngIf=\\\"!config.collapse\\\" class=\\\"eav-icon-plus\\\"></i>\\r\\n        </span>\\r\\n        {{config.label ? config.label : 'EditEntity.DefaultTitle' | translate }}\\r\\n    </div>\\r\\n    <div [hidden]=\\\"config.collapse\\\">\\r\\n        <div [innerHtml]='notes'></div>\\r\\n\\r\\n        <ng-container #fieldComponent></ng-container>\\r\\n    </div>\\r\\n</div>\"","import { Component, ViewChild, ViewContainerRef, Input } from '@angular/core';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\n\r\n@Component({\r\n  selector: 'app-collapsible-wrapper',\r\n  templateUrl: './collapsible-wrapper.component.html',\r\n  styleUrls: ['./collapsible-wrapper.component.css']\r\n})\r\nexport class CollapsibleWrapperComponent implements FieldWrapper {\r\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  @Input() config;\r\n\r\n  get notes() {\r\n    return this.config.settings ? (this.config.settings.Notes || '') : '';\r\n  }\r\n}\r\n","module.exports = \".language-field {\\r\\n    float: left;\\r\\n    width: 100%;\\r\\n    min-height: 40px;\\r\\n}\\r\\n\\r\\n .eav-localization-lock {\\r\\n    position: absolute;\\r\\n    top: -5px;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n    width: auto;\\r\\n }\\r\\n\\r\\n .eav-localization-lock-open { \\r\\n     color: #228b22; \\r\\n}\\r\\n\\r\\n .language-icon {\\r\\n   /* margin-top: 12px; */\\r\\n    font-size: 12px;\\r\\n }\\r\\n\\r\\n .language-wrap {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\"","module.exports = \"<div class=\\\"language-wrap\\\">\\r\\n  <div class=\\\"language-field\\\" (dblclick)=\\\"toggleTranslate(currentLanguage !== defaultLanguage)\\\">\\r\\n    <ng-container #fieldComponent></ng-container>\\r\\n  </div>\\r\\n  <button *ngIf=\\\"(currentLanguage !== defaultLanguage)\\\" class=\\\"eav-localization-lock\\\" [ngClass]=\\\"{ 'eav-localization-lock-open': !inputDisabled }\\\"\\r\\n    mat-icon-button type=\\\"button\\\" [matMenuTriggerFor]=\\\"rootMenu\\\">\\r\\n    {{ infoMessageLabel ? (infoMessageLabel | translate:{ languages: infoMessage }) : '' }}\\r\\n    <mat-icon class=\\\"mat-18 language-icon\\\">language</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #rootMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"true\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" (click)=\\\"translateUnlink(config.name)\\\">{{ 'LangMenu.Unlink'| translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" (click)=\\\"linkToDefault(config.name)\\\">{{ 'LangMenu.LinkDefault' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" [matMenuTriggerFor]=\\\"copyFromMenu\\\">{{ 'LangMenu.Copy' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" [matMenuTriggerFor]=\\\"useFromMenu\\\">{{ 'LangMenu.Use' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" [matMenuTriggerFor]=\\\"shareWithMenu\\\">{{ 'LangMenu.Share' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" [matMenuTriggerFor]=\\\"allFieldsMenu\\\">{{ 'LangMenu.AllFields' | translate }}</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #copyFromMenu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" *ngFor=\\\"let language of languages\\\" (click)=\\\"onClickCopyFrom(language.key, config.name)\\\"\\r\\n      [title]=\\\"language.name\\\">{{language.key}}</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #useFromMenu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" *ngFor=\\\"let language of languages\\\" (click)=\\\"onClickUseFrom(language.key, config.name)\\\"\\r\\n      [disabled]=\\\"!hasLanguage(language.key)\\\" [title]=\\\"language.name\\\">{{language.key}}</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #shareWithMenu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" *ngFor=\\\"let language of languages\\\" (click)=\\\"onClickShareWith(language.key, config.name)\\\"\\r\\n      [disabled]=\\\"!hasLanguage(language.key)\\\" [title]=\\\"language.name\\\">{{language.key}}</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #allFieldsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" (click)=\\\"translateUnlinkAll()\\\">{{ 'LangMenu.Unlink' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" (click)=\\\"linkToDefaultAll()\\\">{{ 'LangMenu.LinkDefault' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" [matMenuTriggerFor]=\\\"copyFromAllMenu\\\">{{ 'LangMenu.Copy' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" [matMenuTriggerFor]=\\\"useFromAllMenu\\\">{{ 'LangMenu.Use' | translate }}</button>\\r\\n    <button mat-menu-item type=\\\"button\\\" [matMenuTriggerFor]=\\\"shareWithAllMenu\\\">{{ 'LangMenu.Share' | translate }}</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #copyFromAllMenu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" *ngFor=\\\"let language of languages\\\" (click)=\\\"onClickCopyFromAll(language.key)\\\" [title]=\\\"language.name\\\">{{language.key}}</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #useFromAllMenu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" *ngFor=\\\"let language of languages\\\" (click)=\\\"onClickUseFromAll(language.key)\\\" [title]=\\\"language.name\\\">{{language.key}}</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-menu #shareWithAllMenu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item type=\\\"button\\\" *ngFor=\\\"let language of languages\\\" (click)=\\\"onClickShareWithAll(language.key)\\\" [title]=\\\"language.name\\\">{{language.key}}</button>\\r\\n  </mat-menu>\\r\\n</div>\"","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { FieldConfig } from '../../../eav-dynamic-form/model/field-config';\r\nimport {\r\n  EavAttributes,\r\n  EavDimensions,\r\n  EavValue,\r\n  EavValues,\r\n  Language\r\n} from '../../../shared/models/eav';\r\nimport { LanguageService } from '../../../shared/services/language.service';\r\nimport { ItemService } from '../../../shared/services/item.service';\r\nimport { LocalizationHelper } from '../../../shared/helpers/localization-helper';\r\nimport { ValidationHelper } from '../../validators/validation-helper';\r\n\r\n@Component({\r\n  selector: 'app-eav-localization-wrapper',\r\n  templateUrl: './eav-localization-wrapper.component.html',\r\n  styleUrls: ['./eav-localization-wrapper.component.css']\r\n})\r\nexport class EavLocalizationComponent implements FieldWrapper, OnInit, OnDestroy {\r\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n  @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\r\n\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  attributes$: Observable<EavAttributes>;\r\n  attributes: EavAttributes;\r\n  currentLanguage$: Observable<string>;\r\n  currentLanguage = '';\r\n  defaultLanguage$: Observable<string>;\r\n  defaultLanguage = '';\r\n  languages$: Observable<Language[]>;\r\n  languages: Language[];\r\n  infoMessage = '';\r\n  infoMessageLabel = '';\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(private languageService: LanguageService,\r\n    private itemService: ItemService) {\r\n    this.currentLanguage$ = this.languageService.getCurrentLanguage();\r\n    this.defaultLanguage$ = this.languageService.getDefaultLanguage();\r\n  }\r\n\r\n  get inputDisabled() {\r\n    return this.group.controls[this.config.name].disabled;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.attributes$ = this.itemService.selectAttributesByEntityId(this.config.entityId);\r\n\r\n    this.subscribeToAttributeValues();\r\n    this.subscribeMenuChange();\r\n    // subscribe to language data\r\n    this.subscribeToCurrentLanguageFromStore();\r\n    this.subscribeToDefaultLanguageFromStore();\r\n\r\n    this.loadlanguagesFromStore();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(subscriber => subscriber.unsubscribe());\r\n  }\r\n\r\n  toggleTranslate(isToggleEnabled: boolean) {\r\n    if (isToggleEnabled) {\r\n      if (this.group.controls[this.config.name].disabled) {\r\n        this.translateUnlink(this.config.name);\r\n      } else {\r\n        this.linkToDefault(this.config.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  translateUnlink(attributeKey: string) {\r\n    this.itemService.removeItemAttributeDimension(this.config.entityId, attributeKey, this.currentLanguage);\r\n\r\n    const defaultValue: EavValue<any> = LocalizationHelper.getAttributeValueTranslation(\r\n      this.attributes[attributeKey],\r\n      this.defaultLanguage,\r\n      this.defaultLanguage\r\n    );\r\n\r\n    if (defaultValue) {\r\n      this.itemService.addAttributeValue(this.config.entityId, attributeKey, this.attributes[attributeKey],\r\n        defaultValue.value, this.currentLanguage, false);\r\n    } else {\r\n      console.log(this.currentLanguage + ': Cant copy value from ' + this.defaultLanguage + ' because that value does not exist.');\r\n    }\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  linkToDefault(attributeKey: string) {\r\n    this.itemService.removeItemAttributeDimension(this.config.entityId, attributeKey, this.currentLanguage);\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  /**\r\n   * Copy value where language is copyFromLanguageKey to value where language is current language\r\n   * If value of current language don't exist then add new value\r\n   * @param copyFromLanguageKey\r\n   */\r\n  onClickCopyFrom(copyFromLanguageKey: string, attributeKey: string) {\r\n    const attributeValueTranslation: EavValue<any> = LocalizationHelper.getAttributeValueTranslation(\r\n      this.attributes[attributeKey],\r\n      copyFromLanguageKey,\r\n      this.defaultLanguage\r\n    );\r\n\r\n    if (attributeValueTranslation) {\r\n      const valueAlreadyExist: boolean = LocalizationHelper.isEditableOrReadonlyTranslationExist(\r\n        this.attributes[attributeKey],\r\n        this.currentLanguage,\r\n        this.defaultLanguage\r\n      );\r\n\r\n      if (valueAlreadyExist) {\r\n        // Copy attribute value where language is languageKey to value where language is current language\r\n        this.itemService.updateItemAttributeValue(this.config.entityId, attributeKey,\r\n          attributeValueTranslation.value, this.currentLanguage, this.defaultLanguage, false);\r\n      } else {\r\n        // Copy attribute value where language is languageKey to new attribute with current language\r\n        this.itemService.addAttributeValue(this.config.entityId, attributeKey, this.attributes[attributeKey],\r\n          attributeValueTranslation.value, this.currentLanguage, false);\r\n      }\r\n    } else {\r\n      console.log(this.currentLanguage + ': Cant copy value from ' + copyFromLanguageKey + ' because that value does not exist.');\r\n    }\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  onClickUseFrom(languageKey: string, attributeKey: string) {\r\n    this.itemService.removeItemAttributeDimension(this.config.entityId, attributeKey, this.currentLanguage);\r\n    this.itemService.addItemAttributeDimension(this.config.entityId, attributeKey, this.currentLanguage,\r\n      languageKey, this.defaultLanguage, true);\r\n\r\n    // TODO: investigate can only triger current language change to disable controls ???\r\n    // this.languageService.updateCurrentLanguage(this.currentLanguage);\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  onClickShareWith(languageKey: string, attributeKey: string) {\r\n    this.itemService.removeItemAttributeDimension(this.config.entityId, attributeKey, this.currentLanguage);\r\n    this.itemService.addItemAttributeDimension(this.config.entityId, attributeKey, this.currentLanguage,\r\n      languageKey, this.defaultLanguage, false);\r\n\r\n    this.refreshControlConfig(attributeKey);\r\n  }\r\n\r\n  translateUnlinkAll() {\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.translateUnlink(attributeKey);\r\n    });\r\n\r\n    this.languageService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  linkToDefaultAll() {\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.linkToDefault(attributeKey);\r\n    });\r\n    this.languageService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  onClickCopyFromAll(languageKey) {\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.onClickCopyFrom(languageKey, attributeKey);\r\n    });\r\n\r\n    this.languageService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  onClickUseFromAll(languageKey) {\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.onClickUseFrom(languageKey, attributeKey);\r\n    });\r\n\r\n    this.languageService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  onClickShareWithAll(languageKey) {\r\n    Object.keys(this.attributes).forEach(attributeKey => {\r\n      this.onClickShareWith(languageKey, attributeKey);\r\n    });\r\n\r\n    this.languageService.triggerLocalizationWrapperMenuChange();\r\n  }\r\n\r\n  hasLanguage = (languageKey) => {\r\n    return LocalizationHelper.isEditableOrReadonlyTranslationExist(this.attributes[this.config.name], languageKey, this.defaultLanguage);\r\n  }\r\n\r\n  openMenu() {\r\n    this.trigger.openMenu();\r\n  }\r\n\r\n  closeMenu() {\r\n    this.trigger.closeMenu();\r\n  }\r\n\r\n  private refreshControlConfig(attributeKey: string) {\r\n    this.setControlDisable(this.attributes[attributeKey], attributeKey, this.currentLanguage, this.defaultLanguage);\r\n    this.setAdamDisable();\r\n    this.setInfoMessage(this.attributes[this.config.name], this.currentLanguage, this.defaultLanguage);\r\n  }\r\n\r\n  /**\r\n   * Subscribe triggered when changing all in menu (forAllFields)\r\n   */\r\n  private subscribeMenuChange() {\r\n    this.subscriptions.push(\r\n      this.languageService.localizationWrapperMenuChange$.subscribe(s => {\r\n        this.setInfoMessage(this.attributes[this.config.name], this.currentLanguage, this.defaultLanguage);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Subscribe to item attribute values\r\n  */\r\n  private subscribeToAttributeValues() {\r\n    this.subscriptions.push(\r\n      this.attributes$.subscribe(attributes => {\r\n        this.attributes = attributes;\r\n      })\r\n    );\r\n  }\r\n\r\n  private subscribeToCurrentLanguageFromStore() {\r\n    this.subscriptions.push(\r\n      this.currentLanguage$.subscribe(currentLanguage => {\r\n        this.currentLanguage = currentLanguage;\r\n        this.translateAllConfiguration(this.currentLanguage);\r\n        this.refreshControlConfig(this.config.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  private subscribeToDefaultLanguageFromStore() {\r\n    this.subscriptions.push(\r\n      this.defaultLanguage$.subscribe(defaultLanguage => {\r\n        console.log('[create] read default language', defaultLanguage);\r\n        this.defaultLanguage = defaultLanguage;\r\n\r\n        this.translateAllConfiguration(this.currentLanguage);\r\n        this.setControlDisable(this.attributes[this.config.name], this.config.name, this.currentLanguage, this.defaultLanguage);\r\n        this.setAdamDisable();\r\n        this.setInfoMessage(this.attributes[this.config.name], this.currentLanguage, this.defaultLanguage);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load languages from store and subscribe to languages\r\n   */\r\n  private loadlanguagesFromStore() {\r\n    this.languages$ = this.languageService.selectAllLanguages();\r\n\r\n    this.subscriptions.push(\r\n      this.languages$.subscribe(languages => {\r\n        this.languages = languages;\r\n      })\r\n    );\r\n  }\r\n\r\n  private translateAllConfiguration(currentLanguage: string) {\r\n    this.config.settings = LocalizationHelper.translateSettings(this.config.fullSettings, this.currentLanguage, this.defaultLanguage);\r\n    this.config.label = this.config.settings.Name ? this.config.settings.Name : null;\r\n    this.config.validation = ValidationHelper.setDefaultValidations(this.config.settings);\r\n    this.config.required = this.config.settings.Required ? this.config.settings.Required : false;\r\n\r\n  }\r\n\r\n  /**\r\n   * Determine is control disabled or enabled\r\n   * @param attributes\r\n   * @param attributeKey\r\n   * @param currentLanguage\r\n   * @param defaultLanguage\r\n   */\r\n  private setControlDisable(attributes: EavValues<any>, attributeKey: string, currentLanguage: string, defaultLanguage: string) {\r\n    if (!this.config.disabled) {\r\n      if (LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage)) {\r\n        this.group.controls[attributeKey].enable({ emitEvent: false });\r\n      } else if (LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage)) {\r\n        this.group.controls[attributeKey].disable({ emitEvent: false });\r\n      } else {\r\n        this.group.controls[attributeKey].disable({ emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set info message\r\n   * @param attributes\r\n   * @param currentLanguage\r\n   * @param defaultLanguage\r\n   */\r\n  private setInfoMessage(attributes: EavValues<any>, currentLanguage: string, defaultLanguage: string) {\r\n    // Determine is control disabled or enabled and info message\r\n    if (LocalizationHelper.isEditableTranslationExist(attributes, currentLanguage, defaultLanguage)) {\r\n      this.infoMessage = '';\r\n      this.infoMessageLabel = '';\r\n    } else if (LocalizationHelper.isReadonlyTranslationExist(attributes, currentLanguage)) {\r\n      this.infoMessage = LocalizationHelper.getAttributeValueTranslation(attributes, currentLanguage, defaultLanguage)\r\n        .dimensions.map((d: EavDimensions<string>) => d.value.replace('~', ''))\r\n        .join(', ');\r\n      this.infoMessageLabel = 'LangMenu.In';\r\n    } else {\r\n      this.infoMessage = '';\r\n      this.infoMessageLabel = 'LangMenu.UseDefault';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change adam disable state\r\n   * @param attributeKey\r\n   */\r\n  private setAdamDisable() {\r\n    // set Adam disabled state\r\n    if (this.config.adam) {\r\n      this.config.adam.disabled = this.group.controls[this.config.name].disabled;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<ng-container #fieldComponent></ng-container>\\r\\n<mat-hint align=\\\"start\\\" *ngIf=\\\"config.settings.Notes && config.settings.Notes\\\">\\r\\n  {{config.settings.Notes}}\\r\\n</mat-hint>\\r\\n<mat-error *ngIf=\\\"inputInvalid\\\">{{ getErrorMessage() | translate:{ param: config.settings } }}</mat-error>\"","import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\nimport { FieldConfig } from '../../../eav-dynamic-form/model/field-config';\r\nimport { ValidationMessagesService } from '../../validators/validation-messages-service';\r\n\r\n@Component({\r\n  selector: 'app-error-wrapper',\r\n  templateUrl: './error-wrapper.component.html',\r\n  styleUrls: ['./error-wrapper.component.css']\r\n})\r\nexport class ErrorWrapperComponent implements FieldWrapper {\r\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  @Input() config: FieldConfig;\r\n  group: FormGroup;\r\n\r\n  constructor(private validationMessagesService: ValidationMessagesService) { }\r\n\r\n  get inputInvalid() {\r\n    return this.group.controls[this.config.name].invalid;\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return this.validationMessagesService.getErrorMessage(this.group.controls[this.config.name], this.config);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div [hidden]=\\\"!visibleInEditUI\\\">\\r\\n  <ng-container #fieldComponent></ng-container>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ViewContainerRef, Input } from '@angular/core';\r\nimport { FieldWrapper } from '../../../eav-dynamic-form/model/field-wrapper';\r\n\r\n@Component({\r\n  selector: 'app-hidden-wrapper',\r\n  templateUrl: './hidden-wrapper.component.html',\r\n  styleUrls: ['./hidden-wrapper.component.css']\r\n})\r\nexport class HiddenWrapperComponent implements FieldWrapper {\r\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n\r\n  @Input() config;\r\n\r\n  get visibleInEditUI() {\r\n\r\n    return (this.config.settings.VisibleInEditUI === false) ? false : true;\r\n  }\r\n\r\n}\r\n","export { CollapsibleWrapperComponent } from './collapsible-wrapper/collapsible-wrapper.component';\r\n// export { FormFieldWrapperComponent } from './form-field-wrapper/form-field-wrapper.component';\r\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"date-picker-wide-suffix-right\\\"> -->\\r\\n<ng-container #fieldComponent></ng-container>\\r\\n\\r\\n<!-- <div class=\\\"mat-form-field-suffix mat-form-field-suffix\\\"> -->\\r\\n<ng-template #matSuffix>\\r\\n  <a *ngIf=\\\"to.settings.EnableTextEntry && to.settings.EnableTextEntry\\\" [class]=\\\"'input-group-addon icon-field-button icon-field-button-small' + (to.freeTextMode ? ' active' : '')\\\"\\r\\n    (click)=\\\"to.freeTextMode=! to.freeTextMode \\\">\\r\\n    <mat-icon *ngIf=\\\"to.freeTextMode\\\" class=\\\"mat-24\\\">add</mat-icon>\\r\\n    <mat-icon *ngIf=\\\"!to.freeTextMode \\\" class=\\\"mat-24\\\">remove</mat-icon>\\r\\n  </a>\\r\\n</ng-template>\\r\\n<!-- </div>\\r\\n</div> -->\"","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-text-entry-wrapper',\r\n  templateUrl: './text-entry-wrapper.component.html',\r\n  styleUrls: ['./text-entry-wrapper.component.css']\r\n})\r\nexport class TextEntryWrapperComponent {\r\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\r\n}\r\n","export { InputTypesConstants } from './input-types-constants';\r\n","export class InputTypesConstants {\r\n    // string\r\n    public static readonly stringDefault: string = 'string-default';\r\n    public static readonly stringUrlPath: string = 'string-url-path';\r\n    public static readonly stringDropdown: string = 'string-dropdown';\r\n    public static readonly stringDropdownQuery: string = 'string-dropdown-query';\r\n    public static readonly stringFontIconPicker: string = 'string-font-icon-picker';\r\n    // boolean\r\n    public static readonly booleanDefault: string = 'boolean-default';\r\n    // datetime\r\n    public static readonly datetimeDefault: string = 'datetime-default';\r\n    // empty\r\n    public static readonly emptyDefault: string = 'empty-default';\r\n    // number\r\n    public static readonly numberDefault: string = 'number-default';\r\n    // entity\r\n    public static readonly entityDefault: string = 'entity-default';\r\n    // hyperlink/files\r\n    public static readonly hyperlinkDefault: string = 'hyperlink-default';\r\n    // hyperlink library\r\n    public static readonly hyperlinkLibrary: string = 'hyperlink-library';\r\n    // custom/files\r\n    public static readonly external: string = 'external';\r\n}\r\n","export class FileTypeConstants {\r\n    // string\r\n    public static readonly css: string = 'css';\r\n    public static readonly javaScript: string = 'js';\r\n}\r\n\r\nexport class DialogTypeConstants {\r\n    // string\r\n    public static readonly itemEditWithEntityId: string = 'itemEditWithEntityId';\r\n    public static readonly itemEditWithContent: string = 'itemEditWithContent';\r\n}\r\n","export class UrlConstants {\r\n\r\n    public static readonly apiRoot: string = '/desktopmodules/2sxc/api/';\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appClickStopPropagation]'\r\n})\r\nexport class ClickStopPropagationDirective {\r\n    @HostListener('click', ['$event'])\r\n    public onClick(event: any): void {\r\n        event.stopPropagation();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { ContentTypeService } from '../services/content-type.service';\r\nimport * as contentTypeActions from '../store/actions/content-type.actions';\r\n\r\nimport * as fromContentType from '../store/actions/content-type.actions';\r\n\r\n@Injectable()\r\nexport class ContentTypeEffects {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private contentTypeService: ContentTypeService\r\n    ) { }\r\n\r\n    /**\r\n     * Efect on Action (LOAD_EAV_CONTENTTYPES) load ContentType and sent it to store with action LoadContentTypesSuccessAction\r\n     */\r\n    @Effect() loadContentType$ = this.actions$\r\n        .ofType(contentTypeActions.LOAD_CONTENT_TYPE)\r\n        .pipe(switchMap((action: fromContentType.LoadContentTypeAction) => {\r\n            return this.contentTypeService.getContentTypeFromJsonContentType1(action.path)\r\n                .pipe(map(contentType => new contentTypeActions.LoadContentTypeSuccessAction(contentType)));\r\n        }));\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions } from '@ngrx/effects';\r\n\r\nimport { EavService } from '../services/eav.service';\r\n// import * as itemActions from '../store/actions/item.actions';\r\n\r\n@Injectable()\r\nexport class EavEffects {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private eavService: EavService\r\n    ) { }\r\n\r\n    // @Effect() saveItem$ = this.actions$\r\n    //     .ofType(fromItems.SAVE_ITEM_ATTRIBUTES_VALUES)\r\n    //     .switchMap((action: fromItems.SaveItemAttributesValuesAction) => {\r\n    //         console.log('SAVE_ITEM_ATTRIBUTES_VALUES EFFECT');\r\n    //         return this.eavService.submit(action.appId)\r\n    //             .map(data => new fromItems.SaveItemAttributesValuesSuccessAction(data));\r\n    //     })\r\n    //     .catch(err => (of(new fromItems.SaveItemAttributesValuesErrorAction(err))));\r\n\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport * as fromItems from '../store/actions/item.actions';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { ItemService } from '../services/item.service';\r\nimport * as itemActions from '../store/actions/item.actions';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ItemEffects {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private itemService: ItemService\r\n    ) { }\r\n\r\n    /**\r\n     * Efect on Action (LOAD_EAV_ITEMS) load EavItem and sent it to store with action LoadEavItemsSuccessAction\r\n     */\r\n    @Effect() loadItem$ = this.actions$\r\n        .ofType(itemActions.LOAD_ITEM)\r\n        .pipe(switchMap((action: fromItems.LoadItemAction) => {\r\n            return this.itemService.getItemFromJsonItem1(action.path)\r\n                .pipe(map(item => new itemActions.LoadItemSuccessAction(item)));\r\n        }));\r\n\r\n\r\n    // @Effect() saveItem$ = this.actions$\r\n    //     .ofType(itemActions.SAVE_ITEM_ATTRIBUTES_VALUES)\r\n    //     .switchMap((action: fromItems.SaveItemAttributesValuesAction) => {\r\n    //         return this.itemService.submit(action.id)\r\n    //             .map(item => new itemActions.SaveItemAttributesValuesSuccessAction(item));\r\n    //     })\r\n    //     .catch(err => (Observable.of(new itemActions.SaveItemAttributesValuesErrorAction(err))));\r\n\r\n}\r\n\r\n","export class Helper {\r\n\r\n    /**\r\n     * this is a helper which cleans up the url and is used in various places\r\n     *\r\n     */\r\n    static stripNonUrlCharacters(controlValue: string, allowPath: boolean, trimEnd: boolean) {\r\n        if (!controlValue) {\r\n            return '';\r\n        }\r\n        const rexSeparators = allowPath ? /[^a-z0-9-_/]+/gi : /[^a-z0-9-_]+/gi;\r\n        const latinized = this.latinizeText(controlValue.toLowerCase());\r\n        const cleanInputValue = latinized\r\n            .replace(`'s `, 's ') // neutralize it's, daniel's etc. but only if followed by a space, to ensure we don't kill quotes\r\n            .replace('\\\\', '/') // neutralize slash representation\r\n            .replace(rexSeparators, '-') // replace everything we don't want with a -\r\n            .replace(/-+/gi, '-') // reduce multiple '-'\r\n            .replace(/\\/+/gi, '/') // reduce multiple slashes\r\n            .replace(/-*\\/-*/gi, '/') // reduce '-/' or '/-' combinations to a simple '/'\r\n            .replace(trimEnd ? /^-|-+$/gi : /^-/gi, ''); // trim front and maybe end '-'\r\n        return cleanInputValue;\r\n    }\r\n\r\n    /**\r\n     * latinize text input\r\n     * @param input\r\n     */\r\n    static latinizeText(input) {\r\n        const latinMap = {\r\n            'Á': 'A', 'Ă': 'A', 'Ắ': 'A', 'Ặ': 'A', 'Ằ': 'A', 'Ẳ': 'A', 'Ẵ': 'A', 'Ǎ': 'A', 'Â': 'A', 'Ấ': 'A', 'Ậ': 'A',\r\n            'Ầ': 'A', 'Ẩ': 'A', 'Ẫ': 'A', 'Ä': 'Ae', 'Ǟ': 'A', 'Ȧ': 'A', 'Ǡ': 'A', 'Ạ': 'A', 'Ȁ': 'A', 'À': 'A', 'Ả': 'A', 'Ȃ': 'A',\r\n            'Ā': 'A', 'Ą': 'A', 'Å': 'A', 'Ǻ': 'A', 'Ḁ': 'A', 'Ⱥ': 'A', 'Ã': 'A', 'Ꜳ': 'AA', 'Æ': 'AE', 'Ǽ': 'AE', 'Ǣ': 'AE',\r\n            'Ꜵ': 'AO', 'Ꜷ': 'AU', 'Ꜹ': 'AV', 'Ꜻ': 'AV', 'Ꜽ': 'AY', 'Ḃ': 'B', 'Ḅ': 'B', 'Ɓ': 'B', 'Ḇ': 'B', 'Ƀ': 'B',\r\n            'Ƃ': 'B', 'Ć': 'C', 'Č': 'C', 'Ç': 'C', 'Ḉ': 'C', 'Ĉ': 'C', 'Ċ': 'C', 'Ƈ': 'C', 'Ȼ': 'C', 'Ď': 'D', 'Ḑ': 'D',\r\n            'Ḓ': 'D', 'Ḋ': 'D', 'Ḍ': 'D', 'Ɗ': 'D', 'Ḏ': 'D', 'ǲ': 'D', 'ǅ': 'D', 'Đ': 'D', 'Ƌ': 'D', 'Ǳ': 'DZ', 'Ǆ': 'DZ',\r\n            'É': 'E', 'Ĕ': 'E', 'Ě': 'E', 'Ȩ': 'E', 'Ḝ': 'E', 'Ê': 'E', 'Ế': 'E', 'Ệ': 'E', 'Ề': 'E', 'Ể': 'E', 'Ễ': 'E', 'Ḙ': 'E',\r\n            'Ë': 'E', 'Ė': 'E', 'Ẹ': 'E', 'Ȅ': 'E', 'È': 'E', 'Ẻ': 'E', 'Ȇ': 'E', 'Ē': 'E', 'Ḗ': 'E', 'Ḕ': 'E', 'Ę': 'E', 'Ɇ': 'E',\r\n            'Ẽ': 'E', 'Ḛ': 'E', 'Ꝫ': 'ET', 'Ḟ': 'F', 'Ƒ': 'F', 'Ǵ': 'G', 'Ğ': 'G', 'Ǧ': 'G', 'Ģ': 'G', 'Ĝ': 'G', 'Ġ': 'G', 'Ɠ': 'G',\r\n            'Ḡ': 'G', 'Ǥ': 'G', 'Ḫ': 'H', 'Ȟ': 'H', 'Ḩ': 'H', 'Ĥ': 'H', 'Ⱨ': 'H', 'Ḧ': 'H', 'Ḣ': 'H', 'Ḥ': 'H', 'Ħ': 'H', 'Í': 'I',\r\n            'Ĭ': 'I', 'Ǐ': 'I', 'Î': 'I', 'Ï': 'I', 'Ḯ': 'I', 'İ': 'I', 'Ị': 'I', 'Ȉ': 'I', 'Ì': 'I', 'Ỉ': 'I', 'Ȋ': 'I', 'Ī': 'I',\r\n            'Į': 'I', 'Ɨ': 'I', 'Ĩ': 'I', 'Ḭ': 'I', 'Ꝺ': 'D', 'Ꝼ': 'F', 'Ᵹ': 'G', 'Ꞃ': 'R', 'Ꞅ': 'S', 'Ꞇ': 'T', 'Ꝭ': 'IS', 'Ĵ': 'J',\r\n            'Ɉ': 'J', 'Ḱ': 'K', 'Ǩ': 'K', 'Ķ': 'K', 'Ⱪ': 'K', 'Ꝃ': 'K', 'Ḳ': 'K', 'Ƙ': 'K', 'Ḵ': 'K', 'Ꝁ': 'K', 'Ꝅ': 'K', 'Ĺ': 'L',\r\n            'Ƚ': 'L', 'Ľ': 'L', 'Ļ': 'L', 'Ḽ': 'L', 'Ḷ': 'L', 'Ḹ': 'L', 'Ⱡ': 'L', 'Ꝉ': 'L', 'Ḻ': 'L', 'Ŀ': 'L', 'Ɫ': 'L', 'ǈ': 'L',\r\n            'Ł': 'L', 'Ǉ': 'LJ', 'Ḿ': 'M', 'Ṁ': 'M', 'Ṃ': 'M', 'Ɱ': 'M', 'Ń': 'N', 'Ň': 'N', 'Ņ': 'N', 'Ṋ': 'N', 'Ṅ': 'N', 'Ṇ': 'N',\r\n            'Ǹ': 'N', 'Ɲ': 'N', 'Ṉ': 'N', 'Ƞ': 'N', 'ǋ': 'N', 'Ñ': 'N', 'Ǌ': 'NJ', 'Ó': 'O', 'Ŏ': 'O', 'Ǒ': 'O', 'Ô': 'O', 'Ố': 'O',\r\n            'Ộ': 'O', 'Ồ': 'O', 'Ổ': 'O', 'Ỗ': 'O', 'Öe': 'O', 'Ȫ': 'O', 'Ȯ': 'O', 'Ȱ': 'O', 'Ọ': 'O', 'Ő': 'O', 'Ȍ': 'O', 'Ò': 'O',\r\n            'Ỏ': 'O', 'Ơ': 'O', 'Ớ': 'O', 'Ợ': 'O', 'Ờ': 'O', 'Ở': 'O', 'Ỡ': 'O', 'Ȏ': 'O', 'Ꝋ': 'O', 'Ꝍ': 'O', 'Ō': 'O', 'Ṓ': 'O',\r\n            'Ṑ': 'O', 'Ɵ': 'O', 'Ǫ': 'O', 'Ǭ': 'O', 'Ø': 'O', 'Ǿ': 'O', 'Õ': 'O', 'Ṍ': 'O', 'Ṏ': 'O', 'Ȭ': 'O', 'Ƣ': 'OI', 'Ꝏ': 'OO',\r\n            'Ɛ': 'E', 'Ɔ': 'O', 'Ȣ': 'OU', 'Ṕ': 'P', 'Ṗ': 'P', 'Ꝓ': 'P', 'Ƥ': 'P', 'Ꝕ': 'P', 'Ᵽ': 'P', 'Ꝑ': 'P', 'Ꝙ': 'Q', 'Ꝗ': 'Q',\r\n            'Ŕ': 'R', 'Ř': 'R', 'Ŗ': 'R', 'Ṙ': 'R', 'Ṛ': 'R', 'Ṝ': 'R', 'Ȑ': 'R', 'Ȓ': 'R', 'Ṟ': 'R', 'Ɍ': 'R', 'Ɽ': 'R', 'Ꜿ': 'C',\r\n            'Ǝ': 'E', 'Ś': 'S', 'Ṥ': 'S', 'Š': 'S', 'Ṧ': 'S', 'Ş': 'S', 'Ŝ': 'S', 'Ș': 'S', 'Ṡ': 'S', 'Ṣ': 'S', 'Ṩ': 'S', 'Ť': 'T',\r\n            'Ţ': 'T', 'Ṱ': 'T', 'Ț': 'T', 'Ⱦ': 'T', 'Ṫ': 'T', 'Ṭ': 'T', 'Ƭ': 'T', 'Ṯ': 'T', 'Ʈ': 'T', 'Ŧ': 'T', 'Ɐ': 'A', 'Ꞁ': 'L',\r\n            'Ɯ': 'M', 'Ʌ': 'V', 'Ꜩ': 'TZ', 'Ú': 'U', 'Ŭ': 'U', 'Ǔ': 'U', 'Û': 'U', 'Ṷ': 'U', 'Ü': 'Ue', 'Ǘ': 'U', 'Ǚ': 'U', 'Ǜ': 'U',\r\n            'Ǖ': 'U', 'Ṳ': 'U', 'Ụ': 'U', 'Ű': 'U', 'Ȕ': 'U', 'Ù': 'U', 'Ủ': 'U', 'Ư': 'U', 'Ứ': 'U', 'Ự': 'U', 'Ừ': 'U', 'Ử': 'U',\r\n            'Ữ': 'U', 'Ȗ': 'U', 'Ū': 'U', 'Ṻ': 'U', 'Ų': 'U', 'Ů': 'U', 'Ũ': 'U', 'Ṹ': 'U', 'Ṵ': 'U', 'Ꝟ': 'V', 'Ṿ': 'V', 'Ʋ': 'V',\r\n            'Ṽ': 'V', 'Ꝡ': 'VY', 'Ẃ': 'W', 'Ŵ': 'W', 'Ẅ': 'W', 'Ẇ': 'W', 'Ẉ': 'W', 'Ẁ': 'W', 'Ⱳ': 'W', 'Ẍ': 'X', 'Ẋ': 'X', 'Ý': 'Y',\r\n            'Ŷ': 'Y', 'Ÿ': 'Y', 'Ẏ': 'Y', 'Ỵ': 'Y', 'Ỳ': 'Y', 'Ƴ': 'Y', 'Ỷ': 'Y', 'Ỿ': 'Y', 'Ȳ': 'Y', 'Ɏ': 'Y', 'Ỹ': 'Y', 'Ź': 'Z',\r\n            'Ž': 'Z', 'Ẑ': 'Z', 'Ⱬ': 'Z', 'Ż': 'Z', 'Ẓ': 'Z', 'Ȥ': 'Z', 'Ẕ': 'Z', 'Ƶ': 'Z', 'Ĳ': 'IJ', 'Œ': 'OE', 'ᴀ': 'A', 'ᴁ': 'AE',\r\n            'ʙ': 'B', 'ᴃ': 'B', 'ᴄ': 'C', 'ᴅ': 'D', 'ᴇ': 'E', 'ꜰ': 'F', 'ɢ': 'G', 'ʛ': 'G', 'ʜ': 'H', 'ɪ': 'I', 'ʁ': 'R', 'ᴊ': 'J',\r\n            'ᴋ': 'K', 'ʟ': 'L', 'ᴌ': 'L', 'ᴍ': 'M', 'ɴ': 'N', 'ᴏ': 'O', 'ɶ': 'OE', 'ᴐ': 'O', 'ᴕ': 'OU', 'ᴘ': 'P', 'ʀ': 'R', 'ᴎ': 'N',\r\n            'ᴙ': 'R', 'ꜱ': 'S', 'ᴛ': 'T', 'ⱻ': 'E', 'ᴚ': 'R', 'ᴜ': 'U', 'ᴠ': 'V', 'ᴡ': 'W', 'ʏ': 'Y', 'ᴢ': 'Z', 'á': 'a', 'ă': 'a',\r\n            'ắ': 'a', 'ặ': 'a', 'ằ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ǎ': 'a', 'â': 'a', 'ấ': 'a', 'ậ': 'a', 'ầ': 'a', 'ẩ': 'a', 'ẫ': 'a',\r\n            'ä': 'ae', 'ǟ': 'a', 'ȧ': 'a', 'ǡ': 'a', 'ạ': 'a', 'ȁ': 'a', 'à': 'a', 'ả': 'a', 'ȃ': 'a', 'ā': 'a', 'ą': 'a', 'ᶏ': 'a',\r\n            'ẚ': 'a', 'å': 'a', 'ǻ': 'a',\r\n            'ḁ': 'a', 'ⱥ': 'a', 'ã': 'a', 'ꜳ': 'aa', 'æ': 'ae', 'ǽ': 'ae', 'ǣ': 'ae', 'ꜵ': 'ao', 'ꜷ': 'au', 'ꜹ': 'av', 'ꜻ': 'av',\r\n            'ꜽ': 'ay', 'ḃ': 'b', 'ḅ': 'b', 'ɓ': 'b', 'ḇ': 'b', 'ᵬ': 'b', 'ᶀ': 'b', 'ƀ': 'b', 'ƃ': 'b', 'ɵ': 'o', 'ć': 'c', 'č': 'c',\r\n            'ç': 'c', 'ḉ': 'c', 'ĉ': 'c', 'ɕ': 'c', 'ċ': 'c', 'ƈ': 'c', 'ȼ': 'c', 'ď': 'd', 'ḑ': 'd', 'ḓ': 'd', 'ȡ': 'd', 'ḋ': 'd',\r\n            'ḍ': 'd', 'ɗ': 'd', 'ᶑ': 'd', 'ḏ': 'd', 'ᵭ': 'd', 'ᶁ': 'd', 'đ': 'd', 'ɖ': 'd', 'ƌ': 'd', 'ı': 'i', 'ȷ': 'j', 'ɟ': 'j',\r\n            'ʄ': 'j', 'ǳ': 'dz', 'ǆ': 'dz', 'é': 'e', 'ĕ': 'e', 'ě': 'e', 'ȩ': 'e', 'ḝ': 'e', 'ê': 'e', 'ế': 'e', 'ệ': 'e', 'ề': 'e',\r\n            'ể': 'e', 'ễ': 'e', 'ḙ': 'e', 'ë': 'e', 'ė': 'e', 'ẹ': 'e', 'ȅ': 'e', 'è': 'e', 'ẻ': 'e', 'ȇ': 'e', 'ē': 'e', 'ḗ': 'e',\r\n            'ḕ': 'e', 'ⱸ': 'e', 'ę': 'e', 'ᶒ': 'e', 'ɇ': 'e', 'ẽ': 'e', 'ḛ': 'e', 'ꝫ': 'et', 'ḟ': 'f', 'ƒ': 'f', 'ᵮ': 'f', 'ᶂ': 'f',\r\n            'ǵ': 'g', 'ğ': 'g', 'ǧ': 'g', 'ģ': 'g', 'ĝ': 'g', 'ġ': 'g', 'ɠ': 'g', 'ḡ': 'g', 'ᶃ': 'g', 'ǥ': 'g', 'ḫ': 'h', 'ȟ': 'h',\r\n            'ḩ': 'h', 'ĥ': 'h', 'ⱨ': 'h', 'ḧ': 'h', 'ḣ': 'h', 'ḥ': 'h', 'ɦ': 'h', 'ẖ': 'h', 'ħ': 'h', 'ƕ': 'hv', 'í': 'i', 'ĭ': 'i',\r\n            'ǐ': 'i', 'î': 'i', 'ï': 'i', 'ḯ': 'i', 'ị': 'i', 'ȉ': 'i', 'ì': 'i', 'ỉ': 'i', 'ȋ': 'i', 'ī': 'i', 'į': 'i', 'ᶖ': 'i',\r\n            'ɨ': 'i', 'ĩ': 'i', 'ḭ': 'i', 'ꝺ': 'd', 'ꝼ': 'f', 'ᵹ': 'g', 'ꞃ': 'r', 'ꞅ': 's', 'ꞇ': 't', 'ꝭ': 'is', 'ǰ': 'j', 'ĵ': 'j',\r\n            'ʝ': 'j', 'ɉ': 'j', 'ḱ': 'k', 'ǩ': 'k', 'ķ': 'k', 'ⱪ': 'k', 'ꝃ': 'k', 'ḳ': 'k', 'ƙ': 'k', 'ḵ': 'k', 'ᶄ': 'k', 'ꝁ': 'k',\r\n            'ꝅ': 'k', 'ĺ': 'l', 'ƚ': 'l', 'ɬ': 'l', 'ľ': 'l', 'ļ': 'l', 'ḽ': 'l', 'ȴ': 'l', 'ḷ': 'l', 'ḹ': 'l', 'ⱡ': 'l', 'ꝉ': 'l',\r\n            'ḻ': 'l', 'ŀ': 'l', 'ɫ': 'l', 'ᶅ': 'l', 'ɭ': 'l', 'ł': 'l', 'ǉ': 'lj', 'ſ': 's', 'ẜ': 's', 'ẛ': 's', 'ẝ': 's', 'ḿ': 'm',\r\n            'ṁ': 'm', 'ṃ': 'm', 'ɱ': 'm', 'ᵯ': 'm', 'ᶆ': 'm', 'ń': 'n', 'ň': 'n', 'ņ': 'n', 'ṋ': 'n', 'ȵ': 'n', 'ṅ': 'n', 'ṇ': 'n',\r\n            'ǹ': 'n', 'ɲ': 'n', 'ṉ': 'n', 'ƞ': 'n', 'ᵰ': 'n', 'ᶇ': 'n', 'ɳ': 'n', 'ñ': 'n', 'ǌ': 'nj', 'ó': 'o', 'ŏ': 'o', 'ǒ': 'o',\r\n            'ô': 'o', 'ố': 'o', 'ộ': 'o', 'ồ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ö': 'oe', 'ȫ': 'o', 'ȯ': 'o', 'ȱ': 'o', 'ọ': 'o', 'ő': 'o',\r\n            'ȍ': 'o', 'ò': 'o', 'ỏ': 'o', 'ơ': 'o', 'ớ': 'o', 'ợ': 'o', 'ờ': 'o', 'ở': 'o', 'ỡ': 'o', 'ȏ': 'o', 'ꝋ': 'o', 'ꝍ': 'o',\r\n            'ⱺ': 'o', 'ō': 'o', 'ṓ': 'o', 'ṑ': 'o', 'ǫ': 'o', 'ǭ': 'o', 'ø': 'o', 'ǿ': 'o', 'õ': 'o', 'ṍ': 'o', 'ṏ': 'o', 'ȭ': 'o',\r\n            'ƣ': 'oi', 'ꝏ': 'oo', 'ɛ': 'e', 'ᶓ': 'e', 'ɔ': 'o', 'ᶗ': 'o', 'ȣ': 'ou', 'ṕ': 'p', 'ṗ': 'p', 'ꝓ': 'p', 'ƥ': 'p', 'ᵱ': 'p',\r\n            'ᶈ': 'p', 'ꝕ': 'p', 'ᵽ': 'p', 'ꝑ': 'p', 'ꝙ': 'q', 'ʠ': 'q', 'ɋ': 'q', 'ꝗ': 'q', 'ŕ': 'r', 'ř': 'r', 'ŗ': 'r', 'ṙ': 'r',\r\n            'ṛ': 'r', 'ṝ': 'r', 'ȑ': 'r', 'ɾ': 'r', 'ᵳ': 'r', 'ȓ': 'r', 'ṟ': 'r', 'ɼ': 'r', 'ᵲ': 'r', 'ᶉ': 'r', 'ɍ': 'r', 'ɽ': 'r',\r\n            'ↄ': 'c', 'ꜿ': 'c', 'ɘ': 'e', 'ɿ': 'r', 'ß': 'ss', 'ś': 's', 'ṥ': 's', 'š': 's', 'ṧ': 's', 'ş': 's', 'ŝ': 's', 'ș': 's',\r\n            'ṡ': 's', 'ṣ': 's', 'ṩ': 's', 'ʂ': 's', 'ᵴ': 's', 'ᶊ': 's', 'ȿ': 's', 'ɡ': 'g', 'ᴑ': 'o', 'ᴓ': 'o', 'ᴝ': 'u', 'ť': 't',\r\n            'ţ': 't', 'ṱ': 't', 'ț': 't', 'ȶ': 't', 'ẗ': 't', 'ⱦ': 't', 'ṫ': 't', 'ṭ': 't', 'ƭ': 't', 'ṯ': 't', 'ᵵ': 't', 'ƫ': 't',\r\n            'ʈ': 't', 'ŧ': 't', 'ᵺ': 'th', 'ɐ': 'a', 'ᴂ': 'ae', 'ǝ': 'e', 'ᵷ': 'g', 'ɥ': 'h', 'ʮ': 'h', 'ʯ': 'h', 'ᴉ': 'i', 'ʞ': 'k',\r\n            'ꞁ': 'l', 'ɯ': 'm', 'ɰ': 'm', 'ᴔ': 'oe', 'ɹ': 'r', 'ɻ': 'r', 'ɺ': 'r', 'ⱹ': 'r', 'ʇ': 't', 'ʌ': 'v', 'ʍ': 'w', 'ʎ': 'y',\r\n            'ꜩ': 'tz', 'ú': 'u', 'ŭ': 'u', 'ǔ': 'u', 'û': 'u', 'ṷ': 'u', 'ü': 'ue', 'ǘ': 'u', 'ǚ': 'u', 'ǜ': 'u', 'ǖ': 'u', 'ṳ': 'u',\r\n            'ụ': 'u', 'ű': 'u', 'ȕ': 'u', 'ù': 'u', 'ủ': 'u', 'ư': 'u', 'ứ': 'u', 'ự': 'u', 'ừ': 'u', 'ử': 'u', 'ữ': 'u', 'ȗ': 'u',\r\n            'ū': 'u', 'ṻ': 'u', 'ų': 'u', 'ᶙ': 'u', 'ů': 'u', 'ũ': 'u', 'ṹ': 'u', 'ṵ': 'u', 'ᵫ': 'ue', 'ꝸ': 'um', 'ⱴ': 'v', 'ꝟ': 'v',\r\n            'ṿ': 'v', 'ʋ': 'v', 'ᶌ': 'v', 'ⱱ': 'v', 'ṽ': 'v', 'ꝡ': 'vy', 'ẃ': 'w', 'ŵ': 'w', 'ẅ': 'w', 'ẇ': 'w', 'ẉ': 'w', 'ẁ': 'w',\r\n            'ⱳ': 'w', 'ẘ': 'w', 'ẍ': 'x', 'ẋ': 'x', 'ᶍ': 'x', 'ý': 'y', 'ŷ': 'y', 'ÿ': 'y', 'ẏ': 'y', 'ỵ': 'y', 'ỳ': 'y', 'ƴ': 'y',\r\n            'ỷ': 'y', 'ỿ': 'y', 'ȳ': 'y', 'ẙ': 'y', 'ɏ': 'y', 'ỹ': 'y', 'ź': 'z', 'ž': 'z', 'ẑ': 'z', 'ʑ': 'z', 'ⱬ': 'z', 'ż': 'z',\r\n            'ẓ': 'z', 'ȥ': 'z', 'ẕ': 'z', 'ᵶ': 'z', 'ᶎ': 'z', 'ʐ': 'z', 'ƶ': 'z', 'ɀ': 'z', 'ﬀ': 'ff', 'ﬃ': 'ffi', 'ﬄ': 'ffl', 'ﬁ': 'fi',\r\n            'ﬂ': 'fl', 'ĳ': 'ij', 'œ': 'oe', 'ﬆ': 'st', 'ₐ': 'a', 'ₑ': 'e', 'ᵢ': 'i', 'ⱼ': 'j', 'ₒ': 'o', 'ᵣ': 'r', 'ᵤ': 'u', 'ᵥ': 'v',\r\n            'ₓ': 'x'\r\n        };\r\n        return input.replace(/[^A-Za-z0-9\\[\\] ]/g, (a) => (latinMap[a] || a));\r\n    }\r\n}\r\n","\r\nimport { EavValue, EavAttributes, EavAttributesTranslated } from '../models/eav';\r\nimport { EavValues } from '../models/eav/eav-values';\r\n\r\nexport class LocalizationHelper {\r\n\r\n    // public static updateItemAttribute(item: Item, attributes: EavAttributes) {\r\n    //     return {\r\n    //         ...item,\r\n    //         entity: {\r\n    //             ...item.entity,\r\n    //             attributes: attributes,\r\n    //         }\r\n    //     };\r\n    // }\r\n\r\n    /**\r\n     * get translated value for currentLanguage,\r\n     * if not exist return default language translation,\r\n     * if default language also not exist return first value\r\n     * @param currentLanguage\r\n     * @param defaultLanguage\r\n     * @param attributeValues\r\n     */\r\n    public static translate(currentLanguage: string, defaultLanguage: string, attributeValues: EavValues<any>, defaultValue: any): any {\r\n        if (attributeValues) {\r\n            const translation: EavValue<any> = this.getAttributeValueTranslation(attributeValues, currentLanguage, defaultValue);\r\n            // if translation exist then return translation\r\n            if (translation) {\r\n                return translation.value;\r\n                // return translations[0].value;\r\n            } else {\r\n                const translationDefault: EavValue<any> = this.getAttributeValueTranslation(attributeValues,\r\n                    defaultLanguage, defaultLanguage);\r\n                // if default language translation exist then return translation\r\n                if (translationDefault) {\r\n                    return translationDefault.value;\r\n                } else {\r\n                    // else get first value\r\n                    // TODO: maybe return value with *\r\n                    return attributeValues.values[0] ? attributeValues.values[0].value : null;\r\n                }\r\n            }\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    public static getAttributeValueTranslation = (allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string):\r\n        EavValue<any> => {\r\n        return allAttributesValues.values.find(eavValue =>\r\n            eavValue.dimensions.find(d => d.value === languageKey\r\n                || d.value === `~${languageKey}`\r\n                || (languageKey === defaultLanguage && d.value === '*')) !== undefined);\r\n    }\r\n\r\n    public static isEditableOrReadonlyTranslationExist =\r\n        (allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): boolean => {\r\n            return allAttributesValues.values.filter(c =>\r\n                c.dimensions.find(d =>\r\n                    d.value === languageKey\r\n                    || d.value === `~${languageKey}`\r\n                    || (languageKey === defaultLanguage && d.value === '*'))).length > 0;\r\n        }\r\n    /**\r\n     * Language is editable if langageKey exist or on default language * exist\r\n     */\r\n    public static isEditableTranslationExist =\r\n        (allAttributesValues: EavValues<any>, languageKey: string, defaultLanguage: string): boolean => {\r\n            return allAttributesValues ? allAttributesValues.values.filter(eavValue =>\r\n                eavValue.dimensions.find(d => (d.value === languageKey)\r\n                    || (languageKey === defaultLanguage && d.value === '*'))).length > 0 : false;\r\n        }\r\n\r\n    public static isReadonlyTranslationExist = (allAttributesValues: EavValues<any>, languageKey: string): boolean => {\r\n        return allAttributesValues.values.filter(eavValue =>\r\n            eavValue.dimensions.find(d => d.value === `~${languageKey}`)).length > 0;\r\n    }\r\n\r\n    public static updateAttribute(allAttributes: EavAttributes, attribute: EavValues<any>, attributeKey: string) {\r\n        // copy attributes from item\r\n        const eavAttributes: EavAttributes = new EavAttributes();\r\n\r\n        Object.keys(allAttributes).forEach(key => {\r\n            // const eavValueList: EavValue<any>[] = [];\r\n            if (key === attributeKey) {\r\n                eavAttributes[key] = { ...attribute };\r\n            } else {\r\n                eavAttributes[key] = { ...allAttributes[key] };\r\n            }\r\n        });\r\n\r\n        return eavAttributes;\r\n    }\r\n\r\n    /**\r\n     * Update value for languageKey\r\n     * @param allAttributes\r\n     * @param updateValues\r\n     * @param languageKey\r\n     */\r\n    public static updateAttributesValues(\r\n        allAttributes: EavAttributes, updateValues: { [key: string]: any }, languageKey: string, defaultLanguage: string): EavAttributes {\r\n        // copy attributes from item\r\n        const eavAttributes: EavAttributes = new EavAttributes();\r\n        console.log('saveAttributeValues attributes before ', allAttributes);\r\n        Object.keys(allAttributes).forEach(attributeKey => {\r\n            const newItemValue = updateValues[attributeKey];\r\n            console.log('saveAttributeValues newItemValues ', newItemValue);\r\n            // if new value exist update attribute for languageKey\r\n            if (newItemValue !== null && newItemValue !== undefined) {\r\n                const valueWithLanguageExist = this.isEditableOrReadonlyTranslationExist(\r\n                    allAttributes[attributeKey], languageKey, defaultLanguage);\r\n\r\n                // if valueWithLanguageExist update value for languageKey\r\n                if (valueWithLanguageExist) {\r\n                    console.log('saveAttributeValues update values ', newItemValue);\r\n                    eavAttributes[attributeKey] = {\r\n                        ...allAttributes[attributeKey], values: allAttributes[attributeKey].values.map(eavValue => {\r\n                            return eavValue.dimensions.find(d => d.value === languageKey\r\n                                || d.value === `~${languageKey}`\r\n                                || (languageKey === defaultLanguage && d.value === '*'))\r\n                                // Update value for languageKey\r\n                                ? {\r\n                                    ...eavValue,\r\n                                    value: newItemValue,\r\n                                }\r\n                                : eavValue;\r\n                        })\r\n                    };\r\n                } else {\r\n                    eavAttributes[attributeKey] = { ...allAttributes[attributeKey] };\r\n                }\r\n                // else { // else add new value with dimension languageKey\r\n                //     console.log('saveAttributeValues add values ', newItemValue);\r\n                //     const newEavValue = new EavValue(newItemValue, [new EavDimensions(languageKey)]);\r\n                //     eavAttributes[attributeKey] = {\r\n                //         ...allAttributes[attributeKey],\r\n                //         values: [...allAttributes[attributeKey].values, newEavValue]\r\n                //     };\r\n                // }\r\n            } else { // else copy item attributes\r\n                console.log('saveAttributeValues update values else ', newItemValue);\r\n                eavAttributes[attributeKey] = { ...allAttributes[attributeKey] };\r\n            }\r\n        });\r\n\r\n        console.log('saveAttributeValues attributes after ', eavAttributes);\r\n\r\n        return eavAttributes;\r\n    }\r\n\r\n    /**\r\n     * update attribute value, and change language readonly state if needed\r\n     * @param allAttributes\r\n     * @param attributeKey\r\n     * @param newValue\r\n     * @param existingLanguageKey\r\n     * @param isReadOnly\r\n     */\r\n    public static updateAttributeValue(allAttributes: EavAttributes, attributeKey: string, newValue: any, existingLanguageKey: string,\r\n        defaultLanguage: string, isReadOnly: boolean): EavAttributes {\r\n        // copy attributes from item\r\n        let eavAttributes: EavAttributes = new EavAttributes();\r\n        let newLanguageValue = existingLanguageKey;\r\n\r\n        if (isReadOnly) {\r\n            newLanguageValue = `~${existingLanguageKey}`;\r\n        }\r\n\r\n        const attribute: EavValues<any> = {\r\n            ...allAttributes[attributeKey], values: allAttributes[attributeKey].values.map(eavValue => {\r\n                return eavValue.dimensions.find(d => d.value === existingLanguageKey\r\n                    || d.value === `~${existingLanguageKey}`\r\n                    || (existingLanguageKey === defaultLanguage && d.value === '*')\r\n                )\r\n                    // Update value and dimension\r\n                    ? {\r\n                        ...eavValue,\r\n                        // update value\r\n                        value: newValue,\r\n                        // update languageKey with newLanguageValue\r\n                        dimensions: eavValue.dimensions.map(dimension => {\r\n                            return (dimension.value === existingLanguageKey\r\n                                || dimension.value === `~${existingLanguageKey}`\r\n                                || (existingLanguageKey === defaultLanguage && dimension.value === '*'))\r\n                                ? { value: newLanguageValue }\r\n                                : dimension;\r\n                        })\r\n                    }\r\n                    : eavValue;\r\n            })\r\n        };\r\n\r\n        eavAttributes = this.updateAttribute(allAttributes, attribute, attributeKey);\r\n\r\n        return eavAttributes;\r\n    }\r\n\r\n    public static addAttributeValue(allAttributes: EavAttributes, attributeValue: EavValue<any>, attributeKey: string): EavAttributes {\r\n        // copy attributes from item\r\n        let eavAttributes: EavAttributes = new EavAttributes();\r\n\r\n        const attribute: EavValues<any> = {\r\n            // Add attribute\r\n            ...allAttributes[attributeKey], values: [...allAttributes[attributeKey].values, attributeValue]\r\n        };\r\n\r\n        eavAttributes = this.updateAttribute(allAttributes, attribute, attributeKey);\r\n\r\n        return eavAttributes;\r\n    }\r\n\r\n    /**\r\n     * Add dimension to value with existing dimension.\r\n     * @param allAttributes\r\n     * @param attributeKey\r\n     * @param newValue\r\n     * @param existingLanguageKey\r\n     * @param isReadOnly\r\n     */\r\n    public static addAttributeDimension(allAttributes: EavAttributes, attributeKey: string, newDimensionValue: any,\r\n        existingDimensionValue: string, defaultLanguage: string, isReadOnly: boolean): EavAttributes {\r\n        // copy attributes from item\r\n        let eavAttributes: EavAttributes = new EavAttributes();\r\n        let newLanguageValue = newDimensionValue;\r\n\r\n        if (isReadOnly) {\r\n            newLanguageValue = `~${newDimensionValue}`;\r\n        }\r\n\r\n        const attribute: EavValues<any> = {\r\n            ...allAttributes[attributeKey], values: allAttributes[attributeKey].values.map(eavValue => {\r\n                return eavValue.dimensions.find(d => d.value === existingDimensionValue\r\n                    || (existingDimensionValue === defaultLanguage && d.value === '*'))\r\n                    // Update dimension for current language\r\n                    ? {\r\n                        ...eavValue,\r\n                        // if languageKey already exist\r\n                        dimensions: eavValue.dimensions.concat({ value: newLanguageValue })\r\n                    }\r\n                    : eavValue;\r\n            })\r\n        };\r\n\r\n        eavAttributes = this.updateAttribute(allAttributes, attribute, attributeKey);\r\n\r\n        return eavAttributes;\r\n    }\r\n\r\n    /**\r\n     * Remove language\r\n     * if more dimension (languages) exist delete only dimension, else delete value and dimension\r\n     * @param allAttributesValues\r\n     * @param attributeKey\r\n     * @param languageKey\r\n     */\r\n    public static removeAttributeDimension(allAttributes: EavAttributes, attributeKey: string, languageKey: string): EavAttributes {\r\n        console.log('removeAttributeDimension: ', allAttributes);\r\n        // copy attributes from item\r\n        let eavAttributes: EavAttributes = new EavAttributes();\r\n        const value: EavValue<any> = allAttributes[attributeKey].values.find(eavValue =>\r\n            eavValue.dimensions.find(d => d.value === languageKey\r\n                || d.value === `~${languageKey}`) !== undefined);\r\n        let attribute: EavValues<any> = null;\r\n\r\n        if (!value) {\r\n            return { ...allAttributes };\r\n        }\r\n\r\n        // if more dimension exist delete only dimension\r\n        if (value.dimensions.length > 1) {\r\n            attribute = {\r\n                ...allAttributes[attributeKey], values: allAttributes[attributeKey].values.map(eavValue => {\r\n                    return eavValue.dimensions.find(d => d.value === languageKey || d.value === `~${languageKey}`)\r\n                        ? {\r\n                            ...eavValue,\r\n                            // delete only dimension\r\n                            dimensions: eavValue.dimensions.filter(dimension =>\r\n                                (dimension.value !== languageKey && dimension.value !== `~${languageKey}`)\r\n                            )\r\n                        }\r\n                        : eavValue;\r\n                })\r\n            };\r\n        }\r\n        // if only one dimension exist delete value and dimension\r\n        if (value.dimensions.length === 1) {\r\n            attribute = {\r\n                // delete dimension and value\r\n                ...allAttributes[attributeKey], values: allAttributes[attributeKey].values.filter(eavValue => {\r\n                    return eavValue.dimensions.find(d => d.value !== languageKey && d.value !== `~${languageKey}`);\r\n                })\r\n            };\r\n        }\r\n\r\n        eavAttributes = this.updateAttribute(allAttributes, attribute, attributeKey);\r\n\r\n        return eavAttributes;\r\n    }\r\n\r\n    public static translateSettings(settings: EavAttributes, currentLanguage: string, defaultLanguage: string): EavAttributesTranslated {\r\n        const settingsTranslated: EavAttributesTranslated = new EavAttributesTranslated;\r\n        Object.keys(settings).forEach(attributesKey => {\r\n            settingsTranslated[attributesKey] = LocalizationHelper.translate(currentLanguage,\r\n                defaultLanguage, settings[attributesKey], false);\r\n        });\r\n\r\n        return settingsTranslated;\r\n    }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { EavConfiguration } from '../models/eav-configuration';\r\n\r\nexport class UrlHelper {\r\n\r\n    private static readonly serviceScopes = ['app', 'app-sys', 'app-api', 'app-query', 'app-content', 'eav', 'view', 'dnn'];\r\n\r\n    static createHeader = (tabId: string, moduleId: string, contentBlockId: string): HttpHeaders => {\r\n        return new HttpHeaders({\r\n            'TabId': tabId,\r\n            'ContentBlockId': moduleId,\r\n            'ModuleId': contentBlockId,\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'RequestVerificationToken': 'abcdefgihjklmnop'\r\n        });\r\n    }\r\n\r\n    static readQueryStringParameters(url: string): { [key: string]: string } {\r\n        const queryParams: { [key: string]: string } = {};\r\n        url.split('&').forEach(f => {\r\n            if (f.split('=').length === 2) {\r\n                queryParams[f.split('=')[0]] = f.split('=')[1];\r\n            }\r\n        });\r\n        return queryParams;\r\n    }\r\n\r\n    /**\r\n     * Create EavCongiguration from queryStringParams\r\n     */\r\n    static getEavConfiguration = (queryParams: { [key: string]: string }): EavConfiguration => {\r\n        return new EavConfiguration(\r\n            queryParams['zoneId'],\r\n            queryParams['appId'],\r\n            queryParams['approot'],\r\n            queryParams['cbid'],\r\n            queryParams['dialog'],\r\n            queryParams['items'],\r\n            queryParams['lang'],\r\n            queryParams['langpri'],\r\n            queryParams['langs'],\r\n            queryParams['mid'],\r\n            queryParams['mode'],\r\n            queryParams['partOfPage'],\r\n            queryParams['portalroot'],\r\n            queryParams['publishing'],\r\n            queryParams['tid'],\r\n            queryParams['websiteroot'],\r\n            UrlHelper.getVersioningOptions(queryParams['partOfPage'] === 'true', queryParams['publishing'])\r\n        );\r\n    }\r\n\r\n    private static getVersioningOptions(partOfPage: boolean, publishing: string) {\r\n        if (!partOfPage) {\r\n            return { show: true, hide: true, branch: true };\r\n        }\r\n\r\n        const req = publishing || '';\r\n        switch (req) {\r\n            case '':\r\n            case 'DraftOptional': return { show: true, hide: true, branch: true };\r\n            case 'DraftRequired': return { branch: true, hide: true };\r\n            default: {\r\n                console.error('invalid versioning requiremenets: ' + req.toString());\r\n                return {};\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n * converts a short api-call path like \"/app/Blog/query/xyz\" to the DNN full path\r\n * which varies from installation to installation like \"/desktopmodules/api/2sxc/app/...\"\r\n * @param virtualPath\r\n * @returns mapped path\r\n */\r\n    public static resolveServiceUrl(virtualPath: string, serviceRoot: string): string {\r\n        const scope = virtualPath.split('/')[0].toLowerCase();\r\n\r\n        // stop if it's not one of our special paths\r\n        if (this.serviceScopes.indexOf(scope) === -1) {\r\n            return virtualPath;\r\n        }\r\n\r\n        return serviceRoot + scope + '/' + virtualPath.substring(virtualPath.indexOf('/') + 1);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EavService } from '../services/eav.service';\r\n\r\n@Injectable()\r\nexport class HeaderInterceptor implements HttpInterceptor {\r\n    private eavConfig;\r\n\r\n    constructor(private eavService: EavService) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (!this.eavConfig) {\r\n            this.eavConfig = this.eavService.getEavConfiguration();\r\n        }\r\n        const modified = req.clone({\r\n            setHeaders: {\r\n                'TabId': this.eavConfig.tid,\r\n                'ContentBlockId': this.eavConfig.cbid,\r\n                'ModuleId': this.eavConfig.mid,\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                'RequestVerificationToken': 'abcdefgihjklmnop'\r\n            }\r\n        });\r\n        return next.handle(modified);\r\n    }\r\n}\r\n","export class AdamConfig {\r\n    constructor(public adamModeConfig: AdamModeConfig = { usePortalRoot: false },\r\n        public allowAssetsInRoot: boolean = true,\r\n        public autoLoad: boolean = false,\r\n        public enableSelect: boolean = true,\r\n        public fileFilter: string = '',\r\n        public folderDepth: number = 0,\r\n        public metadataContentTypes: string = '',\r\n        public showImagesOnly: boolean = false,\r\n        public subFolder: string = '') {\r\n        this.adamModeConfig = adamModeConfig;\r\n        this.allowAssetsInRoot = allowAssetsInRoot;\r\n        this.autoLoad = autoLoad;\r\n        this.enableSelect = enableSelect;\r\n        this.folderDepth = folderDepth;\r\n        this.fileFilter = fileFilter;\r\n        this.metadataContentTypes = metadataContentTypes;\r\n        this.showImagesOnly = showImagesOnly;\r\n        this.subFolder = subFolder;\r\n    }\r\n}\r\n\r\nexport class AdamModeConfig {\r\n    constructor(public usePortalRoot: boolean) {\r\n        this.usePortalRoot = usePortalRoot;\r\n    }\r\n}\r\n","import { Item } from './eav/item';\r\nimport { ContentType } from './eav/content-type';\r\n\r\nexport class AppState {\r\n    items: Item[];\r\n    contentTypes: ContentType[];\r\n}\r\n","export class CustomInputType {\r\n    public register: any;\r\n\r\n    constructor(register: any) {\r\n        this.register = register;\r\n    }\r\n}\r\n","export class EavConfiguration {\r\n    constructor(public zoneId: string,\r\n        public appId: string,\r\n        public approot: string,\r\n        public cbid: string,\r\n        public dialog: string,\r\n        public items: string,\r\n        public lang: string,\r\n        public langpri: string,\r\n        public langs: string,\r\n        public mid: string,\r\n        public mode: string,\r\n        public partOfPage: string,\r\n        public portalroot: string,\r\n        public publishing: string,\r\n        public tid: string,\r\n        // public user[canDesign]: string,\r\n        // public user[canDevelop]: string,\r\n        public websiteroot: string,\r\n        // TODO: write type instead any\r\n        public versioningOptions: any) {\r\n        this.appId = appId;\r\n        this.approot = approot;\r\n        this.cbid = cbid;\r\n        this.dialog = dialog;\r\n        this.items = items;\r\n        this.lang = lang;\r\n        this.langpri = langpri;\r\n        this.langs = langs;\r\n        this.mid = mid;\r\n        this.mode = mode;\r\n        this.partOfPage = partOfPage;\r\n        this.portalroot = portalroot;\r\n        this.publishing = publishing;\r\n        this.tid = tid;\r\n        // this.user[canDesign] = user[canDesign];\r\n        // this.user[canDevelop] = user[canDevelop];\r\n        this.websiteroot = websiteroot;\r\n        this.versioningOptions = versioningOptions;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export class AdminDialogData {\r\n    constructor(public id: string, public type: string) {\r\n        this.id = id;\r\n        this.type = type;\r\n    }\r\n}\r\n","import { EavEntity } from './eav-entity';\r\nimport { AttributeDef1 } from '../json-format-v1/attribute-def1';\r\nimport { EavAttributes } from './eav-attributes';\r\n\r\nexport class AttributeDef {\r\n    name: string;\r\n    type: string;\r\n    isTitle: boolean;\r\n    settings: EavAttributes;\r\n    metadata: EavEntity[];\r\n\r\n    constructor(name: string, type: string, isTitle: boolean, metadata: EavEntity[], settings: EavAttributes) {\r\n        this.name = name;\r\n        this.type = type;\r\n        this.isTitle = isTitle;\r\n        this.settings = settings;\r\n        this.metadata = metadata;\r\n    }\r\n\r\n    /**\r\n     * Create new AttributeDef from json typed AttributeDef1\r\n     * @param item\r\n     */\r\n    public static create(item: AttributeDef1): AttributeDef {\r\n        // console.log('AttributeDef1:', item);\r\n        const metaDataArray = EavEntity.createArray(item.Metadata);\r\n        const settings = EavAttributes.getFromEavEntityArray(metaDataArray);\r\n        return new AttributeDef(item.Name, item.Type, item.IsTitle, metaDataArray, settings);\r\n    }\r\n\r\n    /**\r\n     * Create new AttributeDef[] from json typed AttributeDef1[]\r\n     * @param item\r\n     */\r\n    public static createArray(attributeDef1Array: AttributeDef1[]): AttributeDef[] {\r\n        const attributeDefArray: AttributeDef[] = [];\r\n        if (attributeDef1Array !== undefined) {\r\n            attributeDef1Array.forEach(attributeDef1 => {\r\n                attributeDefArray.push(AttributeDef.create(attributeDef1));\r\n            });\r\n        }\r\n        return attributeDefArray;\r\n    }\r\n}\r\n","import { AttributeDef } from './attribute-def';\r\nimport { EavEntity } from './eav-entity';\r\nimport { ContentTypeDef1 } from '../json-format-v1/content-type-def1';\r\n\r\nexport class ContentTypeDef {\r\n    id: string;\r\n    name: string;\r\n    scope: string;\r\n    description: string;\r\n    attributes: AttributeDef[];\r\n    metadata: EavEntity[];\r\n\r\n    constructor(id: string, name: string, scope: string, description: string, attributes: AttributeDef[], metadata: EavEntity[]) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.scope = scope;\r\n        this.description = description;\r\n        this.attributes = attributes;\r\n    }\r\n\r\n    /**\r\n     * Create ContentTypeDef from json typed ContentType1\r\n     * @param item\r\n     */\r\n    public static create(item: ContentTypeDef1): ContentTypeDef {\r\n        const attributeDefArray = AttributeDef.createArray(item.Attributes);\r\n        const metaDataArray = EavEntity.createArray(item.Metadata);\r\n\r\n        return new ContentTypeDef(item.Id, item.Name, item.Scope, item.Description, attributeDefArray, metaDataArray);\r\n    }\r\n}\r\n","import { ContentTypeDef } from './content-type-def';\r\nimport { EavHeader } from './eav-header';\r\nimport { JsonHeader1 } from '../json-format-v1';\r\n\r\nexport class ContentType {\r\n    header: EavHeader;\r\n    contentType: ContentTypeDef;\r\n\r\n    constructor(header: EavHeader, contentType: ContentTypeDef) {\r\n        this.header = header;\r\n        this.contentType = contentType;\r\n    }\r\n\r\n    /**\r\n     * Create new ContentType from json typed JsonContentType\r\n     * @param item\r\n     */\r\n    public static create(contentType: any): ContentType {\r\n        return new ContentType(\r\n            // EavHeader.create(item._),\r\n            // TODO: finish content type header from load\r\n            EavHeader.create(new JsonHeader1(1, '', '', null, null, null, '', null)),\r\n            ContentTypeDef.create(contentType)\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","export class EavAttributesTranslated {\r\n    [key: string]: any;\r\n}\r\n","import { EavValues } from './eav-values';\r\nimport { Attributes1 } from '../json-format-v1/attributes1';\r\nimport { EavValue } from './eav-value';\r\nimport { EavEntity } from './eav-entity';\r\n\r\nexport class EavAttributes {\r\n    [key: string]: EavValues<any>;\r\n\r\n    /**\r\n     * Create Eav Attributes from json typed Attributes1\r\n     * @param attributes1\r\n     */\r\n    public static create<T>(attributes1: Attributes1): EavAttributes {\r\n        const newEavAtribute: EavAttributes = new EavAttributes();\r\n\r\n        // Loop trough attributes types - String, Boolean ...\r\n        Object.keys(attributes1).forEach(attributes1Key => {\r\n            if (attributes1.hasOwnProperty(attributes1Key)) {\r\n                const attribute1 = attributes1[attributes1Key];\r\n                // Loop trough attribute - Description, Name ...\r\n                Object.keys(attribute1).forEach(attribute1Key => {\r\n                    if (attribute1.hasOwnProperty(attribute1Key)) {\r\n                        // Creates new EavValue for specified type\r\n                        newEavAtribute[attribute1Key] = EavValues.create<T>(attribute1[attribute1Key]);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        console.log('created attributes: ', newEavAtribute);\r\n        return newEavAtribute;\r\n    }\r\n    /**\r\n     * Get all attributes (dictionary) from attributs in EavEntity array (all attributs from each entity in array)\r\n     * Example: Settings from metadata array\r\n     * @param entity1Array\r\n     */\r\n    public static getFromEavEntityArray(eavEntityArray: EavEntity[]): EavAttributes {\r\n        const newEavAtribute: EavAttributes = new EavAttributes();\r\n        if (eavEntityArray !== undefined) {\r\n            // First read all metadata settings witch are not @All\r\n            eavEntityArray.forEach(eavEntity => {\r\n                if (eavEntity.type.id !== '@All') {\r\n                    Object.keys(eavEntity.attributes).forEach(attributeKey => {\r\n                        newEavAtribute[attributeKey] = Object.assign({}, eavEntity.attributes[attributeKey]);\r\n                    });\r\n                }\r\n            });\r\n            // Read @All metadata settings last (to rewrite attribute if attribute with same name exist)\r\n            eavEntityArray.forEach(eavEntity => {\r\n                if (eavEntity.type.id === '@All') {\r\n                    Object.keys(eavEntity.attributes).forEach(attributeKey => {\r\n                        newEavAtribute[attributeKey] = Object.assign({}, eavEntity.attributes[attributeKey]);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        return newEavAtribute;\r\n    }\r\n\r\n    /**\r\n     * Create EavAtributes from dictionary\r\n     */\r\n    public static createFromDictionary = (value: { [key: string]: any }): EavAttributes => {\r\n        const eavAttributes: EavAttributes = new EavAttributes();\r\n\r\n        Object.keys(value).forEach(valueKey => {\r\n            const eavValues: EavValue<any>[] = [];\r\n            eavAttributes[valueKey] = new EavValues([new EavValue(value[valueKey], [])]);\r\n        });\r\n\r\n        return eavAttributes;\r\n    }\r\n\r\n}\r\n","import { EavAttributes } from '.';\r\nimport { EavValues } from './eav-values';\r\n\r\nexport class EavDimensions<T> {\r\n    value: T;\r\n\r\n    constructor(value: T) {\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Create Eav Dimensions from typed json Value1\r\n     * @param value\r\n     */\r\n    /* public static create<T>(value1: Value1<T>): EavDimensions<T>[] {\r\n\r\n        const asd: EavDimensions<T> = new EavDimensions<T>();\r\n\r\n        const asdarray: EavDimensions<T>[] = [];\r\n\r\n        // Loop trough attribute - Description, Name ...\r\n        Object.keys(value1).forEach(value1Key => {\r\n            if (value1.hasOwnProperty(value1Key)) {\r\n                // Creates new EavValue for specified type\r\n                newEavAtribute[attribute1Key] = EavValue.create<any>(attribute1[attribute1Key]);\r\n            }\r\n        });\r\n\r\n        asdarray.push(new )\r\n\r\n        return new EavDimensions<T>('*', value['*']);\r\n    } */\r\n\r\n    /**\r\n     * Get attribute dimensions for current language\r\n     * @param item\r\n     * @param attributeKey\r\n     * @param currentLanguage\r\n     */\r\n    public static getEavAttributeDimensionsForLanguage(attribute: EavAttributes, attributeKey: string, currentLanguage: string):\r\n        EavDimensions<any>[] {\r\n\r\n        const eavAttribute: EavValues<any> = attribute[attributeKey];\r\n\r\n        const dimensions = eavAttribute.values.map(eavValue => {\r\n            return eavValue.dimensions.find(d => d.value === currentLanguage);\r\n        });\r\n\r\n        return dimensions;\r\n    }\r\n\r\n    public static update() {\r\n        console.log('zovni');\r\n    }\r\n}\r\n","import { EavAttributes } from './eav-attributes';\r\n// import { EavAttributes } from './eav-attributes';\r\nimport { EavType } from './eav-type';\r\nimport { Entity1 } from '../json-format-v1/entity1';\r\n\r\nexport class EavEntity {\r\n    // appId ???\r\n    id: number;\r\n    version: number;\r\n    guid: string;\r\n    // title - from attribute ???\r\n    type: EavType; // ContentType\r\n    attributes: EavAttributes;\r\n    owner: string;\r\n    metadata: EavEntity[];\r\n\r\n    constructor(id: number, version: number, guid: string, type: EavType, attributes: EavAttributes, owner: string, metadata: EavEntity[]) {\r\n        this.id = id;\r\n        this.version = version;\r\n        this.guid = guid;\r\n        this.type = type;\r\n        this.attributes = attributes;\r\n        this.owner = owner;\r\n        this.metadata = metadata;\r\n    }\r\n\r\n    /**\r\n     * Create new Eav Entity from typed json Entity1\r\n     * @param item\r\n     */\r\n    public static create(item: Entity1): EavEntity {\r\n        console.log('create item.Attributes:', item.Attributes);\r\n        const eavAttributes = EavAttributes.create(item.Attributes);\r\n        const eavMetaData = this.createArray(item.Metadata);\r\n\r\n        return new EavEntity(\r\n            item.Id,\r\n            item.Version,\r\n            item.Guid,\r\n            new EavType(item.Type.Id, item.Type.Name),\r\n            eavAttributes,\r\n            item.Owner,\r\n            eavMetaData);\r\n    }\r\n\r\n    /**\r\n    * Create new MetaData Entity Array from json typed metadataArray Entity1[]\r\n    * @param item\r\n    */\r\n    public static createArray(entity1Array: Entity1[]): EavEntity[] {\r\n        const eavMetaDataArray: EavEntity[] = new Array<EavEntity>();\r\n        if (entity1Array !== undefined && entity1Array !== null) {\r\n            console.log('entity1Array:', entity1Array);\r\n            entity1Array.forEach(entity1 => {\r\n                eavMetaDataArray.push(EavEntity.create(entity1));\r\n            });\r\n        }\r\n        return eavMetaDataArray;\r\n    }\r\n}\r\n\r\n\r\n","import { GroupAssignment1 } from '../json-format-v1/group-assignment1';\r\n\r\nexport class EavGroupAssignment {\r\n    guid: string;\r\n    part: string;\r\n    index: number;\r\n    add: boolean;\r\n    slotCanBeEmpty: boolean;\r\n    slotIsEmpty: boolean;\r\n    contentBlockAppId: number;\r\n\r\n    constructor(guid: string, part: string, index: number, add: boolean,\r\n        slotCanBeEmpty: boolean, slotIsEmpty: boolean, contentBlockAppId: number) {\r\n        this.guid = guid;\r\n        this.part = part;\r\n        this.index = index;\r\n        this.add = add;\r\n        this.slotCanBeEmpty = slotCanBeEmpty;\r\n        this.slotIsEmpty = slotIsEmpty;\r\n        this.contentBlockAppId = contentBlockAppId;\r\n    }\r\n\r\n    public static create(groupAssignment1: GroupAssignment1): EavGroupAssignment {\r\n        return groupAssignment1 ? new EavGroupAssignment(groupAssignment1.Guid, groupAssignment1.Part, groupAssignment1.Index,\r\n            groupAssignment1.Add, groupAssignment1.SlotCanBeEmpty, groupAssignment1.SlotIsEmpty,\r\n            groupAssignment1.ContentBlockAppId) : null;\r\n    }\r\n}\r\n","import { JsonHeader1 } from '../json-format-v1/json-header1';\r\nimport { EavGroupAssignment } from './eav-group-assignment';\r\nimport { EavEntity } from './eav-entity';\r\n\r\nexport class EavHeader {\r\n    v: number;\r\n    entityId: number;\r\n    guid: string;\r\n    contentTypeName: string;\r\n    metadata: EavEntity[];\r\n    group: EavGroupAssignment;\r\n    prefill: any;\r\n    title: string;\r\n    duplicateEntity: number;\r\n\r\n    constructor(v: number,\r\n        entityId: number,\r\n        guid: string,\r\n        contentTypeName: string,\r\n        metadata: EavEntity[],\r\n        group: EavGroupAssignment,\r\n        prefill: any,\r\n        title: string,\r\n        duplicateEntity: number) {\r\n        this.v = v;\r\n        this.entityId = entityId;\r\n        this.guid = guid;\r\n        this.contentTypeName = contentTypeName;\r\n        this.metadata = metadata;\r\n        this.group = group;\r\n        this.prefill = prefill;\r\n        this.title = title;\r\n        this.duplicateEntity = duplicateEntity;\r\n    }\r\n\r\n    /**\r\n     * Create Eav Header from typed json JsonHeader1\r\n     * @param item\r\n     */\r\n    public static create(item: JsonHeader1): EavHeader {\r\n        const metadataArray = EavEntity.createArray(item.Metadata);\r\n        const eavGroupAssignment = EavGroupAssignment.create(item.Group);\r\n        return new EavHeader(1, item.EntityId, item.Guid, item.ContentTypeName, metadataArray, eavGroupAssignment,\r\n            item.Prefill, item.Title, item.DuplicateEntity);\r\n    }\r\n}\r\n","export class EavType {\r\n    id: string;\r\n    name: string;\r\n\r\n    constructor(id: string, name: string) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\n","import { Value1 } from '../json-format-v1/value1';\r\nimport { EavDimensions } from './eav-dimensions';\r\n\r\nexport class EavValue<T> {\r\n    value: T;\r\n    dimensions: EavDimensions<T>[];\r\n\r\n    constructor(value: T, dimensions: EavDimensions<T>[]) {\r\n        this.value = value;\r\n        this.dimensions = dimensions;\r\n    }\r\n\r\n    /**\r\n     * Create Eav Value from typed json Value1\r\n     * @param value\r\n     */\r\n    public static create<T>(value1: Value1<T>): EavValue<T>[] {\r\n        const newEavValueArray: EavValue<T>[] = []; // = new EavValue(value1,);\r\n        // Loop trough value1 - {'*', 'value'} ...\r\n        Object.keys(value1).forEach(value1Key => {\r\n            if (value1.hasOwnProperty(value1Key)) {\r\n                const dimensions: EavDimensions<T>[] = [];\r\n\r\n                value1Key.split(',').forEach((language: any) => {\r\n                    dimensions.push(new EavDimensions<T>(language));\r\n                });\r\n                // Creates new EavValue for specified type and add to array\r\n                newEavValueArray.push(new EavValue(value1[value1Key], dimensions));\r\n            }\r\n        });\r\n\r\n        return newEavValueArray;\r\n    }\r\n}\r\n","import { Value1 } from '../json-format-v1/value1';\r\nimport { EavValue } from './eav-value';\r\n\r\nexport class EavValues<T> {\r\n    values: EavValue<any>[];\r\n\r\n    constructor(values: EavValue<T>[]) {\r\n        this.values = values;\r\n    }\r\n\r\n    /**\r\n     * Create Eav Value from typed json Value1\r\n     * @param value\r\n     */\r\n    public static create<T>(value1: Value1<T>): EavValues<T> {\r\n        return new EavValues<T>(EavValue.create(value1));\r\n    }\r\n}\r\n","\r\nexport { EavAttributes } from './eav-attributes';\r\nexport { EavEntity } from './eav-entity';\r\nexport { Item } from './item';\r\nexport { EavValue } from './eav-value';\r\nexport { EavValues } from './eav-values';\r\nexport { EavDimensions } from './eav-dimensions';\r\nexport { ContentType } from './content-type';\r\nexport { EavHeader } from './eav-header';\r\nexport { Language } from './language';\r\nexport { EavAttributesTranslated } from './eav-attributes-translated';\r\nexport { InputType } from './input-type';\r\n\r\n\r\n","\r\nexport class InputType {\r\n    constructor(public Assets: string,\r\n        public Description: string,\r\n        public Label: string,\r\n        public Type: string) {\r\n        this.Assets = Assets;\r\n        this.Description = Description;\r\n        this.Label = Label;\r\n        this.Type = Type;\r\n    }\r\n}\r\n\r\n\r\n","import { EavEntity } from './eav-entity';\r\nimport { EavHeader } from './eav-header';\r\nimport { JsonItem1 } from '../json-format-v1/json-item1';\r\n\r\nexport class Item {\r\n    header: EavHeader;\r\n    entity: EavEntity;\r\n\r\n    constructor(header: EavHeader, entity: EavEntity) {\r\n        this.header = header;\r\n        this.entity = entity;\r\n    }\r\n\r\n    /**\r\n     * Create new Eav Item from json typed JsonItem1\r\n     * @param item\r\n     */\r\n    public static create(item: JsonItem1): Item {\r\n        console.log('create item.Entity:', item.Entity);\r\n        return new Item(\r\n            // EavHeader.create(item._),\r\n            EavHeader.create(item.Header),\r\n            EavEntity.create(item.Entity)\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","export class Language {\r\n    key: string;\r\n    name: string;\r\n\r\n    constructor(key: string, name: string) {\r\n        this.key = key;\r\n        this.name = name;\r\n    }\r\n}\r\n\r\n\r\n","export { AppState } from './app-state';\r\nexport { CustomInputType } from './custom-input-type';\r\n\r\n\r\n","import { Entity1 } from './entity1';\r\n\r\nexport class AttributeDef1 {\r\n    Name: string;\r\n    Type: string;\r\n    IsTitle: boolean;\r\n    Metadata: Entity1[];\r\n\r\n    constructor(Name: string, Type: string, IsTitle: boolean, Metadata: Entity1[]) {\r\n        this.Name = Name;\r\n        this.Type = Type;\r\n        this.IsTitle = IsTitle;\r\n        this.Metadata = Metadata;\r\n    }\r\n}\r\n","import { Value1 } from './value1';\r\n\r\nexport class Attribute1<T> {\r\n    [key: string]: Value1<T>;\r\n}\r\n\r\n/* \"Attributes\": {\r\n    \"String\": {\r\n        \"Description\": {\r\n            \"*\": \"Retrieve full list of all zones\"\r\n        },\r\n        \"Name\": {\r\n            \"*\": \"Zones\"\r\n        },\r\n        \"StreamsOut\": {\r\n            \"*\": \"ListContent,Default\"\r\n        },\r\n        \"StreamWiring\": {\r\n            \"*\": \"3cef3168-5fe8-4417-8ee0-c47642181a1e:Default>Out:Default\"\r\n        },\r\n        \"TestParameters\": {\r\n            \"*\": \"[Module:ModuleID]=6936\"\r\n        }\r\n    },\r\n    \"Boolean\": {\r\n        \"AllowEdit\": {\r\n            \"*\": true\r\n        }\r\n    }\r\n}, */\r\n","import { Attribute1 } from './attribute1';\r\nimport { EavAttributes } from '../eav';\r\nimport { Value1 } from './value1';\r\n\r\nexport class Attributes1 {\r\n    String: Attribute1<string>;\r\n    Boolean: Attribute1<boolean>;\r\n\r\n    public static create<T>(eavAttributes: EavAttributes): Attributes1 {\r\n        const newAttribute1: Attributes1 = new Attributes1();\r\n\r\n        Object.keys(eavAttributes).forEach(eavAttributeKey => {\r\n            if (eavAttributes.hasOwnProperty(eavAttributeKey)) {\r\n                newAttribute1[eavAttributeKey] = Value1.create<T>(eavAttributes[eavAttributeKey]);\r\n            }\r\n        });\r\n        return newAttribute1;\r\n    }\r\n}\r\n","import { AttributeDef1 } from './attribute-def1';\r\nimport { Entity1 } from './entity1';\r\n\r\nexport class ContentTypeDef1 {\r\n    Id: string;\r\n    Name: string;\r\n    Scope: string;\r\n    Description: string;\r\n    Attributes: AttributeDef1[];\r\n    Metadata: Entity1[];\r\n\r\n    constructor(Id: string, Name: string, Scope: string, Description: string, Attributes: AttributeDef1[], Metadata: Entity1[]) {\r\n        this.Id = Id;\r\n        this.Name = Name;\r\n        this.Scope = Scope;\r\n        this.Description = Description;\r\n        this.Attributes = Attributes;\r\n        this.Metadata = Metadata;\r\n    }\r\n}\r\n","import { Attributes1 } from './attributes1';\r\nimport { Type1 } from './type1';\r\nimport { EavEntity } from '../eav';\r\n\r\nexport class Entity1 {\r\n    Id: number;\r\n    Version: number;\r\n    Guid: string;\r\n    Type: Type1;\r\n    Attributes: Attributes1;\r\n    Owner: string;\r\n    Metadata: Entity1[];\r\n\r\n    constructor(Id: number, Version: number, Guid: string, Type: Type1, Attributes: Attributes1, Owner: string, Metadata: Entity1[]) {\r\n        this.Id = Id;\r\n        this.Version = Version;\r\n        this.Guid = Guid;\r\n        this.Type = Type;\r\n        this.Attributes = Attributes;\r\n        this.Owner = Owner;\r\n        this.Metadata = Metadata;\r\n    }\r\n\r\n    /* public static create(item: Entity1): Entity1 {\r\n        return new Entity1(item.Id,\r\n            item.Version,\r\n            item.Guid,\r\n            item.Type,\r\n            item.Attributes,\r\n            item.Owner,\r\n            item.Metadata);\r\n    } */\r\n\r\n\r\n    public static create(entity: EavEntity): Entity1 {\r\n        const attributes1 = Attributes1.create(entity.attributes);\r\n        const metaData1 = this.createArray(entity.metadata);\r\n\r\n        return new Entity1(\r\n            entity.id,\r\n            entity.version,\r\n            entity.guid,\r\n            new Type1(entity.type.id, entity.type.name),\r\n            attributes1,\r\n            entity.owner,\r\n            metaData1);\r\n    }\r\n\r\n\r\n    public static createArray(eavEntityArray: EavEntity[]): Entity1[] {\r\n        const metaData1Array: Entity1[] = new Array<Entity1>();\r\n        if (eavEntityArray !== undefined && eavEntityArray !== null) {\r\n            eavEntityArray.forEach(eavEntity => {\r\n                metaData1Array.push(Entity1.create(eavEntity));\r\n            });\r\n        }\r\n        return metaData1Array;\r\n    }\r\n}\r\n","import { EavGroupAssignment } from '../eav/eav-group-assignment';\r\n\r\nexport class GroupAssignment1 {\r\n    Guid: string;\r\n    Part: string;\r\n    Index: number;\r\n    Add: boolean;\r\n    SlotCanBeEmpty: boolean;\r\n    SlotIsEmpty: boolean;\r\n    ContentBlockAppId: number;\r\n\r\n    constructor(guid: string, part: string, index: number, add: boolean,\r\n        slotCanBeEmpty: boolean, slotIsEmpty: boolean, contentBlockAppId: number) {\r\n        this.Guid = guid;\r\n        this.Part = part;\r\n        this.Index = index;\r\n        this.Add = add;\r\n        this.SlotCanBeEmpty = slotCanBeEmpty;\r\n        this.SlotIsEmpty = slotIsEmpty;\r\n        this.ContentBlockAppId = contentBlockAppId;\r\n    }\r\n\r\n    public static create(eavGroupAssignment: EavGroupAssignment): GroupAssignment1 {\r\n        return eavGroupAssignment ? new GroupAssignment1(eavGroupAssignment.guid, eavGroupAssignment.part, eavGroupAssignment.index,\r\n            eavGroupAssignment.add, eavGroupAssignment.slotCanBeEmpty, eavGroupAssignment.slotIsEmpty,\r\n            eavGroupAssignment.contentBlockAppId) : null;\r\n    }\r\n}\r\n","export { ContentTypeDef1 } from './content-type-def1';\r\nexport { AttributeDef1 } from './attribute-def1';\r\nexport { Entity1 } from './entity1';\r\nexport { JsonContentType1 } from './json-content-type1';\r\nexport { JsonItem1 } from './json-item1';\r\nexport { JsonPackage1 } from './json-package1';\r\nexport { JsonHeader1 } from './json-header1';\r\nexport { Attribute1 } from './attribute1';\r\nexport { Type1 } from './type1';\r\n","import { ContentTypeDef1 } from './content-type-def1';\r\nimport { JsonHeader1 } from './json-header1';\r\n\r\nexport class JsonContentType1 {\r\n    _: JsonHeader1;\r\n    ContentType: ContentTypeDef1;\r\n\r\n    constructor(_: JsonHeader1, ContentType: ContentTypeDef1) {\r\n        this._ = _;\r\n        this.ContentType = ContentType;\r\n    }\r\n\r\n    /* public static create(item: JsonContentType1): JsonContentType1 {\r\n        item._ = JsonHeader1.create(item._);\r\n        item.ContentType = ContentType1.create(item.ContentType);\r\n        return new JsonContentType1(item._, item.ContentType);\r\n    } */\r\n}\r\n","import { GroupAssignment1 } from './group-assignment1';\r\nimport { EavHeader } from '../eav/eav-header';\r\nimport { Entity1 } from './entity1';\r\n\r\nexport class JsonHeader1 {\r\n    EntityId: number;\r\n    Guid: string;\r\n    ContentTypeName: string;\r\n    Metadata: Entity1[];\r\n    Group: GroupAssignment1;\r\n    Prefill: any;\r\n    Title: string;\r\n    DuplicateEntity: number;\r\n\r\n    constructor(entityId: number,\r\n        guid: string,\r\n        contentTypeName: string,\r\n        metadata: Entity1[],\r\n        group: GroupAssignment1,\r\n        prefill: any,\r\n        title: string,\r\n        duplicateEntity: number) {\r\n        this.EntityId = entityId;\r\n        this.Guid = guid;\r\n        this.ContentTypeName = contentTypeName;\r\n        this.Metadata = metadata;\r\n        this.Group = group;\r\n        this.Prefill = prefill;\r\n        this.Title = title;\r\n        this.DuplicateEntity = duplicateEntity;\r\n    }\r\n\r\n    /* public static create(item: JsonHeader1): JsonHeader1 {\r\n        return new JsonHeader1(item.V);\r\n    } */\r\n\r\n    public static create(item: EavHeader): JsonHeader1 {\r\n        const metaDataArray = Entity1.createArray(item.metadata);\r\n        const groupAssignment1 = GroupAssignment1.create(item.group);\r\n        return new JsonHeader1(item.entityId, item.guid, item.contentTypeName, metaDataArray, groupAssignment1,\r\n            item.prefill, item.title, item.duplicateEntity);\r\n    }\r\n}\r\n","import { Entity1 } from './entity1';\r\nimport { JsonHeader1 } from './json-header1';\r\nimport { Item } from '../eav/item';\r\nimport { EavHeader } from '../eav/eav-header';\r\n\r\nexport class JsonItem1 {\r\n    Header: JsonHeader1;\r\n    Entity: Entity1;\r\n\r\n    constructor(Header: JsonHeader1, Entity: Entity1) {\r\n        this.Header = Header;\r\n        this.Entity = Entity;\r\n    }\r\n\r\n    /* public static create(item: JsonItem1): JsonItem1 {\r\n        item._ = JsonHeader1.create(item._);\r\n        item.Entity = Entity1.create(item.Entity);\r\n        return new JsonItem1(item._, item.Entity);\r\n    } */\r\n\r\n    public static create(item: Item): JsonItem1 {\r\n        return new JsonItem1(\r\n            JsonHeader1.create(item.header),\r\n            Entity1.create(item.entity)\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import { ContentTypeDef1 } from './content-type-def1';\r\nimport { Entity1 } from './entity1';\r\nimport { JsonHeader1 } from './json-header1';\r\n\r\nexport class JsonPackage1 {\r\n    _: JsonHeader1;\r\n    ContentType?: ContentTypeDef1;\r\n    // EntityType?: Entity1;\r\n\r\n    constructor(_: JsonHeader1, ContentType?: ContentTypeDef1) {\r\n        this._ = _;\r\n        this.ContentType = ContentType;\r\n    }\r\n    /*  constructor(_: JsonHeader1, ContentType?: ContentType1, EntityType?: Entity1) {\r\n         this._ = _;\r\n         this.ContentType = ContentType;\r\n         this.EntityType = EntityType;\r\n     } */\r\n\r\n    /* public static create(item: JsonPackage1): JsonPackage1 {\r\n        item._ = JsonHeader1.create(item._);\r\n        item.ContentType = ContentType1.create(item.ContentType);\r\n        return new JsonPackage1(item._, item.ContentType);\r\n    } */\r\n}\r\n","export class Type1 {\r\n    Id: string;\r\n    Name: string;\r\n\r\n    constructor(Id: string, Name: string) {\r\n        this.Id = Id;\r\n        this.Name = Name;\r\n    }\r\n}\r\n","import { EavValues, EavValue } from '../eav';\r\n\r\nexport class Value1<T> {\r\n    [key: string]: T;\r\n\r\n\r\n    public static create<T>(eavValues: EavValues<T>): Value1<T> {\r\n        const newValue1 = {};\r\n        console.log('eavValues.values.forEach: ', eavValues.values);\r\n        eavValues.values.forEach(eavValue => {\r\n            const allDimensions = eavValue.dimensions.map(d => d.value).join();\r\n            newValue1[allDimensions] = eavValue.value;\r\n        });\r\n\r\n        return newValue1;\r\n    }\r\n}\r\n\r\n/* \"Attributes\": {\r\n    \"String\": {\r\n        \"Description\": {\r\n            \"*\": \"Retrieve full list of all zones\"\r\n        },\r\n        \"Name\": {\r\n            \"*\": \"Zones\"\r\n        },\r\n        \"StreamsOut\": {\r\n            \"*\": \"ListContent,Default\"\r\n        },\r\n        \"StreamWiring\": {\r\n            \"*\": \"3cef3168-5fe8-4417-8ee0-c47642181a1e:Default>Out:Default\"\r\n        },\r\n        \"TestParameters\": {\r\n            \"*\": \"[Module:ModuleID]=6936\"\r\n        }\r\n    },\r\n    \"Boolean\": {\r\n        \"AllowEdit\": {\r\n            \"*\": true\r\n        }\r\n    }\r\n}, */\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'fileEndingFilter' })\r\nexport class FileEndingFilterPipe implements PipeTransform {\r\n    transform(items: any[], allowedFileTypes): any[] {\r\n        if (!items) { return []; }\r\n        if (allowedFileTypes.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter(it => allowedFileTypes.indexOf(it.Name.match(/(?:\\.([^.]+))?$/)[0]) !== -1);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'filter' })\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(items: any[], field: string, value: string, isEqual: boolean = true): any[] {\r\n        if (!items) { return []; }\r\n        if (isEqual) {\r\n            return items.filter(it => it[field] === value);\r\n        } else {\r\n            return items.filter(it => it[field] !== value);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'orderby'\r\n})\r\nexport class OrderByPipe implements PipeTransform {\r\n    transform(array: any[], field: string): any[] {\r\n        array.sort((a: any, b: any) => {\r\n            if (a[field] < b[field]) {\r\n                return -1;\r\n            } else if (a[field] > b[field]) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n        return array;\r\n    }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Store } from '@ngrx/store';\r\nimport { throwError as observableThrowError, Observable } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { ContentType } from '../models/eav/content-type';\r\nimport { JsonContentType1 } from '../models/json-format-v1/json-content-type1';\r\nimport * as contentTypeActions from '../store/actions/content-type.actions';\r\nimport * as fromStore from '../store';\r\nimport { AttributeDef } from '../models/eav/attribute-def';\r\n\r\n@Injectable()\r\nexport class ContentTypeService {\r\n  // public contentTypes$: Observable<ContentType[]>;\r\n  constructor(private httpClient: HttpClient, private store: Store<fromStore.EavState>) {\r\n  }\r\n\r\n  /**\r\n   * Dispatch LoadItemsAction to store\r\n   * @param path\r\n   */\r\n  public loadContentType(path: string) {\r\n    this.store.dispatch(new contentTypeActions.LoadContentTypeAction(path));\r\n  }\r\n\r\n  public loadContentTypes(contentTypes: JsonContentType1[]) {\r\n    contentTypes.forEach((jsonContentType1: JsonContentType1) => {\r\n      const contentType: ContentType = ContentType.create(jsonContentType1);\r\n      this.store.dispatch(new contentTypeActions.LoadContentTypeSuccessAction(contentType));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Observe content type for item type from store\r\n   * @param id\r\n   */\r\n  public getContentTypeById(id: string): Observable<ContentType> {\r\n    return this.store\r\n      .select(fromStore.getContentTypes)\r\n      .pipe(\r\n        map(data => data.find(obj => obj.contentType.id === id))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Observe content type for item type from store\r\n   * @param id\r\n   */\r\n  public getTitleAttribute(id: string): Observable<AttributeDef> {\r\n    return this.store\r\n      .select(fromStore.getContentTypes)\r\n      .pipe(\r\n        map(data => data.find(obj => obj.contentType.id === id).contentType.attributes.find(obj => obj.isTitle === true))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get Content Type from Json Content Type V1\r\n   */\r\n  public getContentTypeFromJsonContentType1(path: string): Observable<ContentType> {\r\n    return this.httpClient.get<JsonContentType1>(\r\n      `/DesktopModules/ToSIC_SexyContent/dist/ng-edit/assets/data/item-edit-form/content-type/${path}`\r\n    )\r\n      .pipe(\r\n        map((item: JsonContentType1) => {\r\n          return ContentType.create(item);\r\n        }),\r\n        // tap(data => console.log('getEavEntityFromJsonItem1: ', data)),\r\n        catchError(error => this.handleError(error))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get Json Content Type V1\r\n   */\r\n  public getJsonContentType1(path: string): Observable<JsonContentType1> {\r\n    return this.httpClient.get<JsonContentType1>(\r\n      `../../../assets/data/json-to-class-test/content-type/${path}`\r\n    )\r\n      .pipe(\r\n        map((item: JsonContentType1) => {\r\n          return item;\r\n        }),\r\n        // tap(data => console.log('getEavEntityFromJsonItem1: ', data)),\r\n        catchError(error => this.handleError(error))\r\n      );\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    const errMsg = error.message || 'Server error';\r\n    console.error(errMsg);\r\n    return observableThrowError(errMsg);\r\n  }\r\n}\r\n\r\n","\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError as observableThrowError, Observable } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { UrlHelper } from '../helpers/url-helper';\r\nimport { UrlConstants } from '../constants/url-constants';\r\n\r\n@Injectable()\r\nexport class DnnBridgeService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getUrlOfId(appId: string, idCode: string, contentType: string, guid: string, field: string): Observable<any> {\r\n    const linkLowered = idCode.toLowerCase();\r\n\r\n    if (linkLowered.indexOf('file:') !== -1 || linkLowered.indexOf('page:') !== -1) {\r\n      return this.httpClient.get(UrlConstants.apiRoot + 'dnn/Hyperlink/ResolveHyperlink?hyperlink='\r\n        + encodeURIComponent(idCode)\r\n        + (guid ? '&guid=' + guid : '')\r\n        + (contentType ? '&contentType=' + contentType : '')\r\n        + (field ? '&field=' + field : '')\r\n        + '&appId=' + appId)\r\n        .pipe(\r\n          map((data: any) => {\r\n            return data;\r\n          }),\r\n          // tap(data => console.log('Hyperlink data: ', data)),\r\n          catchError(error => this.handleError(error))\r\n        );\r\n      // .do(data => console.log('features: ', data))\r\n      // .catch(this.handleError);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    const errMsg = error.message || 'Server error';\r\n    console.error(errMsg);\r\n    return observableThrowError(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { DialogTypeConstants } from '../constants/type-constants';\r\nimport { AdminDialogData } from '../models/eav/admin-dialog-data';\r\n\r\n@Injectable()\r\nexport class EavAdminUiService {\r\n    constructor() { }\r\n\r\n    /**\r\n     * Open a modal dialog containing the given component. With EntityId.\r\n     */\r\n    public openItemEditWithEntityId = (dialog: MatDialog, entityId: string, component: any): MatDialogRef<{}, any> => {\r\n        return dialog.open(component, {\r\n            width: '650px',\r\n            data: <AdminDialogData>{\r\n                id: entityId,\r\n                type: DialogTypeConstants.itemEditWithEntityId\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open a modal dialog containing the given component.\r\n     */\r\n    public openItemEditWithContent = (dialog: MatDialog, component: any): MatDialogRef<{}, any> => {\r\n        return dialog.open(component, {\r\n            width: '650px',\r\n            // height: '90%',\r\n            // disableClose = true,\r\n            // autoFocus = true,\r\n            data: <AdminDialogData>{\r\n                id: null,\r\n                type: DialogTypeConstants.itemEditWithContent\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Store } from '@ngrx/store';\r\nimport { throwError as observableThrowError, Observable, Subject } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Item } from '../models/eav/item';\r\nimport { ItemService } from './item.service';\r\nimport { ContentTypeService } from './content-type.service';\r\nimport { UrlHelper } from '../helpers/url-helper';\r\nimport * as itemActions from '../store/actions/item.actions';\r\nimport * as fromStore from '../store';\r\nimport { EavConfiguration } from '../models/eav-configuration';\r\nimport { UrlConstants } from '../constants/url-constants';\r\n\r\n\r\n@Injectable()\r\nexport class EavService {\r\n\r\n  // this formSetValueChangeSource observable is using in external components\r\n  private formSetValueChangeSource = new Subject<{ [name: string]: any }>();\r\n  formSetValueChange$ = this.formSetValueChangeSource.asObservable();\r\n\r\n  private eavConfig: EavConfiguration;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private store: Store<fromStore.EavState>,\r\n    private itemService: ItemService,\r\n    private contentTypeService: ContentTypeService,\r\n    private route: ActivatedRoute) {\r\n  }\r\n\r\n  // public getAllData() {\r\n  //   this.store.dispatch(new dataActions.LoadAllDataAction());\r\n  // }\r\n\r\n  public getEavConfiguration = (): EavConfiguration => {\r\n    if (!this.eavConfig) {\r\n      this.setEavConfiguration(this.route);\r\n    }\r\n\r\n    if (this.eavConfig) {\r\n      return this.eavConfig;\r\n    } else {\r\n      console.log('Configuration data not set');\r\n    }\r\n  }\r\n\r\n  public loadAllDataForForm(appId: string, items: string): Observable<any> {\r\n    const body = items.replace(/\"/g, '\\'');\r\n    // const body = JSON.stringify([{ 'EntityId': 2809 }]);\r\n    // const body = JSON.stringify([{ 'EntityId': 1033 }]);\r\n    // const body = JSON.stringify([{ 'EntityId': 3861 }]);\r\n    // const body = JSON.stringify([{ 'EntityId': 3858 }]);\r\n    // const body = JSON.stringify([{ 'EntityId': 3841 }]);\r\n    // const body = JSON.stringify([{ 'EntityId': 3830 }]);\r\n    // const body = JSON.stringify([{ 'EntityId': 1754 }, { 'EntityId': 1785 }]); // , { 'EntityId': 3824 }\r\n    // const body = JSON.stringify([{ 'EntityId': 1034 }, { 'EntityId': 1035 }]);\r\n    // maybe create model for data\r\n    return this.httpClient.post(`${UrlConstants.apiRoot}eav/ui/load?appId=${appId}`,\r\n      body)\r\n      .pipe(\r\n        map((data: any) => {\r\n          return data;\r\n        }),\r\n        // tap(data => console.log('getAllDataForForm: ', data)),\r\n        catchError(error => this.handleError(error))\r\n      );\r\n  }\r\n  // TODO: create entityarray type\r\n  public loadAllDataForFormByEntity(appId: string, entityArray: Array<any>): Observable<any> {\r\n    const body = JSON.stringify(entityArray);\r\n    // maybe create model for data\r\n    return this.httpClient.post(`${UrlConstants.apiRoot}eav/ui/load?appId=${appId}`,\r\n      body)\r\n      .pipe(\r\n        map((data: any) => {\r\n          return data;\r\n        }),\r\n        // tap(data => console.log('getAllDataForForm: ', data)),\r\n        catchError(error => this.handleError(error))\r\n      );\r\n  }\r\n\r\n\r\n  public saveItem(appId: number, item: Item, updateValues: { [key: string]: any }, existingLanguageKey: string, defaultLanguage: string) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesAction(appId, item, updateValues, existingLanguageKey, defaultLanguage));\r\n  }\r\n\r\n  public saveItemSuccess(data: any) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesSuccessAction(data));\r\n  }\r\n\r\n  public saveItemError(error: any) {\r\n    this.store.dispatch(new itemActions.SaveItemAttributesValuesErrorAction(error));\r\n  }\r\n\r\n  // TODO: Finish return model and sent real body\r\n  // public savemany(appId: number, tabId: string, moduleId: string, contentBlockId: string, body: string): Observable<any> {\r\n  public savemany(appId: string, partOfPage: string, body: string): Observable<any> {\r\n    console.log('start submit');\r\n    // tslint:disable-next-line:max-line-length\r\n    // const bodyTemp = `[{\"Header\":{\"EntityId\":1722,\"Guid\":\"07621ab2-4bdc-4fd2-9c9d-e9cc765f988c\",\"ContentTypeName\":\"67a0b738-f1d0-4773-899d-c5bb04cfce2b\",\"Metadata\":null,\"Group\":null,\"Prefill\":null,\"Title\":null,\"DuplicateEntity\":null},\"Entity\":{\"Id\":1722,\"Type\":{\"Name\":\"DirectoryItem\",\"StaticName\":\"67a0b738-f1d0-4773-899d-c5bb04cfce2b\"},\"IsPublished\":true,\"IsBranch\":false,\"TitleAttributeName\":\"Title\",\"Attributes\":{\"Title\":{\"Values\":[{\"Value\":\"2sic internet solutions\",\"Dimensions\":{\"en-us\":false}}]},\"Industry\":{\"Values\":[{\"Value\":[\"9e733bf4-8179-4add-a333-6cb6dbff38dc\"],\"Dimensions\":{}}]},\"Link\":{\"Values\":[{\"Value\":\"https://www.2sic.com\",\"Dimensions\":{\"en-us\":false}}]},\"Logo\":{\"Values\":[{\"Value\":\"file:216\",\"Dimensions\":{\"en-us\":false}}]},\"LinkText\":{\"Values\":[{\"Value\":\"www.2sic.com\",\"Dimensions\":{\"en-us\":false}}]},\"Town\":{\"Values\":[{\"Value\":\"Buchs\",\"Dimensions\":{\"en-us\":false}}]},\"localizationMenus\":[{\"all\":{}},{\"all\":{}},{\"all\":{}},{\"all\":{}},{\"all\":{}}]},\"AppId\":15},\"slotIsUsed\":true}]`;\r\n\r\n    //  const body = items;\r\n    // const partOfPage = false;\r\n\r\n    // TODO: create model for data\r\n    return this.httpClient.post(`${UrlConstants.apiRoot}eav/ui/save?appId=${appId}&partOfPage=${partOfPage}`,\r\n      body)\r\n      .pipe(\r\n        map((data: any) => {\r\n          console.log('return data');\r\n          return data;\r\n        }),\r\n        tap(data => console.log('submit: ', data)),\r\n        catchError(error => this.handleError(error))\r\n      );\r\n  }\r\n\r\n  /**\r\n  * Trigger on form change - this is using in external components\r\n  */\r\n  public triggerFormSetValueChange(formValues: { [name: string]: any }) {\r\n    this.formSetValueChangeSource.next(formValues);\r\n  }\r\n\r\n  /**\r\n * Set Eav Configuration\r\n */\r\n  private setEavConfiguration(route: ActivatedRoute) {\r\n    const queryStringParameters = UrlHelper.readQueryStringParameters(route.snapshot.fragment);\r\n    console.log('queryStringParameters', queryStringParameters);\r\n    // const eavConfiguration: EavConfiguration = UrlHelper.getEavConfiguration(queryStringParameters);\r\n    this.eavConfig = UrlHelper.getEavConfiguration(queryStringParameters);\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    const errMsg = error.message || 'Server error';\r\n    console.error(errMsg);\r\n    return observableThrowError(errMsg);\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Store } from '@ngrx/store';\r\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { UrlConstants } from '../constants/url-constants';\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  /**\r\n   * get availableEntities - (used in entity-default input type)\r\n   * @param apiId\r\n   * @param body\r\n   * @param ctName\r\n   */\r\n  public getAvailableEntities(apiId: string, body: string, ctName: string): Observable<any> {\r\n    // maybe create model for data\r\n    return this.httpClient.post(`${UrlConstants.apiRoot}eav/EntityPicker/getavailableentities`,\r\n      body,\r\n      {\r\n        params: {\r\n          contentTypeName: ctName,\r\n          appId: apiId\r\n        }\r\n      }\r\n    ).pipe(\r\n      map((data: any) => {\r\n        return data;\r\n      }),\r\n      // tap(data => console.log('getAvailableEntities: ', data)),\r\n      catchError(error => this.handleError(error))\r\n    );\r\n  }\r\n\r\n  public delete(appId: string, type: string, id: string, tryForce: boolean): Observable<any> {\r\n    console.log('GET delete method:');\r\n    return this.httpClient.get(`${UrlConstants.apiRoot}eav/entities/delete`,\r\n      {\r\n        // ignoreErrors: 'true',\r\n        params: {\r\n          'contentType': type,\r\n          'id': id,\r\n          'appId': appId,\r\n          'force': tryForce.toString()\r\n        }\r\n      })\r\n      .pipe(\r\n        map((data: any) => {\r\n          console.log('data retun', data);\r\n          return data;\r\n        }),\r\n        // tap(data => console.log('entity delete: ', data)),\r\n        catchError(error => of(error))\r\n      );\r\n\r\n    // return null;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    const errMsg = error.message || 'Server error';\r\n    console.error(errMsg);\r\n    return observableThrowError(errMsg);\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError as observableThrowError, Observable, of } from 'rxjs';\r\nimport { map, catchError, tap, switchMap } from 'rxjs/operators';\r\n\r\nimport { UrlHelper } from '../helpers/url-helper';\r\nimport { UrlConstants } from '../constants/url-constants';\r\n\r\n@Injectable()\r\nexport class FeatureService {\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    public getFeatures(appId: string, url: string): Observable<any> {\r\n        return this.httpClient.get(`${UrlConstants.apiRoot}eav/system/features`,\r\n            {\r\n                params: {\r\n                    appId: appId\r\n                }\r\n            })\r\n            .pipe(\r\n                map((data: any) => {\r\n                    return data;\r\n                }),\r\n                tap(data => console.log('features: ', data)),\r\n                catchError(error => this.handleError(error))\r\n            );\r\n    }\r\n\r\n    enabled = (guid: string, appId: string, url: string): Observable<boolean> => {\r\n        return this.getFeatures(appId, url)\r\n            .pipe(switchMap(s => this.enabledNow(s, guid)));\r\n    }\r\n\r\n    private enabledNow = (list, guid): Observable<boolean> => {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].id === guid) {\r\n                return of(list[i].enabled);\r\n            }\r\n        }\r\n        return of(false);\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        // In a real world app, we might send the error to remote logging infrastructure\r\n        const errMsg = error.message || 'Server error';\r\n        console.error(errMsg);\r\n        return observableThrowError(errMsg);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n// @Injectable()\r\nexport class FieldMaskService {\r\n\r\n  // private mask: string;\r\n  // model: $scope.model,\r\n  private fields: string[] = [];\r\n  // value: undefined,\r\n  private findFields = /\\[.*?\\]/ig;\r\n  private unwrapField = /[\\[\\]]/ig;\r\n\r\n  constructor(private mask: string,\r\n    private changeEvent: any,\r\n    private overloadPreCleanValues: any,\r\n    private model: { [key: string]: AbstractControl; }) {\r\n    this.mask = mask;\r\n    this.model = model;\r\n    this.fields = this.fieldList();\r\n\r\n    if (overloadPreCleanValues) { // got an overload...\r\n      this.preClean = overloadPreCleanValues;\r\n    }\r\n  }\r\n\r\n  public preClean = (key, value) => {\r\n    return value;\r\n  }\r\n\r\n  // retrieves a list of all fields used in the mask\r\n  public fieldList = () => {\r\n    const result = [];\r\n    if (!this.mask) { return result; }\r\n    const matches = this.mask.match(this.findFields);\r\n    if (matches) {\r\n      matches.forEach((e, i) => {\r\n        const staticName = e.replace(this.unwrapField, '');\r\n        result.push(staticName);\r\n      });\r\n    } else { // TODO: ask is this good\r\n      result.push(this.mask);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // resolves a mask to the final value\r\n  // getNewAutoValue()\r\n  // this.model = this.group.controls (group is FormGroup)\r\n  resolve = () => {\r\n    let value = this.mask;\r\n    this.fields.forEach((e, i) => {\r\n      const replaceValue = this.model.hasOwnProperty(e) && this.model[e] && this.model[e].value ? this.model[e].value : '';\r\n      const cleaned = this.preClean(e, replaceValue);\r\n      value = value.replace('[' + e + ']', cleaned);\r\n    });\r\n\r\n    console.log('resolve:', value);\r\n    return value;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FileTypeService {\r\n\r\n  constructor() { }\r\n\r\n  private iconPrefix = 'eav-icon-';\r\n  private defaultIcon = 'file';\r\n  private checkImgRegEx = /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*\\.(?:jpg|jpeg|gif|png))(?:\\?([^#]*))?(?:#(.*))?/i;\r\n  private extensions = {\r\n    doc: 'file-word',\r\n    docx: 'file-word',\r\n    xls: 'file-excel',\r\n    xlsx: 'file-excel',\r\n    ppt: 'file-powerpoint',\r\n    pptx: 'file-powerpoint',\r\n    pdf: 'file-pdf',\r\n    mp3: 'file-audio',\r\n    avi: 'file-video',\r\n    mpg: 'file-video',\r\n    mpeg: 'file-video',\r\n    mov: 'file-video',\r\n    mp4: 'file-video',\r\n    zip: 'file-archive',\r\n    rar: 'file-archive',\r\n    txt: 'file-text',\r\n    html: 'file-code',\r\n    css: 'file-code',\r\n    xml: 'file-code',\r\n    xsl: 'file-code',\r\n    vcf: 'user'\r\n  };\r\n\r\n  public getExtension = (filename) => {\r\n    return filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();\r\n  }\r\n\r\n  public getIconClass = (filename) => {\r\n    return this.iconPrefix + (this.extensions[this.getExtension(filename)] || this.defaultIcon);\r\n  }\r\n\r\n  public isKnownType = (filename) => {\r\n    return this.extensions[this.getExtension(filename)] !== undefined;\r\n  }\r\n\r\n  public isImage = (filename) => {\r\n    return this.checkImgRegEx.test(filename);\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport * as languageActions from '../store/actions/input-type.actions';\r\nimport * as fromStore from '../store';\r\nimport { InputType } from '../models/eav';\r\n\r\n@Injectable()\r\nexport class InputTypeService {\r\n  constructor(private store: Store<fromStore.EavState>) {\r\n  }\r\n\r\n  /**\r\n    * Load all inputtypes info\r\n    */\r\n  public loadInputTypes(inputTypes: InputType[]) {\r\n    this.store.dispatch(new languageActions.LoadInputTypeSuccessAction(inputTypes));\r\n  }\r\n\r\n  /**\r\n  * Observe input type from store\r\n  * @param type\r\n  */\r\n  public getContentTypeById(type: string): Observable<InputType> {\r\n    return this.store\r\n      .select(fromStore.getInputTypes)\r\n      .pipe(\r\n        map(data => data.find(obj => obj.Type === type))\r\n      );\r\n  }\r\n}\r\n\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Store } from '@ngrx/store';\r\nimport { throwError as observableThrowError, Observable } from 'rxjs';\r\nimport { map, catchError, tap, filter } from 'rxjs/operators';\r\n\r\nimport { Item } from '../models/eav/item';\r\nimport { JsonItem1 } from '../models/json-format-v1/json-item1';\r\nimport { EavAttributes, EavValue } from '../models/eav';\r\n\r\nimport * as itemActions from '../store/actions/item.actions';\r\nimport * as fromStore from '../store';\r\nimport { EavValues } from '../models/eav/eav-values';\r\nimport { EavDimensions } from '../models/eav/eav-dimensions';\r\n\r\n@Injectable()\r\nexport class ItemService {\r\n\r\n  // public items$  Observable<Item[]>;\r\n\r\n  constructor(private httpClient: HttpClient, private store: Store<fromStore.EavState>) {\r\n    // this.items$ = store.select(fromStore.getItems);\r\n  }\r\n\r\n  // public loadAllData(path: string) {\r\n  //   this.store.dispatch(new itemActions.LoadDataAction(path));\r\n  // }\r\n\r\n  public loadItem(path: string) {\r\n    this.store.dispatch(new itemActions.LoadItemAction(path));\r\n  }\r\n\r\n  public loadItems(items: JsonItem1[]) {\r\n    console.log('start create item');\r\n    items.forEach((jsonItem1: JsonItem1) => {\r\n      const item: Item = Item.create(jsonItem1);\r\n      this.store.dispatch(new itemActions.LoadItemSuccessAction(item));\r\n    });\r\n  }\r\n\r\n  public updateItem(attributes: EavAttributes, id: number) {\r\n    this.store.dispatch(new itemActions.UpdateItemAction(attributes, id));\r\n  }\r\n\r\n  public updateItemAttribute(entityId: number, newEavAttribute: EavValues<any>, attributeKey: string) {\r\n    this.store.dispatch(new itemActions.UpdateItemAttributeAction(entityId, newEavAttribute, attributeKey));\r\n  }\r\n\r\n  public addItemAttributeValue(entityId: number, newEavAttributeValue: EavValue<any>, attributeKey: string) {\r\n    this.store.dispatch(new itemActions.AddItemAttributeValueAction(entityId, newEavAttributeValue, attributeKey));\r\n  }\r\n\r\n  public updateItemAttributeValue(entityId: number, attributeKey: string, newEavAttributeValue: string,\r\n    existingDimensionValue: string, defaultLanguage: string, isReadOnly: boolean) {\r\n    this.store.dispatch(new itemActions.UpdateItemAttributeValueAction(entityId, attributeKey, newEavAttributeValue,\r\n      existingDimensionValue, defaultLanguage, isReadOnly));\r\n  }\r\n\r\n  public updateItemAttributesValues(entityId: number, updateValues: { [key: string]: any }, languageKey: string, defaultLanguage: string) {\r\n    this.store.dispatch(new itemActions.UpdateItemAttributesValuesAction(entityId, updateValues, languageKey, defaultLanguage));\r\n  }\r\n\r\n  /**\r\n  * Update entity attribute dimension. Add readonly languageKey to existing useFromLanguageKey.\r\n  * Example to useFrom en-us add fr-fr = \"en-us,-fr-fr\"\r\n  * */\r\n  public addItemAttributeDimension(entityId: number, attributeKey: string, dimensionValue: string,\r\n    existingDimensionValue: string, defaultLanguage: string, isReadOnly: boolean) {\r\n    this.store.dispatch(new itemActions.AddItemAttributeDimensionAction(entityId, attributeKey, dimensionValue,\r\n      existingDimensionValue, defaultLanguage, isReadOnly));\r\n  }\r\n\r\n  public removeItemAttributeDimension(entityId: number, attributeKey: string, dimensionValue: string) {\r\n    this.store.dispatch(new itemActions.RemoveItemAttributeDimensionAction(entityId, attributeKey, dimensionValue));\r\n  }\r\n\r\n  // public updateItem(attributes: EavAttributes, item: EavItem) {\r\n  //   this.store.dispatch(new itemActions.UpdateItemAction(attributes, item));\r\n  // }\r\n\r\n  addAttributeValue(\r\n    entityId: number,\r\n    attributeKey: string,\r\n    oldAttributeValues: EavValues<any>,\r\n    newValue: any,\r\n    languageKey: string,\r\n    isReadOnly: boolean) {\r\n\r\n    let newLanguageValue = languageKey;\r\n\r\n    if (isReadOnly) {\r\n      newLanguageValue = `~${languageKey}`;\r\n    }\r\n\r\n    const newEavValue = new EavValue(newValue, [new EavDimensions(newLanguageValue)]);\r\n\r\n    this.addItemAttributeValue(entityId, newEavValue, attributeKey);\r\n  }\r\n\r\n  public deleteItem(item: Item) {\r\n    this.store.dispatch(new itemActions.DeleteItemAction(item));\r\n  }\r\n\r\n  public selectAttributeByEntityId(entityId: number, attributeKey: string): Observable<EavValues<any>> {\r\n    return this.store\r\n      .select(fromStore.getItems)\r\n      .pipe(map(c => c.find(obj => obj.entity.id === entityId)\r\n        ? c.find(obj => obj.entity.id === entityId).entity.attributes[attributeKey]\r\n        : null));\r\n  }\r\n\r\n  public selectAttributesByEntityId(entityId: number): Observable<EavAttributes> {\r\n    return this.store\r\n      .select(fromStore.getItems)\r\n      .pipe(map(c => c.find(obj => obj.entity.id === entityId)\r\n        ? c.find(obj => obj.entity.id === entityId).entity.attributes\r\n        : null));\r\n  }\r\n\r\n  public selectAllItems(): Observable<Item[]> {\r\n    return this.store.select(fromStore.getItems);\r\n  }\r\n\r\n  public selectItemById(id: number): Observable<Item> {\r\n    return this.store\r\n      .select(fromStore.getItems)\r\n      .pipe(map(data => data.find(obj => obj.entity.id === id)));\r\n  }\r\n  /**\r\n   * Select items from store by id array list\r\n   * @param idsList\r\n   */\r\n  public selectItemsByIdList(idsList: number[]): Observable<Item[]> {\r\n    return this.store\r\n      .select(fromStore.getItems)\r\n      .pipe(map(data => data.filter(obj => idsList.filter(id => id === obj.entity.id).length > 0)));\r\n  }\r\n\r\n  // public selectItemById(id: number): Observable<Item> {\r\n  //   return this.store.select(fromStore.getItemById(id));\r\n  // }\r\n\r\n  /**\r\n   * Get Item from Json Entity V1\r\n   */\r\n  public getItemFromJsonItem1(path: string): Observable<Item> {\r\n    // return this.httpClient.get<JsonItem1>('../../../assets/data/item-edit-form/item/json-item-v1-person.json')\r\n    // return this.httpClient.get<JsonItem1>(`../../../assets/data/item-edit-form/item/json-item-v1-accordion.json`)\r\n    return this.httpClient.get<JsonItem1>(`/DesktopModules/ToSIC_SexyContent/dist/ng-edit/assets/data/item-edit-form/item/${path}`)\r\n      .pipe(\r\n        map((item: JsonItem1) => {\r\n          return Item.create(item);\r\n        }),\r\n        // tap(data => console.log('getItemFromJsonItem1: ', data)),\r\n        catchError(error => this.handleError(error))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get Json Entity V1\r\n   */\r\n  public getJsonItem1(path: string): Observable<JsonItem1> {\r\n    return this.httpClient.get<JsonItem1>(`../../../assets/data/json-to-class-test/item/${path}`)\r\n      .pipe(\r\n        map((item: JsonItem1) => {\r\n          return item;\r\n        }),\r\n        // tap(data => console.log('getItemFromJsonItem1: ', data)),\r\n        catchError(error => this.handleError(error))\r\n      );\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    const errMsg = error.message || 'Server error';\r\n    console.error(errMsg);\r\n    return observableThrowError(errMsg);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as languageActions from '../store/actions/language.actions';\r\nimport * as fromStore from '../store';\r\nimport { Language, Item } from '../models/eav';\r\n\r\n@Injectable()\r\nexport class LanguageService {\r\n\r\n  private localizationWrapperMenuChangeSource = new Subject<string>();\r\n  localizationWrapperMenuChange$ = this.localizationWrapperMenuChangeSource.asObservable();\r\n\r\n  constructor(private httpClient: HttpClient, private store: Store<fromStore.EavState>) {\r\n    // this.items$ = store.select(fromStore.getItems);\r\n  }\r\n\r\n  /**\r\n   * Load all languages\r\n   */\r\n  public loadLanguages(languages: Language[], currentLanguage: string, defaultLanguage: string, uiLanguage: string) {\r\n    this.store.dispatch(new languageActions.LoadLanguagesAction(languages, currentLanguage, defaultLanguage, uiLanguage));\r\n  }\r\n\r\n  public selectAllLanguages(): Observable<Language[]> {\r\n    return this.store.select(fromStore.getLanguages);\r\n  }\r\n\r\n  public selectLanguage(name: string) {\r\n    return this.store.select(fromStore.getLanguages)\r\n      .pipe(map(data => data.find(obj => obj.name === name)));\r\n  }\r\n\r\n  public getCurrentLanguage() {\r\n    return this.store.select(fromStore.getCurrentLanguage);\r\n  }\r\n\r\n  public getDefaultLanguage() {\r\n    return this.store.select(fromStore.getDefaultLanguage);\r\n  }\r\n\r\n  public updateCurrentLanguage(currentLanguage: string) {\r\n    this.store.dispatch(new languageActions.UpdateCurrentLanguageAction(currentLanguage));\r\n  }\r\n\r\n  public updateDefaultLanguage(defaultLanguage: string) {\r\n    this.store.dispatch(new languageActions.UpdateDefaultLanguageAction(defaultLanguage));\r\n  }\r\n\r\n  /**\r\n   * Trigger info message change on all form controls\r\n   * @param infoMessage\r\n   */\r\n  public triggerLocalizationWrapperMenuChange() {\r\n    this.localizationWrapperMenuChangeSource.next();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Observer, zip } from 'rxjs';\r\n\r\nimport { FileTypeConstants } from '../constants/type-constants';\r\n\r\n@Injectable()\r\nexport class ScriptLoaderService {\r\n  private scripts: ScriptModel[] = [];\r\n\r\n  public load(script: ScriptModel, fileType: string): Observable<ScriptModel> {\r\n    return new Observable<ScriptModel>((observer: Observer<ScriptModel>) => {\r\n      const existingScript = this.scripts.find(s => s.name === script.name);\r\n\r\n      // Complete if already loaded\r\n      if (existingScript && existingScript.loaded) {\r\n        observer.next(existingScript);\r\n        observer.complete();\r\n      } else {\r\n        // Add the script\r\n        this.scripts = [...this.scripts, script];\r\n        // Load the script\r\n        let scriptElement;\r\n\r\n        switch (fileType) {\r\n          case FileTypeConstants.css:\r\n            // Load the style\r\n            scriptElement = document.createElement('link');\r\n            scriptElement.rel = 'stylesheet';\r\n            scriptElement.href = script.filePath;\r\n            break;\r\n          case FileTypeConstants.javaScript:\r\n            scriptElement = document.createElement('script');\r\n            scriptElement.type = 'module';\r\n            scriptElement.src = script.filePath;\r\n            break;\r\n          default:\r\n            console.log('wrong file type');\r\n            break;\r\n        }\r\n\r\n        scriptElement.onload = () => {\r\n          script.loaded = true;\r\n          // Settimeout for testing slow load of scripts\r\n          // setTimeout(() => {\r\n          observer.next(script);\r\n          observer.complete();\r\n          // }, 5000);\r\n        };\r\n\r\n        scriptElement.onerror = (error: any) => {\r\n          observer.error('Couldnt load script ' + script.filePath);\r\n        };\r\n\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  public loadList(scriptList: ScriptModel[], fileType: string): Observable<ScriptModel[]> {\r\n    const allScripts$: Observable<ScriptModel>[] = [];\r\n    scriptList.forEach((scriptModel: ScriptModel) => {\r\n      allScripts$.push(this.load(scriptModel, fileType));\r\n    });\r\n    return allScripts$.length > 0\r\n      ? zip(...allScripts$)\r\n      : null;\r\n  }\r\n}\r\n\r\nexport interface ScriptModel {\r\n  name: string;\r\n  filePath: string;\r\n  loaded: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SvcCreatorService {\r\n  // construct a object which has liveListCache, liveListReload(), liveListReset(),\r\n  constructor() { }\r\n\r\n  implementLiveList(getLiveList$: any, disableToastr: string) {\r\n\r\n    const disableToastrValue = !!disableToastr;\r\n    let liveListCacheIsLoaded = false;\r\n    const liveListSourceRead$: any = getLiveList$;\r\n\r\n    const liveListCacheBehaviorSubject: BehaviorSubject<any[]> = new BehaviorSubject([]);\r\n    const liveListCache$ = liveListCacheBehaviorSubject.asObservable();\r\n\r\n    // use a promise-result to re-fill the live list of all items, return the promise again\r\n    // const _liveListUpdateWithResult = function\r\n    const updateLiveAll = (result) => {\r\n      // TODO:\r\n      // if (t.msg.isOpened) {\r\n      //   toastr.clear(t.msg);\r\n      // }\r\n      // else {\r\n      //   $timeout(300).then(function () {\r\n      //     toastr.clear(t.msg);\r\n      //   }\r\n      //   );\r\n      // }\r\n      // liveListCache.length = 0; // clear\r\n      // liveListCache = [];\r\n      // for (let i = 0; i < result.length; i++) {\r\n      //   liveListCache.push(result[i]);\r\n      // }\r\n      liveListCacheBehaviorSubject.next(result);\r\n\r\n      liveListCacheIsLoaded = true;\r\n      console.log('liveListCache after:', liveListCacheBehaviorSubject.getValue());\r\n    };\r\n\r\n    /**\r\n     * Reload live list action\r\n     */\r\n    const liveListReload = () => {\r\n      // show loading - must use the promise-mode because this may be used early before the language has arrived\r\n      // return 'General.Messages.Loading';\r\n      // $translate(\"General.Messages.Loading\").then(function (msg) {\r\n      //   t.msg = toastr.info(msg);\r\n      // });\r\n      liveListSourceRead$().subscribe(s => updateLiveAll(s));\r\n    };\r\n\r\n    /**\r\n     * Load live list action\r\n     */\r\n    const liveListLoad = () => {\r\n      if (liveListCacheBehaviorSubject.getValue() && !liveListCacheIsLoaded) {\r\n        liveListReload();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    const liveListReset = () => {\r\n      // liveListCache = [];\r\n      liveListCacheBehaviorSubject.next([]);\r\n    };\r\n\r\n    const svc = {\r\n      disableToastrValue,\r\n      liveListCache$,\r\n      liveListCacheIsLoaded,\r\n      liveListSourceRead$,\r\n      liveListLoad,\r\n      // getAllLive,\r\n      liveListReload,\r\n      liveListReset,\r\n      updateLiveAll\r\n    };\r\n\r\n    return svc;\r\n  }\r\n}\r\n\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { ContentType } from '../../models/eav';\r\n\r\nexport const LOAD_CONTENT_TYPE = 'LOAD_CONTENT_TYPE';\r\nexport const LOAD_CONTENT_TYPE_SUCCESS = 'LOAD_CONTENT_TYPE_SUCCESS';\r\n\r\nexport class LoadContentTypeAction implements Action {\r\n    readonly type = LOAD_CONTENT_TYPE;\r\n\r\n    constructor(public path: string) { }\r\n}\r\n\r\nexport class LoadContentTypeSuccessAction implements Action {\r\n    readonly type = LOAD_CONTENT_TYPE_SUCCESS;\r\n\r\n    constructor(public newContentType: ContentType) {\r\n    }\r\n}\r\n\r\nexport type Actions\r\n    = LoadContentTypeAction\r\n    | LoadContentTypeSuccessAction;\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { InputType } from '../../models/eav';\r\n\r\n// export const LOAD_INPUT_TYPE = 'LOAD_INPUT_TYPE';\r\nexport const LOAD_INPUT_TYPE_SUCCESS = 'LOAD_INPUT_TYPE_SUCCESS';\r\n\r\n\r\nexport class LoadInputTypeSuccessAction implements Action {\r\n    readonly type = LOAD_INPUT_TYPE_SUCCESS;\r\n\r\n    constructor(public newInputTypes: InputType[]) {\r\n    }\r\n}\r\n\r\nexport type Actions\r\n    = LoadInputTypeSuccessAction;\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { Item } from '../../models/eav/item';\r\nimport { EavAttributes, EavValue } from '../../models/eav';\r\nimport { EavValues } from '../../models/eav/eav-values';\r\n\r\nexport const LOAD_ITEM = '[Item] LOAD_ITEM';\r\nexport const LOAD_ITEM_SUCCESS = '[Item] LOAD_ITEM_SUCCESS';\r\nexport const UPDATE_ITEM = '[Item] UPDATE_ITEM';\r\nexport const UPDATE_ITEM_SUCCESS = '[Item] UPDATE_ITEM_SUCCESS';\r\n\r\nexport const ADD_ITEM_ATTRIBUTE = '[Item] ADD_ITEM_ATTRIBUTE';\r\nexport const UPDATE_ITEM_ATTRIBUTE = '[Item] UPDATE_ITEM_ATTRIBUTE';\r\n\r\nexport const ADD_ITEM_ATTRIBUTE_VALUE = '[Item] ADD_ITEM_ATTRIBUTE_VALUE';\r\nexport const UPDATE_ITEM_ATTRIBUTE_VALUE = '[Item] UPDATE_ITEM_ATTRIBUTE_VALUE';\r\nexport const UPDATE_ITEM_ATTRIBUTES_VALUES = '[Item] UPDATE_ITEM_ATTRIBUTES_VALUES';\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES';\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS';\r\nexport const SAVE_ITEM_ATTRIBUTES_VALUES_ERROR = '[Item] SAVE_ITEM_ATTRIBUTES_VALUES_ERROR';\r\n\r\nexport const ADD_ITEM_ATTRIBUTE_DIMENSION = '[Item] ADD_ITEM_ATTRIBUTE_DIMENSION';\r\nexport const UPDATE_ITEM_ATTRIBUTE_DIMENSION = '[Item] UPDATE_ITEM_ATTRIBUTE_DIMENSION';\r\nexport const REMOVE_ITEM_ATTRIBUTE_DIMENSION = '[Item] REMOVE_ITEM_ATTRIBUTE_DIMENSION';\r\n\r\nexport const DELETE_ITEM = '[Item] DELETE_ITEM';\r\n\r\n/**\r\n * Load\r\n */\r\nexport class LoadItemAction implements Action {\r\n    readonly type = LOAD_ITEM;\r\n    constructor(public path: string) { }\r\n}\r\nexport class LoadItemSuccessAction implements Action {\r\n    readonly type = LOAD_ITEM_SUCCESS;\r\n    constructor(public newItem: Item) { }\r\n}\r\n\r\n/**\r\n * Add\r\n */\r\nexport class AddItemAttributeAction implements Action {\r\n    readonly type = ADD_ITEM_ATTRIBUTE;\r\n    constructor(public id: number, public attribute: EavValues<any>, public attributeKey) { }\r\n}\r\n\r\nexport class AddItemAttributeValueAction implements Action {\r\n    readonly type = ADD_ITEM_ATTRIBUTE_VALUE;\r\n    constructor(public id: number, public attributeValue: EavValue<any>, public attributeKey) { }\r\n}\r\n\r\nexport class AddItemAttributeDimensionAction implements Action {\r\n    readonly type = ADD_ITEM_ATTRIBUTE_DIMENSION;\r\n    constructor(public id: number, public attributeKey: string, public dimensionValue: string,\r\n        public existingDimensionValue: string, public defaultLanguage: string, public isReadOnly: boolean) { }\r\n}\r\n\r\n/**\r\n * Update\r\n */\r\nexport class UpdateItemAction implements Action {\r\n    readonly type = UPDATE_ITEM;\r\n    constructor(public attributes: EavAttributes, public id: number) { }\r\n}\r\nexport class UpdateItemSuccessAction implements Action {\r\n    readonly type = UPDATE_ITEM_SUCCESS;\r\n    constructor(public item: Item) { }\r\n}\r\n\r\nexport class UpdateItemAttributeAction implements Action {\r\n    readonly type = UPDATE_ITEM_ATTRIBUTE;\r\n    constructor(public id: number, public attribute: EavValues<any>, public attributeKey: string) { }\r\n}\r\n\r\nexport class UpdateItemAttributeValueAction implements Action {\r\n    readonly type = UPDATE_ITEM_ATTRIBUTE_VALUE;\r\n    constructor(public id: number, public attributeKey: string, public attributeValue: string,\r\n        public existingLanguageKey: string, public defaultLanguage: string, public isReadOnly: boolean) { }\r\n}\r\n\r\nexport class UpdateItemAttributesValuesAction implements Action {\r\n    readonly type = UPDATE_ITEM_ATTRIBUTES_VALUES;\r\n    constructor(public id: number, public updateValues: { [key: string]: any },\r\n        public existingLanguageKey: string, public defaultLanguage: string) { }\r\n}\r\n\r\n/**\r\n * Save (submit)\r\n */\r\nexport class SaveItemAttributesValuesAction implements Action {\r\n    readonly type = SAVE_ITEM_ATTRIBUTES_VALUES;\r\n    constructor(public appId: number, public item: Item, public updateValues: { [key: string]: any },\r\n        public existingLanguageKey: string, public defaultLanguage: string) { }\r\n}\r\n\r\nexport class SaveItemAttributesValuesSuccessAction implements Action {\r\n    readonly type = SAVE_ITEM_ATTRIBUTES_VALUES_SUCCESS;\r\n    // TODO: finish this with true values\r\n    constructor(public data: any) { }\r\n}\r\n\r\nexport class SaveItemAttributesValuesErrorAction implements Action {\r\n    readonly type = SAVE_ITEM_ATTRIBUTES_VALUES_ERROR;\r\n    // TODO: finish this with true values\r\n    constructor(public error: any) { }\r\n}\r\n\r\n// export class UpdateItemAttributeDimensionAction implements Action {\r\n//     readonly type = UPDATE_ITEM_ATTRIBUTE_DIMENSION;\r\n//     constructor(public id: number, public attributeKey: string, public dimensionValue: string,\r\n//         public existingDimensionValue: string, public isReadOnly: boolean) { }\r\n// }\r\n\r\nexport class RemoveItemAttributeDimensionAction implements Action {\r\n    readonly type = REMOVE_ITEM_ATTRIBUTE_DIMENSION;\r\n    constructor(public id: number, public attributeKey: string, public dimensionValue: string) { }\r\n}\r\n/**\r\n * Delete\r\n */\r\nexport class DeleteItemAction implements Action {\r\n    readonly type = DELETE_ITEM;\r\n    constructor(public item: Item) { }\r\n}\r\n\r\nexport type Actions\r\n    = LoadItemAction\r\n    | LoadItemSuccessAction\r\n    | AddItemAttributeAction\r\n    | AddItemAttributeValueAction\r\n    | AddItemAttributeDimensionAction\r\n    | UpdateItemAction\r\n    | UpdateItemAttributeAction\r\n    | UpdateItemAttributeValueAction\r\n    | UpdateItemAttributesValuesAction\r\n    // | UpdateItemAttributeDimensionAction\r\n    | SaveItemAttributesValuesAction\r\n    | SaveItemAttributesValuesSuccessAction\r\n    | SaveItemAttributesValuesErrorAction\r\n    | UpdateItemSuccessAction\r\n    | UpdateItemAttributeAction\r\n    | RemoveItemAttributeDimensionAction\r\n    | DeleteItemAction;\r\n","import { Action } from '@ngrx/store';\r\nimport { Language } from '../../models/eav';\r\n\r\nexport const LOAD_LANGUAGES = '[Language] LOAD_LANGUAGES';\r\nexport const UPDATE_CURRENT_LANGUAGE = '[Language] UPDATE_CURRENT_LANGUAGE';\r\nexport const UPDATE_DEFAULT_LANGUAGE = '[Language] UPDATE_DEFAULT_LANGUAGE';\r\nexport const UPDATE_UI_LANGUAGE = '[Language] UPDATE_UI_LANGUAGE';\r\n\r\nexport class LoadLanguagesAction implements Action {\r\n    readonly type = LOAD_LANGUAGES;\r\n\r\n    constructor(public newLanguage: Language[],\r\n        public currentLanguage: string,\r\n        public defaultLanguage: string,\r\n        public uiLanguage: string) { }\r\n}\r\n\r\nexport class UpdateCurrentLanguageAction implements Action {\r\n    readonly type = UPDATE_CURRENT_LANGUAGE;\r\n\r\n    constructor(public currentLanguage: string) { }\r\n}\r\n\r\nexport class UpdateDefaultLanguageAction implements Action {\r\n    readonly type = UPDATE_DEFAULT_LANGUAGE;\r\n\r\n    constructor(public defaultLanguage: string) { }\r\n}\r\n\r\nexport class UpdateUILanguageAction implements Action {\r\n    readonly type = UPDATE_UI_LANGUAGE;\r\n\r\n    constructor(public uiLanguage: string) { }\r\n}\r\n\r\nexport type Actions\r\n    = LoadLanguagesAction\r\n    | UpdateCurrentLanguageAction\r\n    | UpdateDefaultLanguageAction\r\n    | UpdateUILanguageAction;\r\n","export * from './reducers';\r\nexport * from './selectors';\r\n","import { ContentType } from '../../models/eav';\r\nimport * as fromContentType from '../actions/content-type.actions';\r\n\r\nexport interface ContentTypeState {\r\n    contentTypes: ContentType[];\r\n}\r\n\r\nexport const initialState: ContentTypeState = {\r\n    contentTypes: []\r\n};\r\n\r\nexport function contentTypeReducer(state = initialState, action: fromContentType.Actions): ContentTypeState {\r\n    switch (action.type) {\r\n        case fromContentType.LOAD_CONTENT_TYPE_SUCCESS: {\r\n            // if contentType with same id exist in store don't load content\r\n            const contentTypes = state.contentTypes.filter(contentType =>\r\n                contentType.contentType.id === action.newContentType.contentType.id);\r\n            if (contentTypes.length === 0) {\r\n                return { contentTypes: [...state.contentTypes, action.newContentType] };\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getContentTypes = (state: ContentTypeState) => state.contentTypes;\r\n\r\n","import { ActionReducerMap, createFeatureSelector, ActionReducer, MetaReducer, } from '@ngrx/store';\r\nimport { storeFreeze } from 'ngrx-store-freeze';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\nimport * as fromItems from './item.reducer';\r\nimport * as fromInputTypes from './input-type.reducer';\r\nimport * as fromContentType from './content-type.reducer';\r\nimport * as fromLanguages from './language.reducer';\r\n\r\nexport interface EavState {\r\n    itemState: fromItems.ItemState;\r\n    inputTypeState: fromInputTypes.InputTypeState;\r\n    contentTypeState: fromContentType.ContentTypeState;\r\n    languages: fromLanguages.LanguagesState;\r\n}\r\n\r\n// console.log all actions\r\nexport function logger(reducer: ActionReducer<EavState>): ActionReducer<EavState> {\r\n    return function (state: EavState, action: any): EavState {\r\n        // console.log('[STORE] state', JSON.stringify(state));\r\n        console.log('[STORE] state', state);\r\n        console.log('[STORE] action', action);\r\n\r\n        return reducer(state, action);\r\n    };\r\n}\r\n\r\n/**\r\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\r\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\r\n * that will be composed to form the root meta-reducer.\r\n */\r\nexport const metaReducers: MetaReducer<any>[] = !environment.production\r\n    ? [logger, storeFreeze]\r\n    : [];\r\n\r\nexport const reducers: ActionReducerMap<EavState> = {\r\n    itemState: fromItems.itemReducer,\r\n    inputTypeState: fromInputTypes.inputTypeReducer,\r\n    contentTypeState: fromContentType.contentTypeReducer,\r\n    languages: fromLanguages.languageReducer,\r\n};\r\n\r\nexport const getEavState = createFeatureSelector<EavState>('eavItemDialog');\r\n\r\n","import { InputType } from '../../models/eav';\r\nimport * as fromInputType from '../actions/input-type.actions';\r\n\r\nexport interface InputTypeState {\r\n    inputTypes: InputType[];\r\n}\r\n\r\nexport const initialState: InputTypeState = {\r\n    inputTypes: []\r\n};\r\n\r\nexport function inputTypeReducer(state = initialState, action: fromInputType.Actions): InputTypeState {\r\n    switch (action.type) {\r\n        case fromInputType.LOAD_INPUT_TYPE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    inputTypes: [...action.newInputTypes]\r\n                }\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getInputTypes = (state: InputTypeState) => state.inputTypes;\r\n\r\n","import { Item } from '../../models/eav/item';\r\nimport * as fromItems from '../actions/item.actions';\r\nimport { LocalizationHelper } from '../../helpers/localization-helper';\r\n\r\n// export interface ItemState {\r\n//     items: Array<{\r\n//         header: EavHeader,\r\n//         entity: {\r\n//             id: number,\r\n//             version: string,\r\n//             guid: string,\r\n//             type: string,\r\n//             attributes: AttributesState,\r\n//             owner: string,\r\n//             metadata: any[],\r\n//         }\r\n//     }>;\r\n// }\r\n\r\n// export const initialState: ItemState = {\r\n//     items: []\r\n// };\r\n\r\nexport interface ItemState {\r\n    items: Item[];\r\n}\r\n\r\nexport const initialState: ItemState = {\r\n    items: []\r\n};\r\n\r\nexport function itemReducer(state = initialState, action: fromItems.Actions): ItemState {\r\n    switch (action.type) {\r\n        // case fromItems.LOAD_ITEM_SUCCESS: {\r\n        //     console.log('LOAD_ITEM_SUCCESS', action);\r\n        //     return {\r\n        //         ...state,\r\n        //         ...{ items: [...state.items, action.newItem] }\r\n        //     };\r\n        // }\r\n        case fromItems.LOAD_ITEM_SUCCESS: {\r\n            // if item with same id not exist in store add item else overwrite item\r\n            const itemExist = state.items.filter(data =>\r\n                data.entity.id === action.newItem.entity.id);\r\n            if (itemExist.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    ...{ items: [...state.items, action.newItem] }\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    ...{\r\n                        items: state.items.map(item => {\r\n                            return item.entity.id === action.newItem.entity.id\r\n                                ? action.newItem\r\n                                : item;\r\n                        })\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case fromItems.UPDATE_ITEM: {\r\n            console.log('action.attributes', action.attributes);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: { ...item.entity.attributes, ...action.attributes },\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.UPDATE_ITEM_ATTRIBUTE: {\r\n            console.log('action.attribute', action.attribute);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: LocalizationHelper.updateAttribute(item.entity.attributes, action.attribute,\r\n                                        action.attributeKey)\r\n\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.UPDATE_ITEM_ATTRIBUTE_VALUE: {\r\n            // console.log('action.attribute', action.attribute);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: LocalizationHelper.updateAttributeValue(item.entity.attributes, action.attributeKey,\r\n                                        action.attributeValue, action.existingLanguageKey, action.defaultLanguage, action.isReadOnly)\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.SAVE_ITEM_ATTRIBUTES_VALUES: {\r\n            console.log('action.attribute', action);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.item.entity.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: LocalizationHelper.updateAttributesValues(item.entity.attributes,\r\n                                        action.updateValues, action.existingLanguageKey, action.defaultLanguage)\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.UPDATE_ITEM_ATTRIBUTES_VALUES: {\r\n            console.log('action.attribute', action);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: LocalizationHelper.updateAttributesValues(item.entity.attributes,\r\n                                        action.updateValues, action.existingLanguageKey, action.defaultLanguage)\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.ADD_ITEM_ATTRIBUTE_VALUE: {\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: LocalizationHelper.addAttributeValue(item.entity.attributes,\r\n                                        action.attributeValue, action.attributeKey)\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.ADD_ITEM_ATTRIBUTE_DIMENSION: {\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: LocalizationHelper.addAttributeDimension(item.entity.attributes,\r\n                                        action.attributeKey, action.dimensionValue, action.existingDimensionValue,\r\n                                        action.defaultLanguage, action.isReadOnly)\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.REMOVE_ITEM_ATTRIBUTE_DIMENSION: {\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.map(item => {\r\n                        return item.entity.id === action.id\r\n                            ? {\r\n                                ...item,\r\n                                entity: {\r\n                                    ...item.entity,\r\n                                    attributes: LocalizationHelper.removeAttributeDimension(item.entity.attributes,\r\n                                        action.attributeKey, action.dimensionValue)\r\n                                }\r\n                            }\r\n                            : item;\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        case fromItems.DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    items: state.items.filter(item => item.entity.id !== action.item.entity.id)\r\n                }\r\n            };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getItems = (state: ItemState) => state.items;\r\n","import * as fromLanguages from '../actions/language.actions';\r\nimport { Language } from '../../models/eav/language';\r\n\r\n\r\nexport interface LanguagesState {\r\n    languages: Language[];\r\n    currentLanguage: string;\r\n    defaultLanguage: string;\r\n    uiLanguage: string;\r\n}\r\n\r\nexport const initialState: LanguagesState = {\r\n    languages: [],\r\n    currentLanguage: 'en-us',\r\n    defaultLanguage: 'en-us',\r\n    uiLanguage: 'en-us',\r\n\r\n};\r\n\r\nexport function languageReducer(state = initialState, action: fromLanguages.Actions): LanguagesState {\r\n    switch (action.type) {\r\n        case fromLanguages.LOAD_LANGUAGES: {\r\n            // console.log('loadsuccess item: ', action.newItem);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    languages: [...action.newLanguage],\r\n                    currentLanguage: action.currentLanguage,\r\n                    defaultLanguage: action.defaultLanguage,\r\n                    uiLanguage: action.uiLanguage,\r\n                }\r\n            };\r\n        }\r\n        case fromLanguages.UPDATE_CURRENT_LANGUAGE: {\r\n            console.log('action.attributes', action.currentLanguage);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    currentLanguage: action.currentLanguage\r\n                }\r\n            };\r\n        }\r\n        case fromLanguages.UPDATE_DEFAULT_LANGUAGE: {\r\n            console.log('action.attributes', action.defaultLanguage);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    defaultLanguage: action.defaultLanguage\r\n                }\r\n            };\r\n        }\r\n        case fromLanguages.UPDATE_UI_LANGUAGE: {\r\n            console.log('action.attributes', action.uiLanguage);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    uiLanguage: action.uiLanguage\r\n                }\r\n            };\r\n        }\r\n        // case fromItems.DELETE_ITEM:\r\n        //     return {\r\n        //         ...state,\r\n        //         ...{\r\n        //             items: state.items.filter(item => item.entity.id !== action.item.entity.id)\r\n        //         }\r\n        //     };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getLanguages = (state: LanguagesState) => state.languages;\r\nexport const getCurrentLanguage = (state: LanguagesState) => state.currentLanguage;\r\nexport const getDefaultLanguage = (state: LanguagesState) => state.defaultLanguage;\r\nexport const getUILanguage = (state: LanguagesState) => state.uiLanguage;\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromContentType from '../reducers/content-type.reducer';\r\n\r\nexport const getContentTypeState = createSelector(\r\n    fromFeature.getEavState,\r\n    (state: fromFeature.EavState) => state.contentTypeState\r\n);\r\n\r\nexport const getContentTypes = createSelector(getContentTypeState, fromContentType.getContentTypes);\r\n","export * from './items.selectors';\r\nexport * from './input-type.selectors';\r\nexport * from './content-type.selectors';\r\nexport * from './language.selectors';\r\n\r\n\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromInputType from '../reducers/input-type.reducer';\r\n\r\nexport const getInputTypeState = createSelector(\r\n    fromFeature.getEavState,\r\n    (state: fromFeature.EavState) => state.inputTypeState\r\n);\r\n\r\nexport const getInputTypes = createSelector(getInputTypeState, fromInputType.getInputTypes);\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromItems from '../reducers/item.reducer';\r\nimport { find } from 'rxjs/operators';\r\nimport { Item } from '../../models/eav';\r\n\r\nexport const getItemState = createSelector(\r\n    fromFeature.getEavState,\r\n    (state: fromFeature.EavState) => state.itemState\r\n);\r\n\r\nexport const getItems = createSelector(getItemState, fromItems.getItems);\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromLanguage from '../reducers/language.reducer';\r\n\r\nexport const getLanguageState = createSelector(\r\n    fromFeature.getEavState,\r\n    (state: fromFeature.EavState) => state.languages\r\n);\r\n\r\nexport const getLanguages = createSelector(getLanguageState, fromLanguage.getLanguages);\r\nexport const getCurrentLanguage = createSelector(getLanguageState, fromLanguage.getCurrentLanguage);\r\nexport const getDefaultLanguage = createSelector(getLanguageState, fromLanguage.getDefaultLanguage);\r\nexport const getUILanguage = createSelector(getLanguageState, fromLanguage.getUILanguage);\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n  window.console.log = function () { };\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}