{"version":3,"sources":["./src/app/import-app/import-app.component.html","./src/app/import-app/import-app-dialog.config.ts","./src/app/import-app/import-app-routing.module.ts","./src/app/import-app/import-app.component.scss","./src/app/import-app/import-app.component.ts","./src/app/import-app/import-app.module.ts","./src/app/import-app/services/import-app.service.ts"],"names":[],"mappings":"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","file":"import-app-import-app-module.js","sourcesContent":["export default \"<div mat-dialog-title>\\r\\n  <div class=\\\"dialog-title-box\\\">Import App</div>\\r\\n</div>\\r\\n\\r\\n<mat-spinner *ngIf=\\\"isImporting\\\" mode=\\\"indeterminate\\\" diameter=\\\"20\\\" color=\\\"accent\\\"></mat-spinner>\\r\\n\\r\\n<div *ngIf=\\\"!importResult || (importResult && !importResult.Messages)\\\">\\r\\n  <p class=\\\"dialog-description\\\">\\r\\n    Select an app package (zip) from your computer to import an app. New apps can be downloaded on\\r\\n    <a href=\\\"http://2sxc.org/apps\\\">http://2sxc.org/apps</a>.\\r\\n    For further help visit <a href=\\\"http://2sxc.org/en/help?tag=import-app\\\" target=\\\"_blank\\\">2sxc Help</a>.\\r\\n  </p>\\r\\n\\r\\n  <div>\\r\\n    <button mat-raised-button matTooltip=\\\"Open file browser\\\" (click)=\\\"fileInput.click()\\\">\\r\\n      <span *ngIf=\\\"!importFile\\\">Select file</span>\\r\\n      <span *ngIf=\\\"importFile\\\">{{ importFile.name }}</span>\\r\\n    </button>\\r\\n    <input #fileInput type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" class=\\\"hide\\\" />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"dialog-actions-box\\\">\\r\\n    <button mat-raised-button (click)=\\\"closeDialog()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!importFile || isImporting\\\"\\r\\n      (click)=\\\"importApp()\\\">Import</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"importResult && importResult.Messages && !isImporting\\\">\\r\\n  <div *ngIf=\\\"importResult.Succeeded\\\" class=\\\"sxc-message sxc-message-info\\\">\\r\\n    The import has been done. See the messages below for more information.\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!importResult.Succeeded\\\" class=\\\"sxc-message sxc-message-error\\\">\\r\\n    The import failed. See the messages below for more information.\\r\\n  </div>\\r\\n  <div *ngFor=\\\"let message of importResult.Messages\\\" class=\\\"sxc-message\\\" [ngClass]=\\\"{\\r\\n    'sxc-message-warning': message.MessageType == 0,\\r\\n    'sxc-message-success': message.MessageType == 1,\\r\\n    'sxc-message-error': message.MessageType == 2\\r\\n  }\\\">\\r\\n    {{ message.Text }}\\r\\n  </div>\\r\\n  <div class=\\\"dialog-actions-box\\\">\\r\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"closeDialog()\\\">Close</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { DialogConfig } from '../shared/models/dialog-config.model';\r\n\r\nexport const importAppDialog: DialogConfig = {\r\n  name: 'IMPORT_APP_DIALOG',\r\n  initContext: true,\r\n  panelSize: 'medium',\r\n  panelClass: null,\r\n\r\n  async getComponent() {\r\n    const { ImportAppComponent } = await import('./import-app.component');\r\n    return ImportAppComponent;\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DialogEntryComponent } from '../shared/components/dialog-entry/dialog-entry.component';\r\nimport { importAppDialog } from './import-app-dialog.config';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DialogEntryComponent, data: { dialog: importAppDialog } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ImportAppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9uZy1kaWFsb2dzL3NyYy9hcHAvaW1wb3J0LWFwcC9pbXBvcnQtYXBwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { ImportAppService } from './services/import-app.service';\r\nimport { ImportAppResult } from './models/import-app-result.model';\r\n\r\n@Component({\r\n  selector: 'app-import-app',\r\n  templateUrl: './import-app.component.html',\r\n  styleUrls: ['./import-app.component.scss']\r\n})\r\nexport class ImportAppComponent implements OnInit {\r\n  isImporting = false;\r\n  importFile: File;\r\n  importResult: ImportAppResult;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ImportAppComponent>, private importAppService: ImportAppService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  importApp(changedName?: string) {\r\n    this.isImporting = true;\r\n\r\n    this.importAppService.importApp(this.importFile, changedName).subscribe({\r\n      next: result => {\r\n        this.isImporting = false;\r\n\r\n        this.importResult = result;\r\n        // The app could not be installed because the app-folder already exists. Install app in a different folder?\r\n        if (this.importResult && this.importResult.Messages && this.importResult.Messages[0]\r\n          && this.importResult.Messages[0].MessageType === 0) {\r\n          const folderName = prompt(this.importResult.Messages[0].Text + ' Would you like to install it using another folder name?');\r\n          if (folderName) {\r\n            this.importApp(folderName);\r\n          }\r\n        }\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        this.isImporting = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  fileChange(event: Event) {\r\n    this.importFile = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { ImportAppRoutingModule } from './import-app-routing.module';\r\nimport { ImportAppComponent } from './import-app.component';\r\nimport { Context } from '../shared/services/context';\r\nimport { SharedComponentsModule } from '../shared/shared-components.module';\r\nimport { ImportAppService } from './services/import-app.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImportAppComponent,\r\n  ],\r\n  entryComponents: [\r\n    ImportAppComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ImportAppRoutingModule,\r\n    SharedComponentsModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n  ],\r\n  providers: [\r\n    Context,\r\n    ImportAppService,\r\n  ]\r\n})\r\nexport class ImportAppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Context as DnnContext } from '@2sic.com/dnn-sxc-angular';\r\n\r\nimport { Context } from '../../shared/services/context';\r\nimport { ImportAppResult } from '../models/import-app-result.model';\r\n\r\n@Injectable()\r\nexport class ImportAppService {\r\n  constructor(private http: HttpClient, private context: Context, private dnnContext: DnnContext) { }\r\n\r\n  importApp(file: File, changedName: string) {\r\n    const formData = new FormData();\r\n    formData.append('AppId', this.context.appId.toString());\r\n    formData.append('ZoneId', this.context.zoneId.toString());\r\n    formData.append('File', file);\r\n    formData.append('Name', changedName ? changedName : '');\r\n    return this.http.post(this.dnnContext.$2sxc.http.apiUrl('app-sys/ImportExport/ImportApp'), formData) as Observable<ImportAppResult>;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}