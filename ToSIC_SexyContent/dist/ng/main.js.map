{"version":3,"sources":["./src/app/app.component.html","./src/app/installer/installer.component.html","./src/app/template-picker/template-picker.component.html","./src/app/version-dialog/dialog.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/config.ts","./src/app/core/app.ts","./src/app/core/behavior-observable.ts","./src/app/core/boot-control.ts","./src/app/core/constants.ts","./src/app/core/core.module.ts","./src/app/core/log.ts","./src/app/debug-config.ts","./src/app/i18n/index.ts","./src/app/installer/getting-started.service.ts","./src/app/installer/installer.component.scss","./src/app/installer/installer.component.ts","./src/app/installer/installer.module.ts","./src/app/installer/installer.service.ts","./src/app/material-module.ts","./src/app/template-picker/constants.ts","./src/app/template-picker/current-data.service.ts","./src/app/template-picker/data/content-types-processor.service.ts","./src/app/template-picker/data/template-processor.ts","./src/app/template-picker/debug.pipe.ts","./src/app/template-picker/picker.service.ts","./src/app/template-picker/template-filter.pipe.ts","./src/app/template-picker/template-picker.component.scss","./src/app/template-picker/template-picker.component.ts","./src/app/template-picker/template-picker.module.ts","./src/app/version-dialog/dialog.component.scss","./src/app/version-dialog/dialog.component.ts","./src/app/version-dialog/sxc-versions.service.ts","./src/app/version-dialog/version-dialog.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<app-template-picker *ngIf=\\\"name === 'dash-view' || name === 'layout'\\\"></app-template-picker>\"","export default \"<div class=\\\"progress\\\" *ngIf=\\\"showProgress\\\">\\r\\n  <mat-progress-spinner [mode]=\\\"'indeterminate'\\\"></mat-progress-spinner>\\r\\n  <span>Installing {{ currentPackage?.displayName }}..</span>\\r\\n</div>\\r\\n<div *ngIf=\\\"ready\\\">\\r\\n  <iframe class=\\\"fr-getting-started\\\" id=\\\"frGettingStarted\\\" [src]=\\\"remoteInstallerUrl\\\" width=\\\"100%\\\" height=\\\"300px\\\"></iframe>\\r\\n</div>\\r\\n\"","export default \"\\r\\n<div class=\\\"content\\\">\\r\\n\\r\\n  <!-- debug info section -->\\r\\n  <div *ngIf=\\\"showDebug\\\">\\r\\n    <h4>Debug</h4>\\r\\n    <ul>\\r\\n      <li>Types: {{ types?.length }}, current: {{contentType?.StaticName}}</li>\\r\\n      <li>Apps: {{ (apps$ | async)?.length }}, current: {{app?.AppId }} </li>\\r\\n      <li>Templates: {{templates?.length}}, current: {{template?.TemplateId}}</li>\\r\\n      <li>Config: isContent='{{isContent}}' Ready: {{ready}} </li>\\r\\n      <li>Tab to show: '{{tabIndex}}' / preventTypeSwitch '{{preventTypeSwitch}}' / preventAppSwitch '{{preventAppSwich}}'</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <!-- loading indicator -->\\r\\n  <mat-progress-bar [ngStyle]=\\\"{ opacity: ready ? 0 : 1 }\\\" [mode]=\\\"'indeterminate'\\\"></mat-progress-bar>\\r\\n\\r\\n  <!-- main dialog, starting with save/cancel button -->\\r\\n  <div class=\\\"card\\\"\\r\\n    [ngClass]=\\\"{ blocked: !ready }\\\"\\r\\n  >\\r\\n    <div class=\\\"top-controls\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <button mat-fab *ngIf=\\\"template\\\" (click)=\\\"persistTemplate(template)\\\" [attr.title]=\\\"'TemplatePicker.Save' | translate\\\">\\r\\n        <mat-icon>check</mat-icon>\\r\\n      </button>\\r\\n      <button mat-mini-fab class=\\\"secondary\\\" *ngIf=\\\"showCancel\\\" (click)=\\\"cancel()\\\" [attr.title]=\\\"('TemplatePicker.' + (isContent ? 'Cancel' : 'Close')) | translate\\\">\\r\\n        <mat-icon>close</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <!-- tabs -->\\r\\n    <mat-tab-group [(selectedIndex)]=\\\"tabIndex\\\">\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          {{(isContent \\r\\n            ? (contentType?.Name || ('TemplatePicker.ContentTypePickerDefault' | translate)) \\r\\n            : (app?.Name || ('TemplatePicker.AppPickerDefault' | translate)))}}\\r\\n        </ng-template>\\r\\n\\r\\n        <!-- App Selector -->\\r\\n        <div *ngIf=\\\"!isContent; else contentApp\\\" class=\\\"tiles\\\">\\r\\n\\r\\n          <div class=\\\"tile\\\" \\r\\n            [ngClass]=\\\"{ active: app?.AppId === a.AppId, blocked: preventTypeSwitch }\\\" \\r\\n            [attr.title]=\\\"a.Name\\\" \\r\\n            (click)=\\\"selectApp(app, a)\\\"\\r\\n            (dblclick)=\\\"switchTab()\\\" *ngFor=\\\"let a of apps$ | async\\\">\\r\\n            <div class=\\\"bg\\\">\\r\\n              <img *ngIf=\\\"a.Thumbnail !== null && a.Thumbnail !== ''\\\" class=\\\"bg-img\\\" [attr.src]=\\\"a.Thumbnail + '?w=176&h=176'\\\">\\r\\n              <div *ngIf=\\\"a.Thumbnail === null || a.Thumbnail === ''\\\" class=\\\"bg-icon\\\">\\r\\n                <mat-icon>star</mat-icon>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"version\\\"><span>v{{a.VersionMain}}</span></div>\\r\\n\\r\\n            <div class=\\\"title\\\" [ngClass]=\\\"{ show: a.Thumbnail === null || a.Thumbnail === '' }\\\">\\r\\n              <span>{{a.Name}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- install and manage buttons -->\\r\\n          <div class=\\\"tile config\\\" *ngIf=\\\"showAdvanced\\\" (click)=\\\"run('app-import')\\\" [attr.title]=\\\"'TemplatePicker.Install' | translate\\\">\\r\\n            <div class=\\\"bg\\\">\\r\\n              <div class=\\\"bg-icon\\\">\\r\\n                <mat-icon>get_app</mat-icon>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"title show\\\">\\r\\n              <span>{{\\\"TemplatePicker.Install\\\" | translate}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"tile config\\\" *ngIf=\\\"showAdvanced\\\" (click)=\\\"run('zone')\\\" [attr.title]=\\\"'TemplatePicker.Zone' | translate\\\">\\r\\n            <div class=\\\"bg\\\">\\r\\n              <div class=\\\"bg-icon\\\">\\r\\n                <mat-icon>apps</mat-icon>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"title show\\\">\\r\\n              <span>{{\\\"TemplatePicker.Zone\\\" | translate}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Content-Type selection (when not a generic app, but the default content-app -->\\r\\n        <ng-template #contentApp>\\r\\n          <div class=\\\"tiles\\\">\\r\\n            <div mat-button class=\\\"tile\\\" \\r\\n              [ngClass]=\\\"{ active: contentType?.StaticName === c.StaticName, blocked: preventTypeSwitch }\\\"\\r\\n              [attr.title]=\\\"(c.Label | translate) + (showDebug ? ' (' + c.StaticName + ')' : '')\\\" \\r\\n              (click)=\\\"selectContentType(contentType, c)\\\"\\r\\n              (dblclick)=\\\"switchTab()\\\" \\r\\n              *ngFor=\\\"let c of types\\\"\\r\\n            >\\r\\n              <div class=\\\"bg\\\">\\r\\n                <img *ngIf=\\\"c.Thumbnail !== null && c.Thumbnail !== ''\\\" class=\\\"bg-img\\\" [attr.src]=\\\"c.Thumbnail + '?w=176&h=176'\\\">\\r\\n                <div *ngIf=\\\"c.Thumbnail === null || c.Thumbnail === ''\\\" class=\\\"bg-icon\\\">\\r\\n                  <mat-icon>bubble_chart</mat-icon>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"title\\\" [ngClass]=\\\"{ show: c.Thumbnail === null || c.Thumbnail === '' }\\\">\\r\\n                <span>{{c.Label}}</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n\\r\\n      <!-- template selection after app/content-type selection -->\\r\\n      <mat-tab *ngIf=\\\"isContent ? contentType : app\\\" [label]=\\\"('TemplatePicker.ChangeView' | translate) + '(' + templates.length + ')'\\\">\\r\\n        <div class=\\\"tiles\\\">\\r\\n          <mat-spinner class=\\\"templates-spinner\\\" *ngIf=\\\"templatesLoading$ | async\\\"></mat-spinner>\\r\\n          <div class=\\\"tile\\\" \\r\\n            [ngClass]=\\\"{ active: template?.TemplateId === t.TemplateId }\\\" \\r\\n            [attr.title]=\\\"t.Name + (showDebug ? ' (' + t.TemplateId + ')' : '')\\\" \\r\\n            (click)=\\\"selectTemplate(t)\\\"\\r\\n            *ngFor=\\\"let t of templates\\\">\\r\\n            <div class=\\\"bg\\\">\\r\\n              <img *ngIf=\\\"t.Thumbnail !== null && t.Thumbnail !== ''\\\" class=\\\"bg-img\\\" [attr.src]=\\\"t.Thumbnail + '?w=176&h=176'\\\">\\r\\n              <div *ngIf=\\\"t.Thumbnail === null || t.Thumbnail === ''\\\" class=\\\"bg-icon\\\">\\r\\n                <mat-icon *ngIf=\\\"isContent\\\">view_carousel</mat-icon>\\r\\n                <mat-icon *ngIf=\\\"!isContent\\\">view_quilt</mat-icon>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"title\\\" [ngClass]=\\\"{ show: t.Thumbnail === null || t.Thumbnail === '' }\\\">\\r\\n              <span>{{t.Name}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"tile config\\\" *ngIf=\\\"showAdvanced && !isContent && app?.AppId !== null\\\" (click)=\\\"run('app')\\\" [attr.title]=\\\"'TemplatePicker.App' | translate\\\">\\r\\n            <div class=\\\"bg\\\">\\r\\n              <div class=\\\"bg-icon\\\">\\r\\n                <mat-icon>settings</mat-icon>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"title show\\\">\\r\\n              <span>{{\\\"TemplatePicker.App\\\" | translate}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n    <span class=\\\"no-install-allowed\\\" *ngIf=\\\"isBadContextForInstaller && showInstaller\\\">No {{isContent ? 'Content Apps' : 'Apps'}} installed yet. Please persue the installation by creating a new {{isContent ? 'Content' : 'App'}} in the root of your website.</span>\\r\\n    <app-installer *ngIf=\\\"!isBadContextForInstaller && showInstaller\\\" [isContentApp]=\\\"isContent\\\"></app-installer>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \" <mat-toolbar color=\\\"primary\\\">\\r\\n  <span class=\\\"title\\\">{{\\\"ItemHistory.Title\\\" | translate}}</span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <button mat-dialog-close mat-icon-button>\\r\\n    <mat-icon class=\\\"example-icon\\\">close</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"table\\\">\\r\\n  <div class=\\\"no-items\\\" *ngIf=\\\"sxcVersion.error | async\\\">{{'ItemHistory.NoHistory' | translate}}</div>\\r\\n  <div class=\\\"no-items\\\" *ngIf=\\\"(sxcVersion.versions | async)?.length === 0\\\">{{'ItemHistory.NoHistory' | translate}}</div>\\r\\n  <div class=\\\"record\\\" *ngFor=\\\"let version of sxcVersion.versions | async\\\">\\r\\n    <mat-expansion-panel>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title fxFlex=\\\"108px\\\">{{\\\"ItemHistory.Version\\\" | translate:({version:version.VersionNumber})}}</mat-panel-title>\\r\\n        <mat-panel-description>{{version.TimeStamp}}</mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div class=\\\"detail\\\">\\r\\n        <div fxLayout=\\\"row\\\" [class.changed]=\\\"data.hasChanged\\\" *ngFor=\\\"let data of version.Data\\\">\\r\\n          <div fxFlex=\\\"160px\\\" class=\\\"label\\\">{{data.key}}:</div>\\r\\n          <div fxFlex [class.expand]=\\\"data.expand\\\" class=\\\"value\\\" title=\\\"expand content\\\" (click)=\\\"data.expand=!data.expand\\\">\\r\\n            <div class=\\\"lang-wrapper\\\" *ngFor=\\\"let val of data.value\\\">\\r\\n              <div *ngIf=\\\"data.value.length > 0\\\" class=\\\"lang\\\">{{val[0]}}</div>\\r\\n              <div [innerHTML]=\\\"val[1]\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div flex=\\\"nogrow\\\" *ngIf=\\\"data.value.length > 1\\\">\\r\\n            <i *ngFor=\\\"let val of data.value\\\">[{{val[0]}}]&nbsp;</i>\\r\\n          </div>\\r\\n          <i flex=\\\"nogrow\\\">[{{data.type}}]</i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <mat-action-row>\\r\\n        <button mat-button (click)=\\\"restoreLive(version)\\\">{{'ItemHistory.Buttons.RestoreLive' | translate}}</button>\\r\\n      </mat-action-row>\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \":host {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4iXX0= */\"","import { TranslateService } from '@ngx-translate/core';\r\nimport { Component, ElementRef } from '@angular/core';\r\nimport { DialogComponent } from 'app/version-dialog/dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IDialogFrameElement } from './interfaces-shared/idialog-frame-element';\r\nimport { log } from './core/log';\r\nimport { DnnAppComponent, Context } from '@2sic.com/dnn-sxc-angular';\r\nimport { SxcRoot } from '../../../sxc-typings';\r\nimport { Config } from './config';\r\nimport { SupportedLanguages } from './i18n';\r\n\r\ndeclare const window: any, $2sxc: SxcRoot;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent extends DnnAppComponent {\r\n  name: string;\r\n\r\n  constructor(\r\n    public translate: TranslateService,\r\n    private dialog: MatDialog,\r\n    el: ElementRef,\r\n    context: Context\r\n  ) {\r\n    super(el, context.preConfigure({ sxc: Config.getSxcInstance() }), false);\r\n    translate.addLangs(SupportedLanguages);\r\n    translate.setDefaultLang(Config.langPri());\r\n    translate.use(Config.lang());\r\n    this.name = Config.dialog();\r\n    log.add(`loading '${this.name}'`);\r\n    const frame = <IDialogFrameElement>window.frameElement;\r\n    if (this.name === 'item-history') {\r\n      this.dialog.open(DialogComponent).afterClosed()\r\n        .subscribe(() => frame.bridge.hide());\r\n    }\r\n  }\r\n}\r\n","import { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DnnInterceptor } from '@2sic.com/dnn-sxc-angular';\r\nimport { AppComponent } from './app.component';\r\nimport { TemplatePickerModule } from 'app/template-picker/template-picker.module';\r\nimport { VersionDialogModule } from 'app/version-dialog/version-dialog.module';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { MaterialModule } from './material-module';\r\nimport { log } from './core/log';\r\nimport { pathToI18n } from './i18n';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  const loader = new TranslateHttpLoader(http, pathToI18n, '.js');\r\n  log.add('created translate-loader', loader);\r\n  return loader;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  exports: [ ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    TemplatePickerModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    MaterialModule, // must be after BrowserModule\r\n    VersionDialogModule,\r\n  ],\r\n  providers: [ DnnInterceptor\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { SxcRoot } from '../../../sxc-typings';\r\n\r\ndeclare const $2sxc: SxcRoot;\r\n\r\nexport class Config {\r\n  static appId = () => get('appId');\r\n  static apps = () => get('apps');\r\n\r\n  static item = () => JSON.parse(req('items'))[0];\r\n\r\n  static lang = () => req('lang').split('-')[0];\r\n  static langPri = () => req('langpri').split('-')[0];\r\n\r\n  static moduleId = () => Number(req('mid'));\r\n  static cbId = () => Number(req('cbid'));\r\n  static dialog = () => req('dialog');\r\n\r\n  static getSxcInstance = () => $2sxc(Config.moduleId(), Config.cbId());\r\n}\r\n\r\n\r\nfunction req(key) { return $2sxc.urlParams.require(key); }\r\n\r\nfunction get(key) { return $2sxc.urlParams.get(key); }\r\n","export class App {\r\n    AppId: number;\r\n    Name: string;\r\n    Thumbnail: string;\r\n    SupportsAjaxReload: boolean;\r\n    Version: string;\r\n    VersionMain: number;\r\n\r\n    constructor(json: any) {\r\n        Object.assign(this, json);\r\n\r\n        try {\r\n            this.VersionMain = parseInt(this.Version.substr(0,2));\r\n        } catch(e) { /* ignore */}\r\n    }\r\n\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n// Todo: probably not needed any more, since now Subjects are automatically observables\r\nexport class BehaviorObservable<T> extends Observable<T> {\r\n  private constructor() {\r\n    super();\r\n  }\r\n  /** The source subject */\r\n  subject: BehaviorSubject<T>;\r\n\r\n  /** will reset back to the initial value */\r\n  reset: () => void;\r\n\r\n  /** check if it's the initial object */\r\n  isInitial: () => boolean;\r\n\r\n  /** the initial object */\r\n  initialValue: T;\r\n\r\n  /** shorthand to push next value */\r\n  next: (value: T) => void;\r\n\r\n  static create<T>(initialValue: T): BehaviorObservable<T> {\r\n    const subj = new BehaviorSubject<T>(initialValue);\r\n    const obs = subj.asObservable() as BehaviorObservable<T>;\r\n    obs.initialValue = initialValue;\r\n    obs.subject = subj;\r\n    obs.reset = () => {\r\n      obs.subject.next(obs.initialValue);\r\n    };\r\n    obs.isInitial = () => {\r\n      return obs.subject.value === obs.initialValue;\r\n    };\r\n    obs.next = (value: T) => obs.subject.next(value);\r\n    return obs;\r\n  }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { log as parentLog } from './log';\r\n\r\nconst log = parentLog.subLog('boot-controller');\r\n/**\r\n * Special reboot controller, to restart the angular app\r\n * when critical parameters were changed\r\n */\r\nexport class BootController {\r\n  private static instance: BootController;\r\n  private _reboot: Subject<boolean> = new Subject();\r\n  rebootRequest$ = this._reboot.asObservable();\r\n\r\n  static getRebootController() {\r\n    log.add('getRebootController()');\r\n    if (!BootController.instance) {\r\n      BootController.instance = new BootController();\r\n    }\r\n    return BootController.instance;\r\n  }\r\n\r\n  public reboot() {\r\n    log.add('restarting...');\r\n    this._reboot.next(true);\r\n  }\r\n}\r\n","export const Constants = {\r\n  logName: 'quick-edit',\r\n  apiRoot: 'view/Module/'\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { GettingStartedService } from 'app/installer/getting-started.service';\r\nimport { PickerService } from 'app/template-picker/picker.service';\r\nimport { CurrentDataService } from 'app/template-picker/current-data.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    GettingStartedService,\r\n    PickerService,\r\n    CurrentDataService,\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { Constants } from './constants';\r\nimport { DebugConfig } from 'app/debug-config';\r\n\r\n\r\nexport class Log {\r\n  /** global state to determine if logging to console should be done or not */\r\n  public static forceLogToConsole = false;\r\n\r\n  name = '';\r\n  autoDump = DebugConfig.logger.logToConsole;\r\n  logs = new Array<string>();\r\n  parent: Log;\r\n  loggers: any = new Object();\r\n\r\n  constructor (name?: string, parent?: Log) {\r\n    this.name = name;\r\n    this.parent = parent;\r\n  }\r\n\r\n  add(msg: string, ...args: any[]): void {\r\n    this.logs.push(msg);\r\n    if (this.name) msg = this.name + ':' + msg;\r\n    if (this.parent) this.parent.logs.push(msg);\r\n    if (this.autoDump || Log.forceLogToConsole) {\r\n      arguments[0] = Constants.logName + ': ' + msg;\r\n      console.log.apply(null, arguments);\r\n    }\r\n  }\r\n\r\n  subLog(name: string, autoDump?: boolean): Log {\r\n    const newLog = new Log(name, this);\r\n    this.loggers[name] = newLog;\r\n    newLog.autoDump = typeof(autoDump) === 'boolean'\r\n      ? autoDump : this.autoDump;\r\n    if (DebugConfig.logger.internals)\r\n      this.add(`logger: subLog(${name}, ${autoDump}) resulting in autoDump=${newLog.autoDump}`);\r\n\r\n    return newLog;\r\n  }\r\n\r\n  dump(): void {\r\n    this.add('dumping to console');\r\n    console.log(`Log dump for '${this.name}'`, this);\r\n  }\r\n\r\n  public static configureRuntimeLogging(state: boolean) {\r\n    if(DebugConfig.logger.urlDebugActivatesLive)\r\n      Log.forceLogToConsole = state;\r\n  }\r\n}\r\n\r\n\r\nexport const log = new Log();\r\n\r\nwindow['logger'] = log;\r\n","\r\n/** configuration what to debug directly to the screen and what to keep secret */\r\nexport const DebugConfig = {\r\n\r\n  /** logger configuration */\r\n  logger: {\r\n    /** should we stream messages directly to console */\r\n    logToConsole: false,\r\n    /** should we also log internal events */\r\n    internals: false,\r\n    /** allow url param ?debug=true to turn on logging */\r\n    urlDebugEnablesAll: true,\r\n    /** if url param ?debug=true also enables all live-logging */\r\n    urlDebugActivatesLive: true\r\n  },\r\n\r\n  /** api debugging */\r\n  api: {\r\n    enabled: false,\r\n    streams: false,\r\n  },\r\n\r\n  /** template picker */\r\n  picker: {\r\n    enabled: false,\r\n    streams: false,\r\n    showDebugPanel: false\r\n  },\r\n\r\n  /** template state */\r\n  state: {\r\n    enabled: false,\r\n    streams: false,\r\n    inits: false,\r\n  },\r\n\r\n  /** content-type processor */\r\n  typeProcessor: false,\r\n  /** template processor */\r\n  templateProcessor: false,\r\n};\r\n","\r\nexport const SupportedLanguages = ['en', 'de', 'es', 'fr', 'it', 'nl', 'uk'];\r\nexport const i18nPrefix = 'TemplatePicker.LayoutElement';\r\n// todo: note there is another prefix ItemHistory... which will be removed soon\r\nexport const pathToI18n = '../i18n/sxc-admin-';\r\n","\r\nimport { startWith, map, tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { log } from 'app/core/log';\r\nimport { Constants } from 'app/core/constants';\r\n\r\n\r\n@Injectable()\r\nexport class GettingStartedService {\r\n  gettingStarted$: Observable<string>;\r\n  ready$ = new Observable<boolean>();\r\n\r\n  private gettingStartedSubject: Subject<string> = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.gettingStarted$ = this.gettingStartedSubject.asObservable();\r\n    this.ready$ = this.gettingStarted$.pipe(\r\n      map(() => true),\r\n      startWith(false));\r\n\r\n    this.ready$.pipe(tap(r => log.add(`ready getting started:${r}`))).subscribe();\r\n  }\r\n\r\n  public loadGettingStarted(isContentApp: boolean): void {\r\n    this.http.get<string>(`${Constants.apiRoot}RemoteInstallDialogUrl?dialog=gettingstarted&isContentApp=${isContentApp}`)\r\n      .subscribe(json => this.gettingStartedSubject.next(json));\r\n  }\r\n\r\n}\r\n","export default \":host iframe {\\n  border: none;\\n  height: 500px; }\\n\\n:host .progress {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  width: 100%;\\n  background: rgba(255, 255, 255, 0.8);\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  text-align: center; }\\n\\n:host .progress mat-progress-spinner {\\n    margin: 0 auto; }\\n\\n:host .progress span {\\n    line-height: 48px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5zdGFsbGVyL0M6XFxQcm9qZWN0c1xcMnN4Yy11aVxccHJvamVjdHNcXHF1aWNrLWRpYWxvZy9zcmNcXGFwcFxcaW5zdGFsbGVyXFxpbnN0YWxsZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSxZQUFZO0VBQ1osYUFBYSxFQUFBOztBQUhyQjtFQU1RLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AsTUFBTTtFQUNOLFlBQVk7RUFDWixXQUFXO0VBQ1gsb0NBQW1DO0VBQ25DLG9CQUFhO0VBQWIsYUFBYTtFQUNiLHdCQUF1QjtVQUF2Qix1QkFBdUI7RUFDdkIsNEJBQXNCO0VBQXRCLDZCQUFzQjtVQUF0QixzQkFBc0I7RUFDdEIsa0JBQWtCLEVBQUE7O0FBZjFCO0lBaUJZLGNBQWMsRUFBQTs7QUFqQjFCO0lBb0JZLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvaW5zdGFsbGVyL2luc3RhbGxlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGlmcmFtZSB7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICB9XHJcbiAgICAucHJvZ3Jlc3Mge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAuOCk7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXQtcHJvZ3Jlc3Mtc3Bpbm5lciB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDQ4cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19 */\"","\r\nimport { tap, switchMap, map, filter, debounceTime } from 'rxjs/operators';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { InstallerService } from 'app/installer/installer.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { GettingStartedService } from './getting-started.service';\r\nimport { Config } from '../config';\r\n\r\ndeclare const $2sxc: any;\r\n\r\n@Component({\r\n  selector: 'app-installer',\r\n  templateUrl: './installer.component.html',\r\n  styleUrls: ['./installer.component.scss']\r\n})\r\nexport class InstallerComponent implements OnInit {\r\n  @Input() isContentApp: boolean;\r\n\r\n  showProgress: boolean;\r\n  currentPackage: any;\r\n  remoteInstallerUrl = '';\r\n  ready = false;\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private installer: InstallerService,\r\n    private api: GettingStartedService,\r\n    private sanitizer: DomSanitizer,\r\n  ) {\r\n    this.subscriptions.push(\r\n      this.api.gettingStarted$.subscribe(url => {\r\n        this.remoteInstallerUrl = <string>this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n        this.ready = true;\r\n      }));\r\n\r\n    window.bootController.rebootRequest$.pipe(\r\n      debounceTime(1000))\r\n      .subscribe(() => this.destroy());\r\n  }\r\n\r\n  destroy(): void {\r\n    this.subscriptions\r\n      .forEach(sub => sub.unsubscribe());\r\n    console.log('destroy subs', this.subscriptions);\r\n  }\r\n\r\n  ngOnInit() {\r\n    let alreadyProcessing = false;\r\n    this.api.loadGettingStarted(this.isContentApp);\r\n\r\n    this.subscriptions.push(fromEvent(window, 'message').pipe(\r\n\r\n      // Ensure only one installation is processed.\r\n      filter(() => !alreadyProcessing),\r\n\r\n      // Get data from event.\r\n      map((evt: MessageEvent) => {\r\n        try {\r\n          return JSON.parse(evt.data);\r\n        } catch (e) {\r\n          return void 0;\r\n        }\r\n      }),\r\n\r\n      // Check if data is correct.\r\n      filter(data => data\r\n        && Number(data.moduleId) === Config.moduleId()\r\n        && data.action === 'install'),\r\n\r\n      // Get packages from data.\r\n      map(data => Object.values(data.packages)),\r\n\r\n      // Show confirm dialog.\r\n      filter(packages => {\r\n        const packagesDisplayNames = packages\r\n          .reduce((t, c) => `${t} - ${(c as any).displayName}\\n`, '');\r\n\r\n        const msg = `Do you want to install these packages?\r\n\r\n${packagesDisplayNames}\r\nThis takes 5 - 30 seconds per package. Don't reload the page while it's installing.`;\r\n        return confirm(msg);\r\n      }),\r\n\r\n      switchMap(packages => {\r\n        alreadyProcessing = true;\r\n        this.showProgress = true;\r\n        return this.installer.installPackages(packages, p => this.currentPackage = p);\r\n      }),\r\n\r\n      tap(() => {\r\n        this.showProgress = false;\r\n        alert('Installation complete 👍');\r\n        window.top.location.reload();\r\n      }))\r\n\r\n      .subscribe(null, () => {\r\n        this.showProgress = false;\r\n        alert('An error occurred.');\r\n        alreadyProcessing = false;\r\n      }));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InstallerComponent } from './installer.component';\r\nimport { InstallerService } from 'app/installer/installer.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    InstallerComponent\r\n  ],\r\n  declarations: [\r\n    InstallerComponent\r\n  ],\r\n  providers: [\r\n    InstallerService\r\n  ]\r\n})\r\nexport class InstallerModule { }","\r\nimport {of as observableOf } from 'rxjs';\r\n\r\nimport {switchMap} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable()\r\nexport class InstallerService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  installPackages(packages: any[], step: Function): Observable<any> {\r\n    return packages.reduce((t: Observable<Response>, c) => t.pipe(\r\n        switchMap(() => {\r\n          if (!c.url) return observableOf(true);\r\n          step(c);\r\n          return <Observable<any>>this.http.get(`app-sys/installer/installpackage?packageUrl=${c.url}`);\r\n        })), observableOf(true));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nconst MATERIAL_MODULES = [\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: MATERIAL_MODULES,\r\n  exports: MATERIAL_MODULES,\r\n})\r\n\r\nexport class MaterialModule { }\r\n","export const cViewWithoutContent = '_LayoutElement';\r\nexport const cAppActionImport = -1;\r\n","\r\n// #region imports\r\nimport { scan, debounceTime, share, startWith, map, filter } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable as O, combineLatest, merge } from 'rxjs';\r\n\r\nimport { App } from 'app/core/app';\r\nimport { PickerService } from './picker.service';\r\nimport { IQuickDialogConfig } from 'app/interfaces-shared/iquick-dialog-config';\r\nimport { Template } from './template';\r\nimport { ContentType } from './content-type';\r\nimport { TemplateFilterPipe } from './template-filter.pipe';\r\nimport { log as parentLog } from 'app/core/log';\r\nimport { ContentTypesProcessor } from './data/content-types-processor.service';\r\nimport { TemplateProcessor } from './data/template-processor';\r\nimport { DebugConfig } from 'app/debug-config';\r\nimport { BehaviorObservable } from 'app/core/behavior-observable';\r\n// #endregion\r\n\r\nconst log = parentLog.subLog('state', DebugConfig.state.enabled);\r\n\r\n@Injectable()\r\nexport class CurrentDataService {\r\n  /** Currently selected app */\r\n  app$: O<App>;\r\n\r\n  /** Relevant types */\r\n  types$: O<ContentType[]>;\r\n\r\n  /** The currently selected type */\r\n  type$: O<ContentType>;\r\n\r\n  /** Stream containing the currently selected template or null if not selected */\r\n  template$: O<Template>;\r\n\r\n  /** all templates relevant for the UI */\r\n  templates$: O<Template[]>;\r\n\r\n  private appId$ = BehaviorObservable.create<number>(null);\r\n  private initialTypeId$ = BehaviorObservable.create<string>(null);\r\n  private initialTemplateId$ = BehaviorObservable.create<number>(null);\r\n  private selectedType$ = BehaviorObservable.create<ContentType>(null);\r\n  private selectedTemplate$ = BehaviorObservable.create<Template>(null);\r\n\r\n\r\n  private config: IQuickDialogConfig;\r\n\r\n  constructor(\r\n    private api: PickerService,\r\n    private templateFilter: TemplateFilterPipe,\r\n    private ctProcessor: ContentTypesProcessor\r\n  ) {\r\n    this.buildBasicObservables();\r\n  }\r\n\r\n  private buildBasicObservables() {\r\n    // app-stream should contain selected app, once the ID is known - or null\r\n    this.app$ = combineLatest(\r\n      this.api.apps$,\r\n      this.appId$,\r\n      (apps, appId) => apps.find(a => a.AppId === appId));\r\n\r\n    // current type should be either the initial type, or a manually selected type\r\n    const initialType$ = combineLatest(\r\n      this.initialTypeId$,\r\n      this.api.contentTypes$,\r\n      (typeId, all) => ContentTypesProcessor.findContentTypesById(all, typeId));\r\n    this.type$ = merge(initialType$, this.selectedType$).pipe(\r\n      startWith(null),\r\n      share());\r\n\r\n    // the templates-list is always filtered by the currently selected type\r\n    this.templates$ = combineLatest(\r\n      this.api.templates$,\r\n      this.type$,\r\n      (all, current) => this.findTemplatesForTypeOrAll(all, current))\r\n      .pipe(startWith(new Array<Template>()));\r\n\r\n    // the current template is either the last selected, or auto-selected when conditions change\r\n    const initialTemplate$ = combineLatest(\r\n      this.initialTemplateId$,\r\n      this.api.templates$,\r\n      (id, templates) => templates.find(t => t.TemplateId === id)).pipe(\r\n        filter(t => t != null), // only allow new values which are not null, to guarantee later template$ updates don't affect this\r\n        startWith(null),\r\n        share());\r\n\r\n    const selected$ = merge(initialTemplate$, this.selectedTemplate$.pipe(filter(t => t !== null)));\r\n    this.template$ = combineLatest(\r\n      selected$,\r\n      this.templates$,\r\n      this.type$,\r\n      this.app$,\r\n      (selected, templates, type, app) => TemplateProcessor.pickSelected(selected, templates, type, app))\r\n      .pipe(\r\n        startWith(null),\r\n        share());\r\n\r\n    // construct list of relevant types for the UI\r\n    this.types$ = combineLatest(\r\n      this.api.contentTypes$,\r\n      this.type$,\r\n      this.api.templates$,\r\n      this.template$,\r\n      (types, type, templates, template) => this.ctProcessor.buildList(types, type, templates, template));\r\n  }\r\n\r\n  init(config: IQuickDialogConfig): O<boolean> {\r\n    this.config = config;\r\n    // app-init is ready, if it has an app or doesn't need to init one\r\n    log.add(`initializing with config:${JSON.stringify(config)}`, config);\r\n    const appReady$ = this.app$.pipe(\r\n      map(a => config.isContent || !!a),\r\n      startWith(config.isContent || !config.appId));\r\n\r\n    const typeReady$ = this.type$.pipe(\r\n      map(t => !!t),\r\n      scan((acc, value) => acc || value, !config.contentTypeId));\r\n    const templReady$ = this.template$.pipe(\r\n      map(t => !!t),\r\n      debounceTime(100), // need to debounce, because the template might have a value and change again\r\n      startWith(!config.templateId));\r\n\r\n    const loadAll$ = combineLatest(appReady$, templReady$, typeReady$)\r\n      .pipe(map(set => set[0] && set[1] && set[2]));\r\n\r\n    this.initLogging(appReady$, typeReady$, templReady$, loadAll$);\r\n\r\n    // automatically set the app, type and template\r\n    this.activateCurrentApp(config.appId);\r\n    this.initialTypeId$.next(config.contentTypeId);\r\n    this.initialTemplateId$.next(config.templateId);\r\n\r\n    return loadAll$;\r\n  }\r\n\r\n  private initLogging(inita$: O<boolean>,\r\n    inittyp$: O<boolean>,\r\n    initt$: O<boolean>,\r\n    initAll$: O<boolean>): void {\r\n    const slog = log.subLog('stream', DebugConfig.state.streams);\r\n    this.type$.subscribe(t => slog.add(`type$ update:'${t && t.Label}'`, t));\r\n    this.app$.subscribe(a => slog.add(`app$ update:'${a && a.AppId}'`, a));\r\n    this.template$.subscribe(t => slog.add(`template$ update:'${t && t.TemplateId}'`, t));\r\n    this.templates$.subscribe(t => slog.add(`templates$ count:'${t && t.length}'`, t));\r\n    this.types$.subscribe(t => slog.add(`types$ count:'${t && t.length}'`, t));\r\n    this.selectedTemplate$.subscribe(t => slog.add(`selectedTemplate$: ${t && t.TemplateId}`));\r\n\r\n    const initLog = log.subLog('stream-init', DebugConfig.state.inits);\r\n    this.initialTypeId$.subscribe(t => initLog.add(`initial TypeId:'${t}'`, t));\r\n    this.initialTemplateId$.subscribe(t => initLog.add(`initial TemplateId:'${t}'`, t));\r\n    inita$.subscribe(t => initLog.add(`init app$`, t));\r\n    inittyp$.subscribe(t => initLog.add(`init type$`, t));\r\n    initt$.subscribe(t => initLog.add(`init temp$`, t));\r\n    initAll$.subscribe(t => initLog.add(`init all$`, t));\r\n  }\r\n\r\n\r\n\r\n  //#region activate calls from outside\r\n  activateCurrentApp(appId: number) {\r\n    log.add(`activateApp(${appId})`);\r\n    this.appId$.next(appId);\r\n  }\r\n  activateType(contentType: ContentType) {\r\n    log.add(`activateType(${contentType.Name})`);\r\n    this.selectedType$.next(contentType);\r\n  }\r\n  activateTemplate(template: Template) {\r\n    log.add(`activateTemplate(${template.TemplateId})`);\r\n    this.selectedTemplate$.next(template);\r\n  }\r\n  //#endregion\r\n\r\n  private findTemplatesForTypeOrAll(allTemplates: Template[], contentType: ContentType): Template[] {\r\n    return this.templateFilter.transform(allTemplates, { contentType, isContent: this.config.isContent });\r\n  }\r\n\r\n}\r\n","import { ContentType } from '../content-type';\r\nimport { cViewWithoutContent } from '../constants';\r\nimport { Template } from '../template';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { log as parentLog } from 'app/core/log';\r\nimport { DebugConfig } from 'app/debug-config';\r\nimport { i18nPrefix } from 'app/i18n';\r\n\r\n// const debug = true;\r\nconst log = parentLog.subLog('ct-processor', DebugConfig.typeProcessor);\r\n\r\n/**\r\n * This is a helper to do various transformations for the list of content-types\r\n */\r\n@Injectable()\r\nexport class ContentTypesProcessor {\r\n  constructor(private translate: TranslateService) {}\r\n\r\n  public buildList(allTypes: ContentType[], type: ContentType, allTemplates: Template[], template: Template): ContentType[] {\r\n    log.add('buildList(...) of content-types to show');\r\n    let unhide = this.unhideSelectedType(allTypes, type, template);\r\n    unhide = this.addEmptyTypeIfNeeded(unhide, allTemplates);\r\n    const filtered = this.hideNecessaryTypes(unhide);\r\n    return this.sortTypes(filtered);\r\n  }\r\n\r\n  private hideNecessaryTypes(types: ContentType[]): ContentType[] {\r\n    return types.filter(t => !t.IsHidden);\r\n  }\r\n\r\n  /**\r\n   * Ensure current content-type is visible, just in case it's configured as hidden\r\n   */\r\n  private unhideSelectedType(contentTypes: ContentType[], currentType: ContentType, currentTemplate: Template): ContentType[] {\r\n    contentTypes\r\n      .filter(c => (currentTemplate?.TemplateId === c.TemplateId) || (c.StaticName === currentType?.StaticName))\r\n      .forEach(c => c.IsHidden = false);\r\n    return contentTypes;\r\n  }\r\n\r\n\r\n  /**\r\n   * add an empty content-type for UI selection if any template would support \"no content-type\"\r\n   */\r\n  private addEmptyTypeIfNeeded(contentTypes: ContentType[], templates: Template[]): ContentType[] {\r\n    const layoutElementLabel = (this.translate && this.translate.instant(i18nPrefix))\r\n      || cViewWithoutContent; // if translate is not ready, use the nicer label\r\n\r\n    // add option for empty content type\r\n    if (templates && templates.find(t => t.ContentTypeStaticName === '')) {\r\n      contentTypes = contentTypes.slice(); // copy it first to not change original\r\n      contentTypes.push({\r\n        StaticName: cViewWithoutContent,\r\n        Name: i18nPrefix,\r\n        Thumbnail: null,\r\n        Label: layoutElementLabel,\r\n        IsHidden: false,\r\n      } as ContentType);\r\n    }\r\n    return contentTypes;\r\n  }\r\n\r\n  /**\r\n   * Sort the types by label\r\n   */\r\n  private sortTypes(contentTypes: ContentType[]): ContentType[] {\r\n    // https://stackoverflow.com/questions/51165/how-to-sort-strings-in-javascript\r\n    return contentTypes.sort((a, b) => ('' + a.Label).localeCompare(b.Label));\r\n  }\r\n\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  static findContentTypesById(contentTypes: ContentType[], selectedContentTypeId: string): ContentType {\r\n    log.add(`findContentTypesById(..., ${selectedContentTypeId}`);\r\n    return selectedContentTypeId\r\n      ? contentTypes.find(c => c.StaticName === selectedContentTypeId)\r\n      : null;\r\n  }\r\n\r\n}\r\n\r\n","import { Template } from '../template';\r\nimport { ContentType } from '../content-type';\r\nimport { App } from 'app/core/app';\r\nimport { log as parentLog } from 'app/core/log';\r\nimport { DebugConfig } from 'app/debug-config';\r\n\r\nconst log = parentLog.subLog('TemplateProcessor', DebugConfig.templateProcessor);\r\n\r\nexport class TemplateProcessor {\r\n  static pickSelected(selected: Template, templates: Template[], type: ContentType, app: App): Template {\r\n    log.add(`pickSelected(selected: ${selected && selected.TemplateId}, templates: ${templates.length})`)\r\n    // if one is selected, return that; but only if it's in the list of possible templates\r\n    if (selected && templates.find(t => t.TemplateId === selected.TemplateId))\r\n        return selected;\r\n\r\n    // if none is selected, return the first; assuming a type or app has been selected\r\n    if ((type || app) && templates && templates.length) return templates[0];\r\n\r\n    // nothing valid\r\n    return null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'debug', pure: true })\r\nexport class DebugPipe implements PipeTransform {\r\n    transform<T>(obj: T, note: string): T {\r\n        console.log(`pd:${note} (${typeof(obj)})`, obj);\r\n        return obj;\r\n    }\r\n}\r\n","import { combineLatest } from 'rxjs';\r\nimport { map, startWith, share } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { App } from 'app/core/app';\r\nimport { ContentType } from 'app/template-picker/content-type';\r\nimport { Template } from 'app/template-picker/template';\r\nimport { log as parentLog } from 'app/core/log';\r\nimport { Constants } from 'app/core/constants';\r\nimport { DebugConfig } from 'app/debug-config';\r\nimport { BehaviorObservable } from 'app/core/behavior-observable';\r\nimport { Config } from '../config';\r\n\r\nconst log = parentLog.subLog('api', DebugConfig.api.enabled);\r\nconst uninitializedList = []; // this must be created as a variable, so we can check later if it's still the original or a new empty list\r\n@Injectable()\r\nexport class PickerService {\r\n  // #region public properties\r\n  /** all apps of the zone */\r\n  apps$ = BehaviorObservable.create<App[]>(uninitializedList);\r\n\r\n  /** all types of this app */\r\n  contentTypes$ = BehaviorObservable.create<ContentType[]>(uninitializedList);\r\n\r\n  /** templates/views of this app */\r\n  templates$ = BehaviorObservable.create<Template[]>(uninitializedList);\r\n\r\n  /**\r\n   * ready is true when all necessary data is loaded\r\n   * note that apps are not loaded if not needed */\r\n  ready$ = new Observable<boolean>();\r\n  // #endregion\r\n\r\n  // #region private properties\r\n  private mustLoadApps = false;\r\n  // all the subjects - these are all multi-cast, so don't use share!\r\n  // #endregion\r\n\r\n  constructor(private http: HttpClient) {\r\n    log.add('constructor()');\r\n    this.buildObservables();\r\n    this.enableLogging();\r\n  }\r\n\r\n  private buildObservables() {\r\n    log.add(`buildObservables()`);\r\n\r\n    // ready requires all to have data, but app can be skipped if not required\r\n    this.ready$ = combineLatest(this.apps$, this.contentTypes$, this.templates$,\r\n      (a, ct, t) => ({ apps: a, types: ct, templates: t }))\r\n      .pipe(\r\n        map(set => set.templates !== uninitializedList\r\n          && set.types !== uninitializedList\r\n          && (!this.mustLoadApps || !!(set.apps && set.apps !== uninitializedList))),\r\n        startWith(false),\r\n        share());\r\n  }\r\n\r\n  public saveAppId(appId: string, reloadParts: boolean): Promise<any> {\r\n    log.add(`saveAppId(${appId}, ${reloadParts})`);\r\n    // skip doing anything here, if we're in content-mode (which doesn't use/change apps)\r\n    if (!this.loadApps) throw new Error(`can't save app, as we're not in app-mode`);\r\n    return this.http.get(`${Constants.apiRoot}SetAppId?appId=${appId}`).toPromise();\r\n  }\r\n\r\n\r\n\r\n  public initLoading(requireApps: boolean): Observable<any> {\r\n    log.add(`initLoading(requireApps: ${requireApps})`);\r\n    this.mustLoadApps = requireApps;\r\n    if (requireApps) this.loadApps();\r\n    return this.reloadAppParts();\r\n  }\r\n\r\n  public reloadAppParts(): Observable<any> {\r\n    return combineLatest(\r\n      this.loadTemplates(),\r\n      this.loadContentTypes());\r\n  }\r\n\r\n  /**\r\n   * load templates - is sometimes repeated if the app changes\r\n   */\r\n  public loadTemplates(): Observable<any> {\r\n    log.add('loadTemplates()');\r\n    this.templates$.reset();\r\n    const obs = this.http.get<Template[]>(`${Constants.apiRoot}GetSelectableTemplates`)\r\n      .pipe(share()); // ensure it's only run once\r\n\r\n    obs.subscribe(response => this.templates$.next(response || []));\r\n    return obs;\r\n  }\r\n\r\n  /**\r\n   * Load the ContentTypes - only needed on first initialization\r\n   */\r\n  private loadContentTypes(): Observable<any> {\r\n    log.add(`loadContentTypes()`);\r\n    this.contentTypes$.reset();\r\n    const obs = this.http.get<any[]>(`${Constants.apiRoot}GetSelectableContentTypes`)\r\n      .pipe(share()); // ensure it's only run once\r\n    obs.pipe(map(response => (response || []).map(ct => {\r\n        ct.Label = (ct.Metadata && ct.Metadata.Label)\r\n          ? ct.Metadata.Label\r\n          : ct.Name;\r\n        return ct;\r\n      })))\r\n      .subscribe(json => this.contentTypes$.next(json));\r\n    return obs;\r\n  }\r\n\r\n  /**\r\n   * Load all Apps, only needed on first initialization\r\n   */\r\n  private loadApps(): Observable<any> {\r\n    const alreadyLoaded = !this.apps$.isInitial();\r\n    log.add(`loadApps() - skip:${alreadyLoaded}`);\r\n    if (alreadyLoaded) return;\r\n\r\n    const appsFilter = Config.apps();\r\n\r\n    const obs = this.http.get<any[]>(`${Constants.apiRoot}GetSelectableApps?apps=${appsFilter}`)\r\n      .pipe(share()); // ensure it's only run once\r\n\r\n    obs.subscribe(response => this.apps$.subject.next(response.map(a => new App(a))));\r\n    return obs;\r\n  }\r\n\r\n  private enableLogging() {\r\n    const streamLog = parentLog.subLog('api-streams', DebugConfig.api.streams);\r\n    this.apps$.subscribe(a => streamLog.add(`app$:${a && a.length}`));\r\n    this.contentTypes$.subscribe(ct => streamLog.add(`contentTypes$:${ct && ct.length}`));\r\n    this.templates$.subscribe(t => streamLog.add(`templates$:${t && t.length}`));\r\n    this.ready$.subscribe(r => streamLog.add(`ready$:${r}`));\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { cViewWithoutContent } from './constants';\r\nimport { Template } from './template';\r\nimport { ContentType } from './content-type';\r\n\r\n@Pipe({\r\n  name: 'templateFilter'\r\n})\r\nexport class TemplateFilterPipe implements PipeTransform {\r\n\r\n\r\n  transform(templates: Template[], args: {isContent: boolean, contentType: ContentType } ): Template[] {\r\n\r\n    const typeId = args.contentType ? args.contentType.StaticName : undefined;\r\n\r\n    // in case we're filtering for the special \"empty\" code, use empty in the filter\r\n    const typeNameFilter = typeId === cViewWithoutContent\r\n      ? ''\r\n      : (typeId || '');\r\n\r\n    return templates\r\n      .filter(t => !t.IsHidden)\r\n      .filter(t => !args.isContent || t.ContentTypeStaticName === typeNameFilter);\r\n  }\r\n}\r\n","export default \"/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 9px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 calc(14px * 0.83)/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 calc(14px * 0.67)/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  letter-spacing: -0.05em;\\n  margin: 0 0 56px; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  letter-spacing: -0.02em;\\n  margin: 0 0 64px; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  letter-spacing: -0.005em;\\n  margin: 0 0 64px; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 500; }\\n.mat-card-header .mat-card-title {\\n  font-size: 20px; }\\n.mat-card-subtitle,\\n.mat-card-content {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n@media print {\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n    -webkit-transform: translateY(-1.28122em) scale(0.75);\\n            transform: translateY(-1.28122em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.28121em) scale(0.75);\\n            transform: translateY(-1.28121em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.2812em) scale(0.75);\\n            transform: translateY(-1.2812em) scale(0.75); } }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-sub-label-error {\\n  font-weight: normal; }\\n.mat-step-label-error {\\n  font-size: 14px; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 8px;\\n  padding-bottom: 8px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-base .mat-list-item {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-list-option {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list-base[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden;\\n  position: relative; }\\n.mat-ripple:not(:empty) {\\n    -webkit-transform: translateZ(0);\\n            transform: translateZ(0); }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  -webkit-transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n.cdk-high-contrast-active .mat-ripple-element {\\n    display: none; }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: -webkit-box;\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: -webkit-box;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  -webkit-transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.32); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@-webkit-keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@-webkit-keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation: cdk-text-field-autofill-start 0s 1ms;\\n          animation: cdk-text-field-autofill-start 0s 1ms; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation: cdk-text-field-autofill-end 0s 1ms;\\n          animation: cdk-text-field-autofill-end 0s 1ms; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-active {\\n    background: rgba(0, 0, 0, 0.04);\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-option.mat-option-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #00838f; }\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #039be5; }\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #e53935; }\\n.mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-optgroup-disabled .mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-pseudo-checkbox {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-pseudo-checkbox::after {\\n    color: #fafafa; }\\n.mat-pseudo-checkbox-disabled {\\n  color: #b0b0b0; }\\n.mat-primary .mat-pseudo-checkbox-checked,\\n.mat-primary .mat-pseudo-checkbox-indeterminate {\\n  background: #00838f; }\\n.mat-pseudo-checkbox-checked,\\n.mat-pseudo-checkbox-indeterminate,\\n.mat-accent .mat-pseudo-checkbox-checked,\\n.mat-accent .mat-pseudo-checkbox-indeterminate {\\n  background: #039be5; }\\n.mat-warn .mat-pseudo-checkbox-checked,\\n.mat-warn .mat-pseudo-checkbox-indeterminate {\\n  background: #e53935; }\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\\n  background: #b0b0b0; }\\n.mat-elevation-z0 {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z1 {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z2 {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z3 {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z4 {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z5 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z6 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z7 {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z8 {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z9 {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z10 {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z11 {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z12 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z13 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z14 {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z15 {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z16 {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z17 {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z18 {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z19 {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z20 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z21 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z22 {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z23 {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z24 {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n.mat-app-background {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-theme-loaded-marker {\\n  display: none; }\\n.mat-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-autocomplete-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n    background: white; }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n      color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-content {\\n  color: white;\\n  background: #00838f; }\\n.cdk-high-contrast-active .mat-badge-content {\\n    outline: solid 1px;\\n    border-radius: 0; }\\n.mat-badge-accent .mat-badge-content {\\n  background: #039be5;\\n  color: white; }\\n.mat-badge-warn .mat-badge-content {\\n  color: white;\\n  background: #e53935; }\\n.mat-badge {\\n  position: relative; }\\n.mat-badge-hidden .mat-badge-content {\\n  display: none; }\\n.mat-badge-disabled .mat-badge-content {\\n  background: #b9b9b9;\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-badge-content {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  -webkit-transition: -webkit-transform 200ms ease-in-out;\\n  transition: -webkit-transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\\n  -webkit-transform: scale(0.6);\\n          transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none; }\\n.ng-animate-disabled .mat-badge-content,\\n.mat-badge-content._mat-animation-noopable {\\n  -webkit-transition: none;\\n  transition: none; }\\n.mat-badge-content.mat-badge-active {\\n  -webkit-transform: none;\\n          transform: none; }\\n.mat-badge-small .mat-badge-content {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px; }\\n.mat-badge-small.mat-badge-above .mat-badge-content {\\n  top: -8px; }\\n.mat-badge-small.mat-badge-below .mat-badge-content {\\n  bottom: -8px; }\\n.mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -16px; }\\n.mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -16px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -8px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -8px; }\\n.mat-badge-medium .mat-badge-content {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px; }\\n.mat-badge-medium.mat-badge-above .mat-badge-content {\\n  top: -11px; }\\n.mat-badge-medium.mat-badge-below .mat-badge-content {\\n  bottom: -11px; }\\n.mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -22px; }\\n.mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -22px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -11px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -11px; }\\n.mat-badge-large .mat-badge-content {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px; }\\n.mat-badge-large.mat-badge-above .mat-badge-content {\\n  top: -14px; }\\n.mat-badge-large.mat-badge-below .mat-badge-content {\\n  bottom: -14px; }\\n.mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -28px; }\\n.mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -28px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -14px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -14px; }\\n.mat-bottom-sheet-container {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-button, .mat-icon-button, .mat-stroked-button {\\n  color: inherit;\\n  background: transparent; }\\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\\n    color: #00838f; }\\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\\n    color: #039be5; }\\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\\n    color: #e53935; }\\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\\n    background-color: #00838f; }\\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\\n    background-color: #039be5; }\\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\\n    background-color: #e53935; }\\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\\n    opacity: 0.1;\\n    background-color: currentColor; }\\n.mat-button-focus-overlay {\\n  background: black; }\\n.mat-stroked-button:not([disabled]) {\\n  border-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\\n  color: rgba(0, 0, 0, 0.87);\\n  background-color: white; }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    color: white; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    color: white; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    color: white; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    background-color: #00838f; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    background-color: #039be5; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    background-color: #e53935; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-stroked-button:not([class*='mat-elevation-z']), .mat-flat-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([class*='mat-elevation-z']), .mat-mini-fab:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([disabled]):active:not([class*='mat-elevation-z']), .mat-mini-fab:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-fab[disabled]:not([class*='mat-elevation-z']), .mat-mini-fab[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone,\\n.mat-button-toggle-group {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  box-shadow: none; }\\n.mat-button-toggle {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-button-toggle .mat-button-toggle-focus-overlay {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-appearance-standard {\\n  color: rgba(0, 0, 0, 0.87);\\n  background: white; }\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\\n    background-color: black; }\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12); }\\n[dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: none;\\n  border-top: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-checked {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-button-toggle-disabled {\\n  color: rgba(0, 0, 0, 0.26);\\n  background-color: #eeeeee; }\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\\n    background: white; }\\n.mat-button-toggle-disabled.mat-button-toggle-checked {\\n    background-color: #bdbdbd; }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  border: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-card {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-card:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card.mat-card-flat:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card-subtitle {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-frame {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-checkmark {\\n  fill: #fafafa; }\\n.mat-checkbox-checkmark-path {\\n  stroke: #fafafa !important; }\\n.mat-checkbox-mixedmark {\\n  background-color: #fafafa; }\\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\\n  background-color: #00838f; }\\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\\n  background-color: #039be5; }\\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\\n  background-color: #e53935; }\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #b0b0b0; }\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\\n  border-color: #b0b0b0; }\\n.mat-checkbox-disabled .mat-checkbox-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox .mat-ripple-element {\\n  background-color: black; }\\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\\n  background: #00838f; }\\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\\n  background: #039be5; }\\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\\n  background: #e53935; }\\n.mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\\n    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-disabled {\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip::after {\\n    background: black; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\\n  background-color: #00838f;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\\n  background-color: #e53935;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\\n  background-color: #039be5;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-table {\\n  background: white; }\\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\\nmat-header-row, mat-row, mat-footer-row,\\n[mat-header-row], [mat-row], [mat-footer-row],\\n.mat-table-sticky {\\n  background: inherit; }\\nmat-row, mat-header-row, mat-footer-row,\\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\\n.mat-header-cell {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-cell, .mat-footer-cell {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-calendar-arrow {\\n  border-top-color: rgba(0, 0, 0, 0.54); }\\n.mat-datepicker-toggle,\\n.mat-datepicker-content .mat-calendar-next-button,\\n.mat-datepicker-content .mat-calendar-previous-button {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-table-header {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-table-header-divider::after {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-calendar-body-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-body-cell-content {\\n  color: rgba(0, 0, 0, 0.87);\\n  border-color: transparent; }\\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.18); }\\n.mat-calendar-body-selected {\\n  background-color: #00838f;\\n  color: white; }\\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\\n  background-color: rgba(0, 131, 143, 0.4); }\\n.mat-calendar-body-today.mat-calendar-body-selected {\\n  box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\\n    background-color: #039be5;\\n    color: white; }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(3, 155, 229, 0.4); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\\n    background-color: #e53935;\\n    color: white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(229, 57, 53, 0.4); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content-touch {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-datepicker-toggle-active {\\n  color: #00838f; }\\n.mat-datepicker-toggle-active.mat-accent {\\n    color: #039be5; }\\n.mat-datepicker-toggle-active.mat-warn {\\n    color: #e53935; }\\n.mat-dialog-container {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-divider-vertical {\\n  border-right-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-action-row {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled='true']),\\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled='true']),\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled='true']) {\\n  background: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\\n.mat-expansion-panel-header:hover {\\n    background: white; } }\\n.mat-expansion-panel-header-title {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel-header-description,\\n.mat-expansion-indicator::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-expansion-panel-header[aria-disabled='true'] {\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\\n    color: inherit; }\\n.mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-hint {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-form-field.mat-focused .mat-form-field-label {\\n  color: #00838f; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\\n    color: #039be5; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\\n    color: #e53935; }\\n.mat-focused .mat-form-field-required-marker {\\n  color: #039be5; }\\n.mat-form-field-ripple {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #00838f; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\\n    background-color: #039be5; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\\n    background-color: #e53935; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\\n  color: #00838f; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\\n  color: #039be5; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\\n  color: #e53935; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\\n  color: #e53935; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\\n    color: #e53935; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\\n  background-color: #e53935; }\\n.mat-error {\\n  color: #e53935; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-hint {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.42)), color-stop(33%, rgba(0, 0, 0, 0.42)), color-stop(0%, transparent));\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-standard .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.42)), color-stop(33%, rgba(0, 0, 0, 0.42)), color-stop(0%, transparent));\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-fill .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.02); }\\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\\n  background-color: transparent; }\\n.mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.12); }\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #00838f; }\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\\n  color: #039be5; }\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\\n  color: #e53935; }\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\\n  color: #e53935; }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.06); }\\n.mat-icon.mat-primary {\\n  color: #00838f; }\\n.mat-icon.mat-accent {\\n  color: #039be5; }\\n.mat-icon.mat-warn {\\n  color: #e53935; }\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-input-element:disabled,\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-input-element {\\n  caret-color: #00838f; }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-accent .mat-input-element {\\n  caret-color: #039be5; }\\n.mat-warn .mat-input-element,\\n.mat-form-field-invalid .mat-input-element {\\n  caret-color: #e53935; }\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\\n  color: #e53935; }\\n.mat-list-base .mat-list-item {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-list-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-subheader {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-list-item-disabled {\\n  background-color: #eeeeee; }\\n.mat-list-option:hover, .mat-list-option:focus,\\n.mat-nav-list .mat-list-item:hover,\\n.mat-nav-list .mat-list-item:focus,\\n.mat-action-list .mat-list-item:hover,\\n.mat-action-list .mat-list-item:focus {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-menu-panel {\\n  background: white; }\\n.mat-menu-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-menu-item {\\n  background: transparent;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-menu-item .mat-icon-no-color,\\n.mat-menu-item-submenu-trigger::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-menu-item:hover:not([disabled]),\\n.mat-menu-item.cdk-program-focused:not([disabled]),\\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\\n.mat-menu-item-highlighted:not([disabled]) {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-paginator {\\n  background: white; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-paginator-decrement,\\n.mat-paginator-increment {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-paginator-first,\\n.mat-paginator-last {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-icon-button[disabled] .mat-paginator-decrement,\\n.mat-icon-button[disabled] .mat-paginator-increment,\\n.mat-icon-button[disabled] .mat-paginator-first,\\n.mat-icon-button[disabled] .mat-paginator-last {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-progress-bar-background {\\n  fill: #b2ebf2; }\\n.mat-progress-bar-buffer {\\n  background-color: #b2ebf2; }\\n.mat-progress-bar-fill::after {\\n  background-color: #00838f; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\\n  fill: #80d8ff; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\\n  background-color: #80d8ff; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\\n  background-color: #039be5; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\\n  background-color: #e53935; }\\n.mat-progress-spinner circle, .mat-spinner circle {\\n  stroke: #00838f; }\\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\\n  stroke: #039be5; }\\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\\n  stroke: #e53935; }\\n.mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #00838f; }\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\\n  background-color: #00838f; }\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #039be5; }\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\\n  background-color: #039be5; }\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #e53935; }\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\\n  background-color: #e53935; }\\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button .mat-ripple-element {\\n  background-color: black; }\\n.mat-select-value {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-select-placeholder {\\n  color: rgba(0, 0, 0, 0.42); }\\n.mat-select-disabled .mat-select-value {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-select-panel {\\n  background: white; }\\n.mat-select-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\\n    background: rgba(0, 0, 0, 0.12); }\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\\n  color: #00838f; }\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\\n  color: #039be5; }\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\\n  color: #e53935; }\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\\n  color: #e53935; }\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-drawer-container {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer.mat-drawer-push {\\n    background-color: white; }\\n.mat-drawer:not(.mat-drawer-side) {\\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side {\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side.mat-drawer-end {\\n    border-left: solid 1px rgba(0, 0, 0, 0.12);\\n    border-right: none; }\\n[dir='rtl'] .mat-drawer-side {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\\n  border-right: none; }\\n[dir='rtl'] .mat-drawer-side.mat-drawer-end {\\n    border-left: none;\\n    border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-backdrop.mat-drawer-shown {\\n  background-color: rgba(0, 0, 0, 0.6); }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #039be5; }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(3, 155, 229, 0.54); }\\n.mat-slide-toggle.mat-checked .mat-ripple-element {\\n  background-color: #039be5; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #00838f; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(0, 131, 143, 0.54); }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\\n  background-color: #00838f; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #e53935; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(229, 57, 53, 0.54); }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\\n  background-color: #e53935; }\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\\n  background-color: black; }\\n.mat-slide-toggle-thumb {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n  background-color: #fafafa; }\\n.mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-primary .mat-slider-track-fill,\\n.mat-primary .mat-slider-thumb,\\n.mat-primary .mat-slider-thumb-label {\\n  background-color: #00838f; }\\n.mat-primary .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-accent .mat-slider-track-fill,\\n.mat-accent .mat-slider-thumb,\\n.mat-accent .mat-slider-thumb-label {\\n  background-color: #039be5; }\\n.mat-accent .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-warn .mat-slider-track-fill,\\n.mat-warn .mat-slider-thumb,\\n.mat-warn .mat-slider-thumb-label {\\n  background-color: #e53935; }\\n.mat-warn .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-slider-focus-ring {\\n  background-color: rgba(3, 155, 229, 0.2); }\\n.mat-slider:hover .mat-slider-track-background,\\n.cdk-focused .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-disabled .mat-slider-track-background,\\n.mat-slider-disabled .mat-slider-track-fill,\\n.mat-slider-disabled .mat-slider-thumb {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-disabled:hover .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value .mat-slider-focus-ring {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26);\\n  background-color: transparent; }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-has-ticks .mat-slider-wrapper::after {\\n  border-color: rgba(0, 0, 0, 0.7); }\\n.mat-slider-horizontal .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-slider-vertical .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-step-header:hover {\\n    background: none; } }\\n.mat-step-header .mat-step-label,\\n.mat-step-header .mat-step-optional {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-step-header .mat-step-icon {\\n  background-color: rgba(0, 0, 0, 0.54);\\n  color: white; }\\n.mat-step-header .mat-step-icon-selected,\\n.mat-step-header .mat-step-icon-state-done,\\n.mat-step-header .mat-step-icon-state-edit {\\n  background-color: #00838f;\\n  color: white; }\\n.mat-step-header .mat-step-icon-state-error {\\n  background-color: transparent;\\n  color: #e53935; }\\n.mat-step-header .mat-step-label.mat-step-label-active {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-step-header .mat-step-label.mat-step-label-error {\\n  color: #e53935; }\\n.mat-stepper-horizontal, .mat-stepper-vertical {\\n  background-color: white; }\\n.mat-stepper-vertical-line::before {\\n  border-left-color: rgba(0, 0, 0, 0.12); }\\n.mat-horizontal-stepper-header::before,\\n.mat-horizontal-stepper-header::after,\\n.mat-stepper-horizontal-line {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-sort-header-arrow {\\n  color: #757575; }\\n.mat-tab-nav-bar,\\n.mat-tab-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\\n.mat-tab-group-inverted-header .mat-tab-header {\\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\\n  border-bottom: none; }\\n.mat-tab-label, .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n.mat-tab-nav-bar[class*='mat-background-'] {\\n  border-bottom: none;\\n  border-top: none; }\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(178, 235, 242, 0.3); }\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #00838f; }\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(128, 216, 255, 0.3); }\\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\\n  background-color: #039be5; }\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\\n  background-color: #e53935; }\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(178, 235, 242, 0.3); }\\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-group.mat-background-primary .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination {\\n  background-color: #00838f; }\\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(128, 216, 255, 0.3); }\\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-group.mat-background-accent .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination {\\n  background-color: #039be5; }\\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-group.mat-background-warn .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination {\\n  background-color: #e53935; }\\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #00838f;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #039be5;\\n    color: white; }\\n.mat-toolbar.mat-warn {\\n    background: #e53935;\\n    color: white; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n.mat-tooltip {\\n  background: rgba(97, 97, 97, 0.9); }\\n.mat-tree {\\n  background: white; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-snack-bar-container {\\n  color: rgba(255, 255, 255, 0.7);\\n  background: #323232;\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-simple-snackbar-action {\\n  color: #039be5; }\\n:host {\\n  display: block;\\n  padding-top: 56px; }\\n:host .content {\\n    background: #fafafa;\\n    box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.3);\\n    position: relative; }\\n:host .content .card {\\n      max-width: 1200px;\\n      margin: 0 auto;\\n      min-height: 164px; }\\n:host .content .card .top-controls {\\n        position: absolute;\\n        height: 56px;\\n        right: 4px;\\n        top: -56px;\\n        width: 100%;\\n        text-align: center;\\n        z-index: 2;\\n        display: -webkit-box;\\n        display: flex;\\n        -webkit-box-orient: horizontal;\\n        -webkit-box-direction: normal;\\n                flex-direction: row;\\n        -webkit-box-align: center;\\n                align-items: center; }\\n:host .content .card .top-controls button {\\n          display: inline-block;\\n          float: none;\\n          position: relative;\\n          top: 28px; }\\n:host .content .card .top-controls button.secondary {\\n          background: #fafafa !important;\\n          color: rgba(0, 0, 0, 0.8); }\\n:host .content .card .tiles {\\n        white-space: nowrap;\\n        overflow-x: auto; }\\n:host .content .card .tiles .tile {\\n          box-sizing: border-box;\\n          background: #fff;\\n          display: inline-block;\\n          margin: 12px 0 12px 12px;\\n          position: relative;\\n          font-size: 12px;\\n          border-radius: 22px 0 22px 0;\\n          height: 88px;\\n          width: 88px;\\n          line-height: 88px;\\n          text-align: center;\\n          overflow: hidden;\\n          cursor: pointer;\\n          color: rgba(0, 0, 0, 0.8);\\n          -webkit-transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\\n          transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); }\\n:host .content .card .tiles .tile:hover {\\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); }\\n:host .content .card .tiles .tile:hover .title {\\n              opacity: 1;\\n              text-overflow: initial;\\n              height: auto;\\n              min-height: 24px;\\n              padding: 4px;\\n              white-space: pre-wrap;\\n              line-height: normal; }\\n:host .content .card .tiles .tile:hover .title span {\\n                -webkit-transform: translate(0, 0);\\n                        transform: translate(0, 0); }\\n:host .content .card .tiles .tile:hover .version {\\n              opacity: 1; }\\n:host .content .card .tiles .tile.blocked {\\n            cursor: not-allowed;\\n            opacity: 0.5; }\\n:host .content .card .tiles .tile:active, :host .content .card .tiles .tile.active {\\n            cursor: pointer;\\n            box-shadow: 0 14px 28px rgba(0, 120, 220, 0.25), 0 10px 10px rgba(0, 120, 220, 0.22);\\n            opacity: 1; }\\n:host .content .card .tiles .tile.active, :host .content .card .tiles .tile:focus {\\n            color: #0078dc; }\\n:host .content .card .tiles .tile.config {\\n            box-shadow: none;\\n            border: 1px dashed rgba(0, 0, 0, 0.2);\\n            background: transparent; }\\n:host .content .card .tiles .tile .bg {\\n            position: absolute;\\n            left: 0;\\n            top: 0;\\n            width: 100%;\\n            height: 100%; }\\n:host .content .card .tiles .tile .bg img {\\n              width: 100%;\\n              height: 100%; }\\n:host .content .card .tiles .tile .title {\\n            display: inline-block;\\n            position: absolute;\\n            box-sizing: border-box;\\n            padding: 0 4px;\\n            left: 0;\\n            bottom: 0;\\n            width: 100%;\\n            height: 24px;\\n            line-height: 24px;\\n            background: white;\\n            color: rgba(0, 0, 0, 0.8);\\n            letter-spacing: .1pt;\\n            font-size: 11px;\\n            text-overflow: ellipsis;\\n            overflow: hidden;\\n            white-space: nowrap;\\n            opacity: 0;\\n            font-weight: bold;\\n            -webkit-transition: opacity .4s ease;\\n            transition: opacity .4s ease; }\\n:host .content .card .tiles .tile .title.show {\\n              opacity: 1; }\\n:host .content .card .tiles .tile .title.show span {\\n                -webkit-transform: translate(0, 0);\\n                        transform: translate(0, 0); }\\n:host .content .card .tiles .tile .title span {\\n              display: inline-block;\\n              -webkit-transform: translate(0, 24px);\\n                      transform: translate(0, 24px);\\n              -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);\\n              transition: -webkit-transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);\\n              transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);\\n              transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55), -webkit-transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55); }\\n:host .content .card .tiles .tile .version {\\n            display: inline-block;\\n            position: absolute;\\n            box-sizing: border-box;\\n            padding: 0 4px;\\n            right: 0;\\n            top: 0;\\n            width: 24px;\\n            height: 24px;\\n            line-height: 24px;\\n            color: #fff;\\n            letter-spacing: .1pt;\\n            font-size: 11px;\\n            font-weight: bold;\\n            white-space: nowrap;\\n            opacity: 0;\\n            -webkit-transition: opacity .4s ease;\\n            transition: opacity .4s ease; }\\n:host .content .card .tiles .tile .version span {\\n              -webkit-transform: translate(0, 24px);\\n                      transform: translate(0, 24px);\\n              -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);\\n              transition: -webkit-transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);\\n              transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);\\n              transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55), -webkit-transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);\\n              text-shadow: 0px 0px 5px #000; }\\n:host .content .card .templates-spinner {\\n        width: 48px;\\n        margin: 12px 0 12px 12px;\\n        height: 88px;\\n        display: inline-block; }\\n:host .content .card mat-select {\\n        width: 320px; }\\n:host .content .card .row {\\n        margin: 8px 0; }\\n:host .content .card button {\\n        margin: 0 0 0 8px;\\n        float: left;\\n        background: #0088f4; }\\n:host .content .card .fr-getting-started {\\n        border: none; }\\n:host .content .no-install-allowed {\\n      background: #F44336;\\n      display: block;\\n      padding: 16px;\\n      border-radius: 2px;\\n      color: #fff;\\n      line-height: 24px;\\n      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\\n      text-align: center; }\\n::ng-deep mat-tab-group mat-tab-header {\\n  border-bottom: none !important; }\\n::ng-deep mat-tab-group mat-tab-header mat-ink-bar {\\n    display: none !important; }\\n::ng-deep mat-tab-group mat-tab-header .mat-tab-labels {\\n    display: block; }\\n::ng-deep mat-tab-group mat-tab-header .mat-tab-labels .mat-tab-label {\\n      min-width: 0 !important; }\\n::ng-deep mat-tab-group mat-tab-header .mat-tab-labels .mat-tab-label.mat-tab-label-active {\\n        opacity: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","\r\nimport {merge, combineLatest,  timer } from 'rxjs';\r\nimport {filter, startWith, skipUntil} from 'rxjs/operators';\r\nimport { Component, ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { IDialogFrameElement } from 'app/interfaces-shared/idialog-frame-element';\r\nimport { Observable } from 'rxjs';\r\nimport { App } from 'app/core/app';\r\nimport { Template } from 'app/template-picker/template';\r\nimport { ContentType } from 'app/template-picker/content-type';\r\nimport { IIFrameBridge } from 'app/interfaces-shared/iiframe-bridge';\r\nimport { IQuickDialogConfig } from 'app/interfaces-shared/iquick-dialog-config';\r\nimport { cAppActionImport } from './constants';\r\nimport { log as parentLog, Log } from 'app/core/log';\r\nimport { PickerService } from './picker.service';\r\nimport { CurrentDataService } from './current-data.service';\r\nimport { DebugConfig } from 'app/debug-config';\r\nimport { BehaviorObservable } from 'app/core/behavior-observable';\r\n\r\nconst log = parentLog.subLog('picker', DebugConfig.picker.enabled);\r\n\r\n@Component({\r\n  selector: 'app-template-picker',\r\n  templateUrl: './template-picker.component.html',\r\n  styleUrls: ['./template-picker.component.scss'],\r\n})\r\nexport class TemplatePickerComponent implements OnInit {\r\n  // #region properties\r\n  /** Stream of all apps */\r\n  apps$: Observable<App[]>;\r\n\r\n  /** is cancelling possible */\r\n  showCancel = true;\r\n\r\n  /** is in the main content-app or a generic app */\r\n  isContent: boolean;\r\n\r\n  /** show advanced features (admin/host only) */\r\n  showAdvanced = false;\r\n\r\n  /** show the installer */\r\n  showInstaller = false;\r\n\r\n  /** Stream to indicate ready, for loading-indicator */\r\n  ready$: Observable<boolean>;\r\n  templatesLoading$: Observable<boolean>;\r\n\r\n  /** Tab-id, when we set it, the tab switches */\r\n  tabIndex = 0;\r\n\r\n  /** Indicate if the user is allowed to change content-types or not */\r\n  preventTypeSwitch: boolean;\r\n\r\n  /** Indicates whether the installer can be shown in this dialog or not */\r\n  isBadContextForInstaller = false;\r\n\r\n  /** The communication-object to the parent */\r\n  private bridge: IIFrameBridge;\r\n\r\n  /** internal loading state */\r\n  private loading$ = BehaviorObservable.create<boolean>(false);\r\n\r\n  /** Ajax-support changes how saving/changing is handled */\r\n  private supportsAjax: boolean;\r\n\r\n  preventAppSwich = false;\r\n\r\n  public showDebug = DebugConfig.picker.showDebugPanel;\r\n  // #endregion\r\n\r\n  // #region data to show - using local variables, because streams didn't update correctly :(\r\n  app: App;\r\n  templates: Template[];\r\n  template: Template;\r\n  contentType: ContentType;\r\n  types: ContentType[];\r\n  ready = false;\r\n  //#endregion\r\n\r\n  constructor(\r\n    private api: PickerService,\r\n    public state: CurrentDataService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    // get configuration from iframe-bridge and set everything\r\n    this.bridge = (<IDialogFrameElement>window.frameElement).bridge;\r\n    const dashInfo = this.bridge.getAdditionalDashboardConfig();\r\n\r\n    this.boot(dashInfo);\r\n    this.debugObservables();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.autosyncObservablesToEnsureUiUpdates();\r\n  }\r\n\r\n\r\n  private boot(dashInfo: IQuickDialogConfig) {\r\n    this.showDebug = dashInfo.debug;\r\n    Log.configureRuntimeLogging(dashInfo.debug);\r\n\r\n    // start data-loading\r\n    this.api.initLoading(!dashInfo.isContent);\r\n\r\n    // init parts, variables, observables\r\n    const initDone$ = this.state.init(dashInfo);\r\n    this.initObservables(initDone$);\r\n    this.initValuesFromBridge(dashInfo);\r\n    this.loading$.next(false);\r\n  }\r\n\r\n  private debugObservables() {\r\n    if (!DebugConfig.picker.streams) return;\r\n    this.loading$.subscribe(l => log.add(`loading$:${l}`));\r\n    this.ready$.subscribe(r => log.add(`ready$:${r}`));\r\n  }\r\n\r\n  /**\r\n   * wire up observables for this component\r\n   */\r\n  private initObservables(initDone$: Observable<boolean>): void {\r\n    const initTrue$ = initDone$.pipe(filter(t => !!t));\r\n\r\n    // wire up basic observables\r\n    this.ready$ = combineLatest(\r\n      this.api.ready$,\r\n      this.loading$,\r\n      (r, l) => r && !l);\r\n\r\n    // all apps are the same as provided by the api\r\n    this.apps$ = this.api.apps$;\r\n\r\n    // if the content-type or app is set, switch tabs (ignore null/empty states)\r\n    const typeOrAppReady = merge(this.state.type$, this.state.app$).pipe(filter(t => !!t));\r\n    combineLatest(typeOrAppReady, initTrue$).subscribe(_ => this.switchTab());\r\n\r\n    // once the data is known, check if installer is needed\r\n    combineLatest(this.api.templates$,\r\n      this.api.contentTypes$,\r\n      this.api.apps$,\r\n      this.api.ready$.pipe(filter(r => !!r)),\r\n      (templates, _, apps) => {\r\n        log.add('apps/templates loaded, will check if we should show installer');\r\n      this.showInstaller = this.isContent\r\n        ? templates.length === 0\r\n        : apps.filter(a => a.AppId !== cAppActionImport).length === 0;\r\n    }).subscribe();\r\n\r\n    // template loading is true, when the template-list or selected template are not ready\r\n    this.templatesLoading$ = combineLatest(\r\n      this.state.templates$,\r\n      this.state.template$,\r\n      (all, selected) => !(all && selected)).pipe(\r\n      startWith(false));\r\n\r\n    // whenever the template changes, ensure the preview reloads\r\n    // but don't do this when initializing, that's why we listen to initDone$\r\n    this.state.template$.pipe(\r\n      filter(t => !!t),\r\n      skipUntil(initTrue$))\r\n      .subscribe(t => this.previewTemplate(t));\r\n  }\r\n\r\n  /** The UI doesn't update reliably :(, so we copy the data to local variables */\r\n  private autosyncObservablesToEnsureUiUpdates(): any {\r\n    this.state.app$.subscribe(a => this.app = a);\r\n    this.state.templates$.subscribe(t => this.templates = t);\r\n    this.state.template$.subscribe(t => this.template = t);\r\n    this.state.types$.subscribe(t => this.types = t);\r\n    this.state.type$.subscribe(t => this.contentType = t);\r\n\r\n    this.ready$.subscribe(r => this.ready = r);\r\n    merge(\r\n      this.ready$,\r\n      this.state.app$,\r\n      this.state.type$,\r\n      this.state.types$,\r\n      this.state.template$,\r\n      this.state.templates$,\r\n      ).subscribe(() => this.cdRef.detectChanges());\r\n  }\r\n\r\n\r\n  private initValuesFromBridge(config: IQuickDialogConfig): void {\r\n    this.preventTypeSwitch = config.hasContent;\r\n    this.isBadContextForInstaller = config.isInnerContent;\r\n    this.isContent = config.isContent;\r\n    this.supportsAjax = this.isContent || config.supportsAjax;\r\n    this.showAdvanced = config.user.canDesign;\r\n    this.preventAppSwich = config.hasContent;\r\n    this.showCancel = config.templateId != null;\r\n  }\r\n\r\n  //#region basic UI action binding\r\n  cancel(): void { this.bridge.cancel(); }\r\n\r\n  run(action: string): void { this.bridge.run(action); }\r\n\r\n  persistTemplate(template: Template) { this.bridge.setTemplate(template.TemplateId, template.Name, true); }\r\n\r\n  /**\r\n   * app selection from UI\r\n   */\r\n  selectApp(before: App, after: App): void {\r\n    console.log('selectApp()');\r\n    if (before && before.AppId === after.AppId) this.switchTab();\r\n    else this.updateApp(after);\r\n  }\r\n\r\n  /**\r\n   * content-type selection from UI\r\n   */\r\n  selectContentType(before: ContentType, after: ContentType): void {\r\n    if (before && before.StaticName === after.StaticName) this.switchTab();\r\n    else this.setContentType(after);\r\n  }\r\n\r\n  /**\r\n   * activate a template from the UI\r\n   */\r\n  selectTemplate(template: Template): void {\r\n    this.state.activateTemplate(template);\r\n  }\r\n  //#endregion\r\n\r\n  private setContentType(contentType: ContentType): void {\r\n    log.add(`select content-type '${contentType.Name}'; prevent: ${this.preventTypeSwitch}`);\r\n    if (this.preventTypeSwitch) return;\r\n    this.state.activateType(contentType);\r\n  }\r\n\r\n  switchTab() {\r\n    log.add('switchTab()');\r\n    // must delay change because of a bug in the tabs-updating\r\n    timer(100).toPromise().then(_ => this.tabIndex = 1);\r\n  }\r\n\r\n\r\n  private updateApp(newApp: App): void {\r\n    // ajax-support can change as apps are changed; for ajax, maybe both the previous and new must support it\r\n    // or just new? still WIP\r\n    const ajax = newApp.SupportsAjaxReload;\r\n    log.add(`changing app to ${newApp.AppId}; prevent-switch: ${this.preventAppSwich} use-ajax:${ajax}`);\r\n    if (this.preventAppSwich) return;\r\n\r\n\r\n    this.loading$.next(true);\r\n    this.bridge.showMessage('loading App...');\r\n    const savePromise = this.api.saveAppId(newApp.AppId.toString(), ajax);\r\n\r\n    if (ajax) {\r\n      savePromise.then(() => {\r\n        log.add('saved app, will reset some stuff');\r\n        // do this after save completed, to ensure that the module is ready on the server\r\n        log.add('calling reloadAndReInit()');\r\n        this.bridge.reloadAndReInit()\r\n          .then(newConfig => this.boot(newConfig));\r\n      });\r\n    } else {\r\n      savePromise.then(() => window.parent.location.reload());\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  private previewTemplate(t: Template): void {\r\n    log.add(`previewTemplate(${t.TemplateId}), ajax is ${this.supportsAjax}`);\r\n    this.loading$.next(true);\r\n    this.bridge\r\n      .setTemplate(t.TemplateId, t.Name, false)\r\n      .then(_ => this.loading$.next(false));\r\n  }\r\n\r\n}\r\n","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TemplatePickerComponent } from './template-picker.component';\r\nimport { TemplateFilterPipe } from './template-filter.pipe';\r\nimport { CoreModule } from 'app/core/core.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { InstallerModule } from 'app/installer/installer.module';\r\nimport { DebugPipe } from './debug.pipe';\r\nimport { ContentTypesProcessor } from './data/content-types-processor.service';\r\nimport { MaterialModule } from 'app/material-module';\r\n\r\n@NgModule({\r\n  exports: [\r\n    TemplatePickerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MaterialModule,\r\n    MatProgressBarModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    InstallerModule,\r\n    TranslateModule\r\n  ],\r\n  providers: [\r\n    TemplateFilterPipe,\r\n    ContentTypesProcessor\r\n  ],\r\n  declarations: [\r\n    TemplatePickerComponent,\r\n    TemplateFilterPipe,\r\n    DebugPipe,\r\n  ]\r\n})\r\nexport class TemplatePickerModule { }\r\n","export default \":host {\\n  width: 1000px;\\n  max-width: 100%;\\n  display: block; }\\n  :host mat-toolbar {\\n    background: transparent;\\n    color: black; }\\n  :host mat-toolbar .spacer {\\n      -webkit-box-flex: 1;\\n              flex: 1 1 auto; }\\n  :host mat-toolbar .title {\\n      font-weight: 300; }\\n  :host .table {\\n    padding: 8px; }\\n  :host .table .no-items {\\n      color: rgba(0, 0, 0, 0.6);\\n      text-align: center;\\n      margin: 16px; }\\n  :host .table .header {\\n      line-height: 48px;\\n      font-weight: 400;\\n      padding: 0 22px;\\n      color: rgba(0, 0, 0, 0.6); }\\n  :host .table .record mat-expansion-panel {\\n      -webkit-transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), margin 280ms ease;\\n      transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), margin 280ms ease; }\\n  :host .table .record mat-expansion-panel.mat-expanded {\\n        margin: 16px 0 !important; }\\n  :host .table .record mat-expansion-panel .detail {\\n        line-height: 28px;\\n        box-sizing: border-box; }\\n  :host .table .record mat-expansion-panel .detail > div {\\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n          margin-bottom: 4px;\\n          padding: 4px 0; }\\n  :host .table .record mat-expansion-panel .detail > div.changed .label,\\n          :host .table .record mat-expansion-panel .detail > div.changed .value {\\n            color: #2196F3; }\\n  :host .table .record mat-expansion-panel .detail > div:last-of-type {\\n            border-bottom: none; }\\n  :host .table .record mat-expansion-panel .detail > div .label {\\n            vertical-align: top;\\n            color: rgba(0, 0, 0, 0.6);\\n            height: 28px; }\\n  :host .table .record mat-expansion-panel .detail > div .value {\\n            cursor: pointer;\\n            vertical-align: top;\\n            height: 28px;\\n            overflow: hidden;\\n            display: inline-block;\\n            white-space: nowrap;\\n            text-overflow: ellipsis; }\\n  :host .table .record mat-expansion-panel .detail > div .value .lang {\\n              display: none; }\\n  :host .table .record mat-expansion-panel .detail > div .value.expand {\\n              height: auto; }\\n  :host .table .record mat-expansion-panel .detail > div .value.expand .lang-wrapper {\\n                position: relative;\\n                padding: 8px 0; }\\n  :host .table .record mat-expansion-panel .detail > div .value.expand .lang-wrapper .lang {\\n                  display: block;\\n                  position: absolute;\\n                  font-size: 10pt;\\n                  left: 0;\\n                  top: 0;\\n                  color: rgba(0, 0, 0, 0.6);\\n                  line-height: 12px;\\n                  font-style: italic; }\\n  :host .table .record mat-expansion-panel .detail > div .value ::ng-deep * {\\n              margin: 0; }\\n  :host .table .record mat-expansion-panel .detail > div i {\\n            vertical-align: top;\\n            height: 28px;\\n            color: rgba(0, 0, 0, 0.6);\\n            text-align: right;\\n            font-size: 8pt; }\\n  :host .table .record mat-expansion-panel mat-action-row button {\\n        margin-left: 8px;\\n        text-transform: uppercase; }\\n  :host footer {\\n    padding: 16px 22px; }\\n  :host footer button {\\n      margin-left: 8px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmVyc2lvbi1kaWFsb2cvQzpcXFByb2plY3RzXFwyc3hjLXVpXFxwcm9qZWN0c1xccXVpY2stZGlhbG9nL3NyY1xcYXBwXFx2ZXJzaW9uLWRpYWxvZ1xcZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYTtFQUNiLGVBQWU7RUFDZixjQUFjLEVBQUE7RUFIbEI7SUFLUSx1QkFBdUI7SUFDdkIsWUFBdUIsRUFBQTtFQU4vQjtNQVFZLG1CQUFjO2NBQWQsY0FBYyxFQUFBO0VBUjFCO01BV1ksZ0JBQWdCLEVBQUE7RUFYNUI7SUFlUSxZQUFZLEVBQUE7RUFmcEI7TUFpQlkseUJBQXdCO01BQ3hCLGtCQUFrQjtNQUNsQixZQUFZLEVBQUE7RUFuQnhCO01Bc0JZLGlCQUFpQjtNQUNqQixnQkFBZ0I7TUFDaEIsZUFBZTtNQUNmLHlCQUF3QixFQUFBO0VBekJwQztNQTZCZ0Isb0ZBQTBFO01BQTFFLDRFQUEwRSxFQUFBO0VBN0IxRjtRQStCb0IseUJBQXlCLEVBQUE7RUEvQjdDO1FBa0NvQixpQkFBaUI7UUFDakIsc0JBQXNCLEVBQUE7RUFuQzFDO1VBcUN3QiwyQ0FBMEM7VUFDMUMsa0JBQWtCO1VBQ2xCLGNBQWMsRUFBQTtFQXZDdEM7O1lBMkNnQyxjQUFjLEVBQUE7RUEzQzlDO1lBK0M0QixtQkFBbUIsRUFBQTtFQS9DL0M7WUFrRDRCLG1CQUFtQjtZQUNuQix5QkFBd0I7WUFDeEIsWUFBWSxFQUFBO0VBcER4QztZQXVENEIsZUFBZTtZQUNmLG1CQUFtQjtZQUNuQixZQUFZO1lBQ1osZ0JBQWdCO1lBQ2hCLHFCQUFxQjtZQUNyQixtQkFBbUI7WUFDbkIsdUJBQXVCLEVBQUE7RUE3RG5EO2NBK0RnQyxhQUFhLEVBQUE7RUEvRDdDO2NBa0VnQyxZQUFZLEVBQUE7RUFsRTVDO2dCQW9Fb0Msa0JBQWtCO2dCQUNsQixjQUFjLEVBQUE7RUFyRWxEO2tCQXVFd0MsY0FBYztrQkFDZCxrQkFBa0I7a0JBQ2xCLGVBQWU7a0JBQ2YsT0FBTztrQkFDUCxNQUFNO2tCQUNOLHlCQUF3QjtrQkFDeEIsaUJBQWlCO2tCQUNqQixrQkFBa0IsRUFBQTtFQTlFMUQ7Y0FtRmdDLFNBQVMsRUFBQTtFQW5GekM7WUF1RjRCLG1CQUFtQjtZQUNuQixZQUFZO1lBQ1oseUJBQXdCO1lBQ3hCLGlCQUFpQjtZQUNqQixjQUFjLEVBQUE7RUEzRjFDO1FBaUd3QixnQkFBZ0I7UUFDaEIseUJBQXlCLEVBQUE7RUFsR2pEO0lBeUdRLGtCQUFrQixFQUFBO0VBekcxQjtNQTJHWSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3ZlcnNpb24tZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIHdpZHRoOiAxMDAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hdC10b29sYmFyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAxKTtcclxuICAgICAgICAuc3BhY2VyIHtcclxuICAgICAgICAgICAgZmxleDogMSAxIGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC50aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnRhYmxlIHtcclxuICAgICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgICAgLm5vLWl0ZW1zIHtcclxuICAgICAgICAgICAgY29sb3I6IHJnYmEoMCwgMCAsMCwgLjYpO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMTZweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmhlYWRlciB7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiA0OHB4O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDIycHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLnJlY29yZCB7XHJcbiAgICAgICAgICAgIG1hdC1leHBhbnNpb24tcGFuZWwge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAyODBtcyBjdWJpYy1iZXppZXIoLjQsIDAsIC4yLCAxKSwgbWFyZ2luIDI4MG1zIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAmLm1hdC1leHBhbmRlZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxNnB4IDAgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC5kZXRhaWwge1xyXG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgICAgICAgICAgICAgICAgPmRpdiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIC4xKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA0cHggMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJi5jaGFuZ2VkIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5sYWJlbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC52YWx1ZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMyMTk2RjM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAubGFiZWwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjhweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudmFsdWUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjhweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAubGFuZyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICYuZXhwYW5kIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmxhbmctd3JhcHBlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogOHB4IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5sYW5nIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMHB0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOjpuZy1kZWVwICoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI4cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuNik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogOHB0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbWF0LWFjdGlvbi1yb3cge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZm9vdGVyIHtcclxuICAgICAgICBwYWRkaW5nOiAxNnB4IDIycHg7XHJcbiAgICAgICAgYnV0dG9uIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19 */\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SxcVersionsService } from 'app/version-dialog/sxc-versions.service';\r\nimport { Version } from 'app/version-dialog/version';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss'],\r\n})\r\nexport class DialogComponent {\r\n  versions: Version[] = [];\r\n  versionParam: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    public sxcVersion: SxcVersionsService\r\n  ) { }\r\n\r\n  restoreLive(version: Version) {\r\n    this.sxcVersion.restore(version.ChangeSetId)\r\n      .subscribe(res => res ? window.parent.location.reload() : alert('restore failed miserably'));\r\n  }\r\n\r\n  restoreDraft(version) {\r\n    this.dialog.open(ConfirmRestoreDialog, {\r\n      data: { version, isDraft: true },\r\n    }).afterClosed()\r\n      .subscribe(res => res ? alert('restoring draft') : undefined);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'confirm-restore-dialog',\r\n  template: `\r\n    <div class=\"content\">\r\n      <div class=\"title\">Restoring {{data.isDraft ? 'draft' : 'live'}} to version <b>{{data.version.ChangeSetId}}</b>.</div>\r\n      <div fxLayout=\"row\">\r\n        <button mat-button [mat-dialog-close]=\"false\">abort</button>\r\n        <span fxFlex></span>\r\n        <button mat-raised-button [mat-dialog-close]=\"true\">proceed</button>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class ConfirmRestoreDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmRestoreDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ReplaySubject ,  Observable } from 'rxjs';\r\nimport { Version } from 'app/version-dialog/version';\r\nimport { SxcRoot } from '../../../../sxc-typings/index.d';\r\nimport { Config } from '../config';\r\n\r\ndeclare const $2sxc: SxcRoot;\r\n\r\n@Injectable()\r\nexport class SxcVersionsService {\r\n  versions: Observable<Version[]>;\r\n  error: Observable<string>;\r\n\r\n  private versionsSubject: ReplaySubject<Version[]>;\r\n  private errorSubject: ReplaySubject<string>;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    this.versionsSubject = new ReplaySubject<Version[]>(1);\r\n    this.versions = this.versionsSubject.asObservable();\r\n\r\n    this.errorSubject = new ReplaySubject<string>(1);\r\n    this.error = this.errorSubject.asObservable();\r\n\r\n    this.loadVersions();\r\n  }\r\n\r\n  restore(changeId: number): Observable<any> {\r\n    const appId = Config.appId();\r\n    const item = Config.item();\r\n    const url = `eav/entities/restore?appId=${appId}&changeId=${changeId}`;\r\n\r\n    return this.http.post<any>(url, item);\r\n  }\r\n\r\n  private loadVersions(): void {\r\n    const appId = Config.appId();\r\n    const item = Config.item();\r\n    const url = `eav/entities/history?appId=${appId}`;\r\n\r\n    this.http.post<any[]>(url, item).pipe(\r\n      map(res => res\r\n        .map((v, i, all) => Object.assign(v, {\r\n          Data: (() => {\r\n            let lastVersion = all.find(v2 => v2.VersionNumber === v.VersionNumber - 1);\r\n            const attr = JSON.parse(v.Json).Entity.Attributes;\r\n\r\n            if (lastVersion) {\r\n              lastVersion = JSON.parse(lastVersion.Json).Entity.Attributes;\r\n            }\r\n\r\n            return Object.entries(attr)\r\n              .reduce((t, c) => Array.prototype.concat(t, Object.entries(c[1])\r\n                .map(([key, value]) => ({\r\n                  key,\r\n                  value: Object.entries(value),\r\n                  type: c[0],\r\n                  hasChanged: lastVersion\r\n                    ? JSON.stringify(lastVersion[c[0]][key]) !== JSON.stringify(value)\r\n                    : false\r\n                }))), []);\r\n          })(),\r\n          TimeStamp: (timestamp => {\r\n            const date = new Date(timestamp);\r\n            const y = date.getFullYear();\r\n            const m = date.getUTCMonth() + 1;\r\n            const d = date.getDate();\r\n            const h = date.getHours();\r\n            const min = date.getMinutes();\r\n            return `${y}-${m < 10 ? '0' : ''}${m}-${d < 10 ? '0' : ''}${d} ${h < 10 ? '0' : ''}${h}:${min < 10 ? '0' : ''}${min}`;\r\n          })(v.TimeStamp),\r\n        }))))\r\n      .subscribe(v => this.versionsSubject.next(v), () => {\r\n          this.errorSubject.next('Could not load versions for this item. Please make sure to assign an initial content.');\r\n        });\r\n  }\r\n}\r\n","import {TranslateModule} from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SxcVersionsService } from 'app/version-dialog/sxc-versions.service';\r\nimport { DialogComponent, ConfirmRestoreDialog } from 'app/version-dialog/dialog.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MaterialModule } from 'app/material-module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  exports: [\r\n    DialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    TranslateModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n  ],\r\n  providers: [\r\n    SxcVersionsService,\r\n  ],\r\n  declarations: [\r\n    DialogComponent,\r\n    ConfirmRestoreDialog,\r\n  ],\r\n  entryComponents: [\r\n    DialogComponent,\r\n    ConfirmRestoreDialog,\r\n  ],\r\n})\r\nexport class VersionDialogModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","\r\nimport {startWith} from 'rxjs/operators';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { BootController } from './app/core/boot-control';\r\nimport { log } from 'app/core/log';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nlog.add('loading main.ts');\r\n\r\ndeclare const window;\r\nconst platform = platformBrowserDynamic();\r\n\r\nfunction init() {\r\n  log.add('init()');\r\n\r\n  try {\r\n    // kill listeners\r\n    if (!platform.destroyed)\r\n      platform.destroy();\r\n  } catch (e) {\r\n    console.log('platform destroy error', e);\r\n  }\r\n\r\n  // must re-create the object here, otherwise AOT compiler optimizations\r\n  // break these lines of code\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n    .then(() => window.appBootstrap && window.appBootstrap())\r\n    .catch(err => console.error('NG Bootstrap Error =>', err));\r\n};\r\n\r\n\r\n// provide hook for outside reboot calls\r\nconst bootController = window.bootController = BootController.getRebootController();\r\n\r\n// Init on reboot request.\r\nbootController.rebootRequest$.pipe(\r\n  startWith(true)) // Init on first load.\r\n  .subscribe(() => init());\r\n"],"sourceRoot":"webpack:///"}