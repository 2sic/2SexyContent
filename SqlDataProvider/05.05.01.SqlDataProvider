-- make sure sql rolls back automatically in case of error.
SET XACT_ABORT ON

BEGIN TRANSACTION SexyContentUpdate;

EXEC ToSIC_EAV_ChangeLogAdd 'System'

DECLARE @ChangeLogID int
SET @ChangeLogID = CONVERT(int,CONVERT(varbinary(4),CONTEXT_INFO()))
SELECT @ChangeLogID

-- Create new AssignmentObjectType for Apps
UPDATE       ToSIC_EAV_AssignmentObjectTypes
SET                Name = N'App', Description = N'App'
WHERE        (AssignmentObjectTypeID = 3)

-- Get App ContentType (which should not exists yet)
DECLARE @AppAttributeSetID int
SELECT @AppAttributeSetID = AttributeSetID 
FROM ToSIC_EAV_AttributeSets
WHERE StaticName = '2SexyContent-App'
AND AppID = 1

-- Create new AttributeSet for Apps (if it does not exist yet)
IF @AppAttributeSetID IS NULL
BEGIN
	INSERT INTO ToSIC_EAV_AttributeSets (StaticName, Name, Scope, Description, ChangeLogCreated, ChangeLogDeleted, AppID, UsesConfigurationOfAttributeSet, AlwaysShareConfiguration)
	VALUES (N'2SexyContent-App', N'2SexyContent-App', N'2SexyContent-App', N'Describes a 2SexyContent app', @ChangeLogID, NULL, 1, NULL, 1)

	SELECT @AppAttributeSetID = AttributeSetID FROM ToSIC_EAV_AttributeSets WHERE StaticName = '2SexyContent-App' AND Scope = N'2SexyContent-App'

	DECLARE @AttributeID int

	-- Insert Attribute DisplayName
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('DisplayName', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 1, 0, 1)

	-- Insert Attribute Description
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Description', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 1, 1)

	-- Insert Attribute Version
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Version', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 2, 1)

	-- Insert Attribute Folder
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Folder', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 3, 1)

	-- Insert Attribute AllowTokenTemplates
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('AllowTokenTemplates', 'Boolean', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 4, 1)

	-- Insert Attribute AllowRazorTemplates
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('AllowRazorTemplates', 'Boolean', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 5, 1)

	-- Insert Attribute Hidden
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Hidden', 'Boolean', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()	
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 6, 1)

	-- Make sure every existing app has this attributeset (ghost / shared-attributeset)
	INSERT INTO ToSIC_EAV_AttributeSets
                         (ChangeLogCreated, StaticName, Name, Scope, Description, AppID, UsesConfigurationOfAttributeSet)
	SELECT        @ChangeLogID, DestinationAttributeSets.StaticName, DestinationAttributeSets.Name, DestinationAttributeSets.Scope, DestinationAttributeSets.Description, 
							 DestinationAttributeSets.AppID, DestinationAttributeSets.AttributeSetID AS UsesConfigurationOfAttributeSet
	FROM            (SELECT        ToSIC_EAV_AttributeSets_1.AttributeSetID, ToSIC_EAV_AttributeSets_1.StaticName, ToSIC_EAV_AttributeSets_1.Name, 
														ToSIC_EAV_AttributeSets_1.Scope, ToSIC_EAV_AttributeSets_1.Description, ToSIC_EAV_Apps.AppID
							  FROM            ToSIC_EAV_AttributeSets AS ToSIC_EAV_AttributeSets_1 INNER JOIN
														ToSIC_EAV_Apps ON ToSIC_EAV_AttributeSets_1.AppID <> ToSIC_EAV_Apps.AppID
							  WHERE        (ToSIC_EAV_AttributeSets_1.AlwaysShareConfiguration = 1) AND (ToSIC_EAV_AttributeSets_1.AppID = 1)) AS DestinationAttributeSets LEFT OUTER JOIN
							 ToSIC_EAV_AttributeSets AS ExistingAttributeSets ON DestinationAttributeSets.AppID = ExistingAttributeSets.AppID AND 
							 DestinationAttributeSets.StaticName = ExistingAttributeSets.StaticName
	WHERE        (ExistingAttributeSets.AttributeSetID IS NULL)

END



-- Commit the transaction
COMMIT TRANSACTION SexyContentUpdate;
--ROLLBACK TRANSACTION SexyContentUpdate;